From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: DoctaEnkoda <bierquejason@gmail.com>
Date: Mon, 3 May 2021 01:33:14 +0200
Subject: [PATCH] Allows to display progress messages by player instead to
 everyone on the server.


diff --git a/src/main/java/net/minecraft/server/AdvancementDataPlayer.java b/src/main/java/net/minecraft/server/AdvancementDataPlayer.java
index a1ee1066108985a95abddb03ff447b5a14f4f85f..4720644ae82f76f835f14c0b3a00e7b7874fb1e2 100644
--- a/src/main/java/net/minecraft/server/AdvancementDataPlayer.java
+++ b/src/main/java/net/minecraft/server/AdvancementDataPlayer.java
@@ -60,7 +60,7 @@ public class AdvancementDataPlayer {
     private static final TypeToken<Map<MinecraftKey, AdvancementProgress>> c = new TypeToken<Map<MinecraftKey, AdvancementProgress>>() {
     };
     private final DataFixer d;
-    private final PlayerList e;
+    private final PlayerList e; public PlayerList getPlayerList() { return e; } // Purpur - OBFHELPER
     private final File f;
     public final Map<Advancement, AdvancementProgress> data = Maps.newLinkedHashMap();
     private final Set<Advancement> h = Sets.newLinkedHashSet();
@@ -325,7 +325,13 @@ public class AdvancementDataPlayer {
                 advancement.d().a(this.player);
                 // Paper start - Add Adventure message to PlayerAdvancementDoneEvent
                 if (message != null && this.player.world.getGameRules().getBoolean(GameRules.ANNOUNCE_ADVANCEMENTS)) {
-                    this.e.sendMessage(PaperAdventure.asVanilla(message), ChatMessageType.SYSTEM, SystemUtils.getNullUUID());
+                    // Purpur Start - AdvancementMessage By Player
+                    if (net.pl3x.purpur.PurpurConfig.advancementOnlyBroadcastToAffectedPlayer) {
+                        this.player.sendMessage(PaperAdventure.asVanilla(message), SystemUtils.getNullUUID());
+                    } else {
+                        getPlayerList().sendMessage(PaperAdventure.asVanilla(message), ChatMessageType.SYSTEM, SystemUtils.getNullUUID());
+                    }
+                    // Purpur End
                     // Paper end
                 }
             }
diff --git a/src/main/java/net/pl3x/purpur/PurpurConfig.java b/src/main/java/net/pl3x/purpur/PurpurConfig.java
index 56424e45c04e7165c0671f74cdcd0147d1069af7..7e8654e4df61527f33d4fce2afdb14e29b90a4c2 100644
--- a/src/main/java/net/pl3x/purpur/PurpurConfig.java
+++ b/src/main/java/net/pl3x/purpur/PurpurConfig.java
@@ -287,4 +287,9 @@ public class PurpurConfig {
     private static void tpsCatchup() {
         tpsCatchup = getBoolean("settings.tps-catchup", tpsCatchup);
     }
+
+    public static boolean advancementOnlyBroadcastToAffectedPlayer = false;
+    private static void advancementSettings() {
+        advancementOnlyBroadcastToAffectedPlayer  = getBoolean("settings.advancement.only-broadcast-to-affected-player", advancementOnlyBroadcastToAffectedPlayer );
+    }
 }
