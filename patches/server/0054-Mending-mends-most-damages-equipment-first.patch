From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: William Blake Galbreath <blake.galbreath@gmail.com>
Date: Sun, 14 Jul 2019 19:52:47 -0500
Subject: [PATCH] Mending mends most damages equipment first


diff --git a/src/main/java/net/minecraft/world/entity/ExperienceOrb.java b/src/main/java/net/minecraft/world/entity/ExperienceOrb.java
index 15844971ce2cca8c679ad3aaa2dfe160e6d0b564..6598a737db11fb0c7e7a95b9bbfaabd75895cbdd 100644
--- a/src/main/java/net/minecraft/world/entity/ExperienceOrb.java
+++ b/src/main/java/net/minecraft/world/entity/ExperienceOrb.java
@@ -20,6 +20,7 @@ import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.enchantment.EnchantedItemInUse;
 import net.minecraft.world.item.enchantment.EnchantmentEffectComponents;
 import net.minecraft.world.item.enchantment.EnchantmentHelper;
+import net.minecraft.world.item.enchantment.Enchantments;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.entity.EntityTypeTest;
 import net.minecraft.world.phys.AABB;
@@ -347,7 +348,7 @@ public class ExperienceOrb extends Entity {
     }
 
     private int repairPlayerItems(ServerPlayer player, int amount) {
-        Optional<EnchantedItemInUse> optional = EnchantmentHelper.getRandomItemWith(EnchantmentEffectComponents.REPAIR_WITH_XP, player, ItemStack::isDamaged);
+        Optional<EnchantedItemInUse> optional = level().purpurConfig.useBetterMending ? EnchantmentHelper.getMostDamagedEquipment(Enchantments.MENDING, player) : EnchantmentHelper.getRandomItemWith(EnchantmentEffectComponents.REPAIR_WITH_XP, player, ItemStack::isDamaged); // Purpur
 
         if (optional.isPresent()) {
             ItemStack itemstack = ((EnchantedItemInUse) optional.get()).itemStack();
diff --git a/src/main/java/net/minecraft/world/item/ItemStack.java b/src/main/java/net/minecraft/world/item/ItemStack.java
index 86197725f0f2ac1e650297ae7a79907578e0e8f1..5e86f7d7d7594bd82c50db6d17763a50dc58e7a5 100644
--- a/src/main/java/net/minecraft/world/item/ItemStack.java
+++ b/src/main/java/net/minecraft/world/item/ItemStack.java
@@ -643,6 +643,16 @@ public final class ItemStack implements DataComponentHolder {
         return this.isDamageableItem() && this.getDamageValue() > 0;
     }
 
+    // Purpur start
+    public float getDamagePercent() {
+        if (isDamaged()) {
+            return (float) getDamageValue() / (float) getMaxDamage();
+        } else {
+            return 0F;
+        }
+    }
+    // Purpur end
+
     public int getDamageValue() {
         return Mth.clamp((Integer) this.getOrDefault(DataComponents.DAMAGE, 0), 0, this.getMaxDamage());
     }
diff --git a/src/main/java/net/minecraft/world/item/enchantment/EnchantmentHelper.java b/src/main/java/net/minecraft/world/item/enchantment/EnchantmentHelper.java
index 39b1229a93d0369719231aa05d0b04224da789a4..0837bcd3cfc02d76918913df24571efb5890c384 100644
--- a/src/main/java/net/minecraft/world/item/enchantment/EnchantmentHelper.java
+++ b/src/main/java/net/minecraft/world/item/enchantment/EnchantmentHelper.java
@@ -6,6 +6,7 @@ import it.unimi.dsi.fastutil.objects.Object2IntMap.Entry;
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.List;
+import java.util.Map;
 import java.util.Optional;
 import java.util.function.BiConsumer;
 import java.util.function.Consumer;
@@ -566,5 +567,36 @@ public class EnchantmentHelper {
         Holder.Reference<Enchantment> reference = registryLookup.getOrThrow(enchantment);
         return getItemEnchantmentLevel(reference, stack);
     }
+
+    public static Optional<EnchantedItemInUse> getMostDamagedEquipment(ResourceKey<Enchantment> enchantment, LivingEntity entity) {
+        net.minecraft.core.HolderLookup.RegistryLookup<Enchantment> registryLookup = entity.registryAccess().lookupOrThrow(Registries.ENCHANTMENT);
+        Holder.Reference<Enchantment> reference = registryLookup.getOrThrow(enchantment);
+        Enchantment value = reference.value();
+
+        Map<EquipmentSlot, ItemStack> items = value.getSlotItems(entity);
+        if (items.isEmpty()) {
+            return Optional.empty();
+        }
+
+        Map.Entry<EquipmentSlot, ItemStack> item = null;
+        float maxPercent = 0F;
+
+        for (Map.Entry<EquipmentSlot, ItemStack> entry : items.entrySet()) {
+            ItemStack itemstack = entry.getValue();
+
+            if (!itemstack.isEmpty() && itemstack.isDamaged() && getItemEnchantmentLevel(reference, itemstack) > 0) {
+                float percent = itemstack.getDamagePercent();
+
+                if (item == null || percent > maxPercent) {
+                    item = entry;
+                    maxPercent = percent;
+                }
+            }
+        }
+
+        return item != null
+            ? Optional.of(new EnchantedItemInUse(item.getValue(), item.getKey(), entity))
+            : Optional.empty();
+    }
     // Purpur end
 }
diff --git a/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java b/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java
index 351ae7471ff93d1eebd301e2163d9f99248b2174..109406c835b2c6d080cc7ea6d66562d61670aeb6 100644
--- a/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java
+++ b/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java
@@ -95,6 +95,7 @@ public class PurpurWorldConfig {
         armorstandStepHeight = (float) getDouble("gameplay-mechanics.armorstand.step-height", armorstandStepHeight);
     }
 
+    public boolean useBetterMending = false;
     public boolean boatEjectPlayersOnLand = false;
     public boolean disableDropsOnCrammingDeath = false;
     public boolean milkCuresBadOmen = true;
@@ -102,6 +103,7 @@ public class PurpurWorldConfig {
     public double voidDamageHeight = -64.0D;
     public double voidDamageDealt = 4.0D;
     private void miscGameplayMechanicsSettings() {
+        useBetterMending = getBoolean("gameplay-mechanics.use-better-mending", useBetterMending);
         boatEjectPlayersOnLand = getBoolean("gameplay-mechanics.boat.eject-players-on-land", boatEjectPlayersOnLand);
         disableDropsOnCrammingDeath = getBoolean("gameplay-mechanics.disable-drops-on-cramming-death", disableDropsOnCrammingDeath);
         milkCuresBadOmen = getBoolean("gameplay-mechanics.milk-cures-bad-omen", milkCuresBadOmen);
