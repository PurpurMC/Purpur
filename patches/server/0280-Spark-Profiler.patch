From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Ben Kerllenevich <ben@omega24.dev>
Date: Sat, 25 Jun 2022 19:40:36 -0400
Subject: [PATCH] Spark Profiler


diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 7960433f8278e3bd0ec43db3d3820ff2740a7c13..c0dab34feadf9e3e681a78ff8717e8c059b04cac 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -410,13 +410,43 @@ public final class CraftServer implements Server {
         this.pluginManager.registerInterface(JavaPluginLoader.class);
 
         File pluginFolder = this.getPluginsFolder(); // Paper
+        boolean sparkLoaded = false; // Purpur
 
         // Paper start
         if (true || pluginFolder.exists()) {
             if (!pluginFolder.exists()) {
                 pluginFolder.mkdirs();
             }
-            Plugin[] plugins = this.pluginManager.loadPlugins(pluginFolder, this.extraPluginJars());
+            // Purpur start
+            List<File> extraJars = this.extraPluginJars();
+            try {
+                File file = new File("cache", "spark.jar");
+                file.getParentFile().mkdirs();
+
+                boolean shouldDownload = true;
+                if (file.exists()) {
+                    String fileSha1 = String.format("%040x", new java.math.BigInteger(1, java.security.MessageDigest.getInstance("SHA-1").digest(java.nio.file.Files.readAllBytes(file.toPath()))));
+                    String sparkSha1;
+                    try (java.io.BufferedReader reader = new java.io.BufferedReader(new InputStreamReader(new java.net.URL("https://sparkapi.lucko.me/download/bukkit/sha1").openStream()))) {
+                        sparkSha1 = reader.lines().collect(Collectors.joining(""));
+                    }
+
+                    if (fileSha1.equals(sparkSha1)) {
+                        shouldDownload = false;
+                    }
+                }
+
+                if (shouldDownload) {
+                    java.nio.file.Files.copy(new java.net.URL("https://sparkapi.lucko.me/download/bukkit").openStream(), file.toPath(), java.nio.file.StandardCopyOption.REPLACE_EXISTING);
+                }
+
+                extraJars.add(file);
+            } catch (Exception e) {
+                getLogger().severe("Purpur: Failed to download and install spark plugin");
+                e.printStackTrace();
+            }
+            Plugin[] plugins = this.pluginManager.loadPlugins(pluginFolder, extraJars);
+            // Purpur end
             // Paper end
             for (Plugin plugin : plugins) {
                 try {
