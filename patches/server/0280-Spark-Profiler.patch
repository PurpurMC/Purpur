From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Ben Kerllenevich <ben@omega24.dev>
Date: Sat, 25 Jun 2022 19:40:36 -0400
Subject: [PATCH] Spark Profiler


diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 7960433f8278e3bd0ec43db3d3820ff2740a7c13..a36462ce16822395a098c5f9569a7ceec350eba9 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -410,6 +410,7 @@ public final class CraftServer implements Server {
         this.pluginManager.registerInterface(JavaPluginLoader.class);
 
         File pluginFolder = this.getPluginsFolder(); // Paper
+        boolean sparkLoaded = false; // Purpur
 
         // Paper start
         if (true || pluginFolder.exists()) {
@@ -423,6 +424,7 @@ public final class CraftServer implements Server {
                     String message = String.format("Loading %s", plugin.getDescription().getFullName());
                     plugin.getLogger().info(message);
                     plugin.onLoad();
+                    sparkLoaded = sparkLoaded || plugin.getDescription().getName().equalsIgnoreCase("spark"); // Purpur
                 } catch (Throwable ex) {
                     Logger.getLogger(CraftServer.class.getName()).log(Level.SEVERE, ex.getMessage() + " initializing " + plugin.getDescription().getFullName() + " (Is it up to date?)", ex);
                 }
@@ -430,6 +432,31 @@ public final class CraftServer implements Server {
         } else {
             pluginFolder.mkdir();
         }
+
+        // Purpur start
+        if (!sparkLoaded) {
+            try {
+                File file = new File("cache", "spark.jar");
+                try (java.io.BufferedInputStream in = new java.io.BufferedInputStream(new java.net.URL("https://ci.lucko.me/job/spark/317/artifact/spark-bukkit/build/libs/spark-1.9.15-bukkit.jar").openStream()); java.io.FileOutputStream out = new java.io.FileOutputStream(file)) {
+                    byte[] dataBuffer = new byte[1024];
+                    int bytesRead;
+                    while ((bytesRead = in.read(dataBuffer, 0, 1024)) != -1) {
+                        out.write(dataBuffer, 0, bytesRead);
+                    }
+                    out.flush();
+                } catch (IOException e) {
+                    e.printStackTrace();
+                }
+                Plugin spark = this.pluginManager.loadPlugin(file);
+                String message = String.format("Loading %s", spark.getDescription().getFullName());
+                spark.getLogger().info(message);
+                spark.onLoad();
+            } catch (Exception e) {
+                getLogger().severe("Failed to download and load spark plugin");
+                e.printStackTrace();
+            }
+        }
+        // Purpur end
     }
 
     // Paper start
