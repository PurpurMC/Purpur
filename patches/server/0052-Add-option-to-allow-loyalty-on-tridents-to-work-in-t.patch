From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: William Blake Galbreath <blake.galbreath@gmail.com>
Date: Thu, 19 Mar 2020 19:39:34 -0500
Subject: [PATCH] Add option to allow loyalty on tridents to work in the void


diff --git a/src/main/java/net/minecraft/world/entity/projectile/ThrownTrident.java b/src/main/java/net/minecraft/world/entity/projectile/ThrownTrident.java
index 1b31b32d42eeb54680b902cd7e82d10ba7daa5d0..5cb009b2132bf95df5639decbc950d76fba804ca 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/ThrownTrident.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/ThrownTrident.java
@@ -60,7 +60,7 @@ public class ThrownTrident extends AbstractArrow {
         Entity entity = this.getOwner();
         byte b0 = (Byte) this.entityData.get(ThrownTrident.ID_LOYALTY);
 
-        if (b0 > 0 && (this.dealtDamage || this.isNoPhysics()) && entity != null) {
+        if (b0 > 0 && (this.dealtDamage || this.isNoPhysics() || (level.purpurConfig().gameplayMechanics.voidSettings.loyaltyTridentReturnHeight < 0.0D && getY() < level.purpurConfig().gameplayMechanics.voidSettings.loyaltyTridentReturnHeight)) && entity != null) { // Purpur
             if (!this.isAcceptibleReturnOwner()) {
                 if (!this.level.isClientSide && this.pickup == AbstractArrow.Pickup.ALLOWED) {
                     this.spawnAtLocation(this.getPickupItem(), 0.1F);
diff --git a/src/main/java/org/purpurmc/purpur/configuration/PurpurWorldConfiguration.java b/src/main/java/org/purpurmc/purpur/configuration/PurpurWorldConfiguration.java
index bbbdcd1ec5bf6ead16445ef0eb6bce8b9281da35..b8ba55696db86700d538fbccda3910feef48ed4b 100644
--- a/src/main/java/org/purpurmc/purpur/configuration/PurpurWorldConfiguration.java
+++ b/src/main/java/org/purpurmc/purpur/configuration/PurpurWorldConfiguration.java
@@ -1308,6 +1308,12 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
             public double baseSpeed = 0.1D;
             public Map<Block, Double> blockSpeeds = new HashMap<>();
         }
+
+        @Setting("void")
+        public Void voidSettings;
+        public class Void extends ConfigurationPart {
+            public double loyaltyTridentReturnHeight = 0.0D;
+        }
     }
 
     public Blocks blocks;
