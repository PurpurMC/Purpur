From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: 12emin34 <macanovic.emin@gmail.com>
Date: Sat, 12 Feb 2022 01:08:18 +0100
Subject: [PATCH] Anvil repair/damage options


diff --git a/src/main/java/net/minecraft/world/level/block/AnvilBlock.java b/src/main/java/net/minecraft/world/level/block/AnvilBlock.java
index 2aac479ce9886cfef99823a41205eb52b7996d26..ff9945a04ffbda5766bc794fced24f14d8efcdeb 100644
--- a/src/main/java/net/minecraft/world/level/block/AnvilBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/AnvilBlock.java
@@ -55,6 +55,54 @@ public class AnvilBlock extends FallingBlock {
 
     @Override
     public InteractionResult use(BlockState state, Level world, BlockPos pos, Player player, InteractionHand hand, BlockHitResult hit) {
+        // Purpur start - repairable/damageable anvils
+        if (world.purpurConfig.anvilRepairIngotsAmount > 0) {
+            net.minecraft.world.item.ItemStack itemstack = player.getItemInHand(hand);
+            if (itemstack.is(net.minecraft.world.item.Items.IRON_INGOT)) {
+                if (itemstack.getCount() < world.purpurConfig.anvilRepairIngotsAmount) {
+                    // not enough iron ingots, play "error" sound and consume
+                    world.playSound(null, pos, net.minecraft.sounds.SoundEvents.ANVIL_HIT, net.minecraft.sounds.SoundSource.BLOCKS, 1.0F, 1.0F);
+                    return InteractionResult.CONSUME;
+                }
+                if (state.is(Blocks.DAMAGED_ANVIL)) {
+                    world.setBlock(pos, Blocks.CHIPPED_ANVIL.defaultBlockState().setValue(FACING, state.getValue(FACING)), 3);
+                } else if (state.is(Blocks.CHIPPED_ANVIL)) {
+                    world.setBlock(pos, Blocks.ANVIL.defaultBlockState().setValue(FACING, state.getValue(FACING)), 3);
+                } else if (state.is(Blocks.ANVIL)) {
+                    // anvil is already fully repaired, play "error" sound and consume
+                    world.playSound(null, pos, net.minecraft.sounds.SoundEvents.ANVIL_HIT, net.minecraft.sounds.SoundSource.BLOCKS, 1.0F, 1.0F);
+                    return InteractionResult.CONSUME;
+                }
+                if (!player.getAbilities().instabuild) {
+                    itemstack.shrink(world.purpurConfig.anvilRepairIngotsAmount);
+                }
+                world.playSound(null, pos, net.minecraft.sounds.SoundEvents.ANVIL_PLACE, net.minecraft.sounds.SoundSource.BLOCKS, 1.0F, 1.0F);
+                return InteractionResult.CONSUME;
+            }
+        }
+        if (world.purpurConfig.anvilDamageObsidianAmount > 0) {
+            net.minecraft.world.item.ItemStack itemstack = player.getItemInHand(hand);
+            if (itemstack.is(net.minecraft.world.item.Items.OBSIDIAN)) {
+                if (itemstack.getCount() < world.purpurConfig.anvilDamageObsidianAmount) {
+                    // not enough obsidian, play "error" sound and consume
+                    world.playSound(null, pos, net.minecraft.sounds.SoundEvents.ANVIL_HIT, net.minecraft.sounds.SoundSource.BLOCKS, 1.0F, 1.0F);
+                    return InteractionResult.CONSUME;
+                }
+                if (state.is(Blocks.DAMAGED_ANVIL)) {
+                    world.destroyBlock(pos, false);
+                } else if (state.is(Blocks.CHIPPED_ANVIL)) {
+                    world.setBlock(pos, Blocks.DAMAGED_ANVIL.defaultBlockState().setValue(FACING, state.getValue(FACING)), 3);
+                } else if (state.is(Blocks.ANVIL)) {
+                    world.setBlock(pos, Blocks.CHIPPED_ANVIL.defaultBlockState().setValue(FACING, state.getValue(FACING)), 3);
+                }
+                if (!player.getAbilities().instabuild) {
+                    itemstack.shrink(world.purpurConfig.anvilDamageObsidianAmount);
+                }
+                world.playSound(null, pos, net.minecraft.sounds.SoundEvents.ANVIL_LAND, net.minecraft.sounds.SoundSource.BLOCKS, 1.0F, 1.0F);
+                return InteractionResult.CONSUME;
+            }
+        }
+        // Purpur end
         if (world.isClientSide) {
             return InteractionResult.SUCCESS;
         } else {
diff --git a/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java b/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java
index d284e00ae2ac02204e241cfdb2a271be06872484..aa648896e58e8a07f09326e5aa038e1f0bf90226 100644
--- a/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java
+++ b/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java
@@ -721,9 +721,13 @@ public class PurpurWorldConfig {
 
     public boolean anvilAllowColors = false;
     public boolean anvilColorsUseMiniMessage;
+    public int anvilRepairIngotsAmount = 0;
+    public int anvilDamageObsidianAmount = 0;
     private void anvilSettings() {
         anvilAllowColors = getBoolean("blocks.anvil.allow-colors", anvilAllowColors);
         anvilColorsUseMiniMessage = getBoolean("blocks.anvil.use-mini-message", anvilColorsUseMiniMessage);
+        anvilRepairIngotsAmount = getInt("blocks.anvil.iron-ingots-used-for-repair", anvilRepairIngotsAmount);
+        anvilDamageObsidianAmount = getInt("blocks.anvil.obsidian-used-for-damage", anvilDamageObsidianAmount);
     }
 
     public double azaleaGrowthChance = 0.0D;
