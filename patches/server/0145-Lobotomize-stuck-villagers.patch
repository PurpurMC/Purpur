From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: BillyGalbreath <blake.galbreath@gmail.com>
Date: Thu, 3 Dec 2020 17:56:18 -0600
Subject: [PATCH] Lobotomize stuck villagers


diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 918edab475a8d33a253e3d6cd3c5655748d10dc0..4d64fb19c3c9cce41e89ba4d702e687b34620b7e 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -207,7 +207,7 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, ne
     public double lastY;
     public double lastZ;
     private Vec3D loc;
-    private BlockPosition locBlock;
+    private BlockPosition locBlock; public BlockPosition getBlockLocation() { return locBlock; } // Purpur
     private Vec3D mot;
     public float yaw;
     public float pitch;
diff --git a/src/main/java/net/minecraft/world/entity/ai/navigation/NavigationAbstract.java b/src/main/java/net/minecraft/world/entity/ai/navigation/NavigationAbstract.java
index 48e6a4c588ef39a4bde067d79b96a656c68750ce..ac7bad10697c6fde7d512753992d59710aa1e032 100644
--- a/src/main/java/net/minecraft/world/entity/ai/navigation/NavigationAbstract.java
+++ b/src/main/java/net/minecraft/world/entity/ai/navigation/NavigationAbstract.java
@@ -123,6 +123,7 @@ public abstract class NavigationAbstract {
     }
 
     @Nullable
+    public PathEntity calculateDestination(BlockPosition blockposition, int i) { return a(blockposition, i); } // Purpur - OBFHELPER
     public PathEntity a(BlockPosition blockposition, int i) {
         // Paper start - add target parameter
         return this.a(blockposition, null, i);
diff --git a/src/main/java/net/minecraft/world/entity/npc/EntityVillager.java b/src/main/java/net/minecraft/world/entity/npc/EntityVillager.java
index a0f0d5e0909da5cfe87078d4722b030635cfeadd..bc14e242f97f9f6d8e581d12319c95ae5f70f250 100644
--- a/src/main/java/net/minecraft/world/entity/npc/EntityVillager.java
+++ b/src/main/java/net/minecraft/world/entity/npc/EntityVillager.java
@@ -89,6 +89,7 @@ import net.minecraft.world.level.IWorldReader;
 import net.minecraft.world.level.World;
 import net.minecraft.world.level.WorldAccess;
 import net.minecraft.world.level.block.state.IBlockData;
+import net.minecraft.world.level.pathfinder.PathEntity;
 import net.minecraft.world.phys.AxisAlignedBB;
 import org.apache.logging.log4j.Logger;
 
@@ -260,11 +261,32 @@ public class EntityVillager extends EntityVillagerAbstract implements Reputation
 
     private int behaviorTick = 0;
 
+    // Purpur start
+    boolean lobotomized = false;
+
+    private boolean isLobotomized() {
+        if ((world.getTime() + brainTickOffset) % world.purpurConfig.villagerLobotomizeCheck == 0) {
+            this.lobotomized = !canTravelFrom(getBlockLocation().up());
+        }
+        return this.lobotomized;
+    }
+
+    private boolean canTravelFrom(BlockPosition pos) {
+        return canTravelTo(pos.east()) || canTravelTo(pos.west()) || canTravelTo(pos.north()) || canTravelTo(pos.south());
+    }
+
+    private boolean canTravelTo(BlockPosition pos) {
+        PathEntity to = navigation.calculateDestination(pos, 0);
+        return to != null && to.getPoints().size() > 1;
+    }
+    // Purpur end
+
     @Override
     protected void mobTick() { mobTick(false); }
     protected void mobTick(boolean inactive) {
         this.world.getMethodProfiler().enter("villagerBrain");
         // Purpur start
+        if (world.purpurConfig.villagerLobotomizeEnabled) inactive = inactive || isLobotomized();
         boolean tick = (world.getTime() + brainTickOffset) % world.purpurConfig.villagerBrainTicks == 0;
         if (((WorldServer) world).getMinecraftServer().lagging ? tick : world.purpurConfig.villagerUseBrainTicksOnlyWhenLagging || tick)
         // Purpur end
@@ -273,6 +295,7 @@ public class EntityVillager extends EntityVillagerAbstract implements Reputation
                 this.getBehaviorController().a((WorldServer) this.world, this); // CraftBukkit - decompile error // Paper
             }
         }
+        else if (shouldRestock()) doRestock(); // Purpur
         this.world.getMethodProfiler().exit();
         if (this.bF) {
             this.bF = false;
@@ -404,6 +427,7 @@ public class EntityVillager extends EntityVillagerAbstract implements Reputation
         return true;
     }
 
+    public void doRestock() { fb(); } // Purpur - OBFHELPER
     public void fb() {
         this.fp();
         Iterator iterator = this.getOffers().iterator();
@@ -438,6 +462,7 @@ public class EntityVillager extends EntityVillagerAbstract implements Reputation
         return this.bD == 0 || this.bD < 2 && this.world.getTime() > this.bC + 2400L;
     }
 
+    public boolean shouldRestock() { return fc(); } // Purpur - OBFHELPER
     public boolean fc() {
         long i = this.bC + 12000L;
         long j = this.world.getTime();
diff --git a/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java b/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
index d6f98a1b4bcc44bad7c8e39f31ea61cd7428f071..50cacb7ab275229c0d2fdeeca4719a565977b630 100644
--- a/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
+++ b/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
@@ -1088,6 +1088,8 @@ public class PurpurWorldConfig {
     public int villagerSpawnIronGolemLimit = 0;
     public boolean villagerCanBreed = true;
     public int villagerBreedingTicks = 6000;
+    public boolean villagerLobotomizeEnabled = false;
+    public int villagerLobotomizeCheck = 60;
     private void villagerSettings() {
         villagerRidable = getBoolean("mobs.villager.ridable", villagerRidable);
         villagerRidableInWater = getBoolean("mobs.villager.ridable-in-water", villagerRidableInWater);
@@ -1100,6 +1102,13 @@ public class PurpurWorldConfig {
         villagerSpawnIronGolemLimit = getInt("mobs.villager.spawn-iron-golem.limit", villagerSpawnIronGolemLimit);
         villagerCanBreed = getBoolean("mobs.villager.can-breed", villagerCanBreed);
         villagerBreedingTicks = getInt("mobs.villager.breeding-delay-ticks", villagerBreedingTicks);
+        if (PurpurConfig.version < 9) {
+            boolean oldValue = getBoolean("mobs.villager.lobotomize-1x1", villagerLobotomizeEnabled);
+            set("mobs.villager.lobotomize.enabled", oldValue);
+            set("mobs.villager.lobotomize-1x1", null);
+        }
+        villagerLobotomizeEnabled = getBoolean("mobs.villager.lobotomize.enabled", villagerLobotomizeEnabled);
+        villagerLobotomizeCheck = getInt("mobs.villager.lobotomize.check-interval", villagerLobotomizeCheck);
     }
 
     public boolean villagerTraderRidable = false;
