From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: DoctaEnkoda <bierquejason@gmail.com>
Date: Mon, 9 Aug 2021 13:22:20 +0200
Subject: [PATCH] Added the ability to add combustible items.


diff --git a/src/main/java/net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity.java
index 2c64622577fdb6c2a5746471121403b633bf9042..1592c165a7d7e825bcec0965e9e24bf72ae587e2 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity.java
@@ -129,13 +129,14 @@ public abstract class AbstractFurnaceBlockEntity extends BaseContainerBlockEntit
     }
 
     private static Map<Item, Integer> cachedBurnDurations = null; // Paper - cache burn durations
+    private static final Map<Item, Integer> map = Maps.newLinkedHashMap(); // Purpur - Extract to getFuel() - I don't rename for not all change
     public static Map<Item, Integer> getFuel() {
         // Paper start - cache burn durations
         if(cachedBurnDurations != null) {
             return cachedBurnDurations;
         }
         // Paper end
-        Map<Item, Integer> map = Maps.newLinkedHashMap();
+        // Map<Item, Integer> map = Maps.newLinkedHashMap(); // Purpur
 
         AbstractFurnaceBlockEntity.add(map, (ItemLike) Items.LAVA_BUCKET, 20000);
         AbstractFurnaceBlockEntity.add(map, (ItemLike) Blocks.COAL_BLOCK, 16000);
@@ -205,6 +206,17 @@ public abstract class AbstractFurnaceBlockEntity extends BaseContainerBlockEntit
         // Paper end
     }
 
+    // Purpur start - Add / Remove item fuel.
+    public static void addFuel(ItemStack itemStack, Integer fuelTimes) {
+        AbstractFurnaceBlockEntity.add(map, itemStack.getItem(), fuelTimes);
+        cachedBurnDurations = com.google.common.collect.ImmutableMap.copyOf(map);
+    }
+
+    public static void delFuel(ItemStack itemStack) {
+        cachedBurnDurations.remove(itemStack.getItem());
+    }
+    // Purpur End
+
     // CraftBukkit start - add fields and methods
     private int maxStack = MAX_STACK;
     public List<HumanEntity> transaction = new java.util.ArrayList<HumanEntity>();
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index a0177be669c921728267bd48ed3c7af302d6d314..e444eb7beec5e8e9432f385d75e5c2fea7280880 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -100,6 +100,7 @@ import net.minecraft.world.level.GameType;
 import net.minecraft.world.level.LevelSettings;
 import net.minecraft.world.level.biome.BiomeManager;
 import net.minecraft.world.level.block.Block;
+import net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity;
 import net.minecraft.world.level.dimension.DimensionType;
 import net.minecraft.world.level.dimension.LevelStem;
 import net.minecraft.world.level.levelgen.PatrolSpawner;
@@ -230,6 +231,7 @@ import org.bukkit.potion.PotionEffectType;
 import org.bukkit.scheduler.BukkitWorker;
 import org.bukkit.util.StringUtil;
 import org.bukkit.util.permissions.DefaultPermissions;
+import org.jetbrains.annotations.NotNull;
 import org.yaml.snakeyaml.Yaml;
 import org.yaml.snakeyaml.constructor.SafeConstructor;
 import org.yaml.snakeyaml.error.MarkedYAMLException;
@@ -1357,6 +1359,21 @@ public final class CraftServer implements Server {
         return true;
     }
 
+    // Purpur Start
+    @Override
+    public void addFuel(@NotNull org.bukkit.Material material, int fuelTimes) {
+        if (fuelTimes < 0) {
+            throw new IllegalArgumentException("FuelTimes must be greater than 0");
+        }
+        AbstractFurnaceBlockEntity.addFuel(net.minecraft.world.item.ItemStack.fromBukkitCopy(new ItemStack(material)), fuelTimes);
+    }
+
+    @Override
+    public void delFuel(@NotNull org.bukkit.Material material) {
+        AbstractFurnaceBlockEntity.delFuel(net.minecraft.world.item.ItemStack.fromBukkitCopy(new ItemStack(material)));
+    }
+    // Purpur End
+
     @Override
     public List<Recipe> getRecipesFor(ItemStack result) {
         Validate.notNull(result, "Result cannot be null");
