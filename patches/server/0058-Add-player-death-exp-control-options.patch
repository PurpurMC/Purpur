From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: William Blake Galbreath <blake.galbreath@gmail.com>
Date: Thu, 26 Dec 2019 22:08:37 -0600
Subject: [PATCH] Add player death exp control options


diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 8587820d268c20b7fcae2cc633ddb3c6709836a5..2f997760889be416f17e3d9bf00d1273d6feb591 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -851,7 +851,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
 
     public void checkOutOfWorld() {
         // Paper start - Configurable nether ceiling damage
-        if (this.getY() < (double) (this.level.getMinBuildHeight() - 64) || (this.level.getWorld().getEnvironment() == org.bukkit.World.Environment.NETHER
+        if (this.getY() < (double) (this.level.getMinBuildHeight() + level.purpurConfig().gameplayMechanics.voidSettings.damageHeight) || (this.level.getWorld().getEnvironment() == org.bukkit.World.Environment.NETHER // Purpur
             && level.paperConfig().environment.netherCeilingVoidDamageHeight > 0
             && this.getY() >= this.level.paperConfig().environment.netherCeilingVoidDamageHeight)) {
             // Paper end
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index 49f4098024c1d2a506da782ce75ee6d880b6960a..484cda2c59c1ed13d2c8a058a2a289edcf676453 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -2445,7 +2445,7 @@ public abstract class LivingEntity extends Entity {
 
     @Override
     protected void outOfWorld() {
-        this.hurt(DamageSource.OUT_OF_WORLD, 4.0F);
+        this.hurt(DamageSource.OUT_OF_WORLD, (float) level.purpurConfig().gameplayMechanics.voidSettings.damageDealt); // Purpur
     }
 
     protected void updateSwingTime() {
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index 74f14215280005a4d6fb35a77e2f1c4858250f2f..1393c7a3b66abbc0be831705ac2d623c89413797 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -1978,9 +1978,18 @@ public abstract class Player extends LivingEntity {
     @Override
     public int getExperienceReward() {
         if (!this.level.getGameRules().getBoolean(GameRules.RULE_KEEPINVENTORY) && !this.isSpectator()) {
-            int i = this.experienceLevel * 7;
-
-            return i > 100 ? 100 : i;
+            // Purpur start
+            int toDrop;
+            try {
+                scriptEngine.eval("expLevel = " + experienceLevel);
+                scriptEngine.eval("expTotal = " + totalExperience);
+                scriptEngine.eval("exp = " + experienceProgress);
+                toDrop = (int) Math.round((Double) scriptEngine.eval(level.purpurConfig().gameplayMechanics.player.death.expDropEquation));
+            } catch (Exception ignore) {
+                toDrop = experienceLevel * 7;
+            }
+            return Math.min(toDrop, level.purpurConfig().gameplayMechanics.player.death.maxExpDropped);
+            // Purpur end
         } else {
             return 0;
         }
diff --git a/src/main/java/org/purpurmc/purpur/configuration/PurpurWorldConfiguration.java b/src/main/java/org/purpurmc/purpur/configuration/PurpurWorldConfiguration.java
index 7c214b5872c2fd3101fa6c90d6f7f7c807afd9b1..ce69ddf4af6415bd6ad5c64f057440c620c947eb 100644
--- a/src/main/java/org/purpurmc/purpur/configuration/PurpurWorldConfiguration.java
+++ b/src/main/java/org/purpurmc/purpur/configuration/PurpurWorldConfiguration.java
@@ -1295,6 +1295,12 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean whileAcceptingResourcePack = false;
                 public int afterSpawnTicks = 60;
             }
+
+            public Death death;
+            public class Death extends ConfigurationPart {
+                public String expDropEquation = "expLevel * 7";
+                public int maxExpDropped = 100;
+            }
         }
 
         public SilkTouchSpawner silkTouchSpawner;
@@ -1322,6 +1328,8 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
         public Void voidSettings;
         public class Void extends ConfigurationPart {
             public double loyaltyTridentReturnHeight = 0.0D;
+            public double damageHeight = -64.0D;
+            public double damageDealt = 4.0D;
         }
     }
 
