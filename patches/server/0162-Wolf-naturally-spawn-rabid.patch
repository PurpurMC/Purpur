From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Encode42 <me@encode42.dev>
Date: Tue, 8 Dec 2020 17:15:15 -0500
Subject: [PATCH] Wolf naturally spawn rabid

Configurable chance to spawn a wolf that is rabid.
Rabid wolves attack all players, mobs, and animals.

diff --git a/src/main/java/net/minecraft/server/EntityWolf.java b/src/main/java/net/minecraft/server/EntityWolf.java
index 6c25f667ee..971aac123c 100644
--- a/src/main/java/net/minecraft/server/EntityWolf.java
+++ b/src/main/java/net/minecraft/server/EntityWolf.java
@@ -19,6 +19,12 @@ public class EntityWolf extends EntityTameableAnimal implements IEntityAngerable
 
         return entitytypes == EntityTypes.SHEEP || entitytypes == EntityTypes.RABBIT || entitytypes == EntityTypes.FOX;
     };
+    // Purpur start - rabid wolf spawn chance
+    private boolean isRabid = world.purpurConfig.wolfNaturalRabid > 0D && random.nextDouble() <= world.purpurConfig.wolfNaturalRabid;
+    private static final Predicate<EntityLiving> RABID_PREDICATE = e -> e instanceof EntityPlayer || e instanceof EntityInsentient;
+    private final PathfinderGoal PATHFINDER_VANILLA = new PathfinderGoalRandomTargetNonTamed<>(this, EntityAnimal.class, false, EntityWolf.bq);
+    private final PathfinderGoal PATHFINDER_RABID = new PathfinderGoalRandomTargetNonTamed<>(this, EntityLiving.class, false, RABID_PREDICATE);
+    // Purpur end
     private float bu;
     private float bv;
     private boolean bw;
@@ -31,6 +37,7 @@ public class EntityWolf extends EntityTameableAnimal implements IEntityAngerable
     public EntityWolf(EntityTypes<? extends EntityWolf> entitytypes, World world) {
         super(entitytypes, world);
         this.setTamed(false);
+        this.rabidPathfinding(isRabid); // Purpur
     }
 
     // Purpur start
@@ -53,6 +60,16 @@ public class EntityWolf extends EntityTameableAnimal implements IEntityAngerable
     int getPurpurBreedTime() {
         return this.world.purpurConfig.wolfBreedingTicks;
     }
+
+    public void rabidPathfinding(boolean state) {
+        if (state) {
+            this.targetSelector.removeGoal(PATHFINDER_VANILLA);
+            this.targetSelector.addGoal(5, PATHFINDER_RABID);
+        } else {
+            this.targetSelector.removeGoal(PATHFINDER_RABID);
+            this.targetSelector.addGoal(5, PATHFINDER_VANILLA);
+        }
+    }
     // Purpur end
 
     @Override
@@ -74,7 +91,6 @@ public class EntityWolf extends EntityTameableAnimal implements IEntityAngerable
         this.targetSelector.a(2, new PathfinderGoalOwnerHurtTarget(this));
         this.targetSelector.a(3, (new PathfinderGoalHurtByTarget(this, new Class[0])).a(new Class[0])); // CraftBukkit - decompile error
         this.targetSelector.a(4, new PathfinderGoalNearestAttackableTarget<>(this, EntityHuman.class, 10, true, false, this::a_));
-        this.targetSelector.a(5, new PathfinderGoalRandomTargetNonTamed<>(this, EntityAnimal.class, false, EntityWolf.bq));
         this.targetSelector.a(6, new PathfinderGoalRandomTargetNonTamed<>(this, EntityTurtle.class, false, EntityTurtle.bo));
         this.targetSelector.a(7, new PathfinderGoalNearestAttackableTarget<>(this, EntitySkeletonAbstract.class, false));
         this.targetSelector.a(8, new PathfinderGoalUniversalAngerReset<>(this, true));
@@ -119,6 +135,7 @@ public class EntityWolf extends EntityTameableAnimal implements IEntityAngerable
     public void saveData(NBTTagCompound nbttagcompound) {
         super.saveData(nbttagcompound);
         nbttagcompound.setByte("CollarColor", (byte) this.getCollarColor().getColorIndex());
+        nbttagcompound.setBoolean("Purpur.IsRabid", isRabid); // Purpur
         this.c(nbttagcompound);
     }
 
@@ -128,6 +145,11 @@ public class EntityWolf extends EntityTameableAnimal implements IEntityAngerable
         if (nbttagcompound.hasKeyOfType("CollarColor", 99)) {
             this.setCollarColor(EnumColor.fromColorIndex(nbttagcompound.getInt("CollarColor")));
         }
+        // Purpur start - rabid wolf spawn chance
+        if (nbttagcompound.hasKeyOfType("Purpur.IsRabid", 99)) {
+            isRabid = nbttagcompound.getBoolean("Purpur.IsRabid");
+        }
+        // Purpur end
 
         this.a((WorldServer) this.world, nbttagcompound);
     }
diff --git a/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java b/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
index fa98eef4f8..88db847d7b 100644
--- a/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
+++ b/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
@@ -1128,10 +1128,12 @@ public class PurpurWorldConfig {
 
     public boolean wolfRidable = false;
     public boolean wolfRidableInWater = false;
+    public double wolfNaturalRabid = 0.0D;
     public int wolfBreedingTicks = 6000;
     private void wolfSettings() {
         wolfRidable = getBoolean("mobs.wolf.ridable", wolfRidable);
         wolfRidableInWater = getBoolean("mobs.wolf.ridable-in-water", wolfRidableInWater);
+        wolfNaturalRabid = getDouble("mobs.wolf.spawn-rabid-chance", wolfNaturalRabid);
         wolfBreedingTicks = getInt("mobs.wolf.breeding-delay-ticks", wolfBreedingTicks);
     }
 
