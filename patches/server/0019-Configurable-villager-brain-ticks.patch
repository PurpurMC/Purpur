From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: William Blake Galbreath <Blake.Galbreath@GMail.com>
Date: Tue, 23 Jul 2019 08:28:21 -0500
Subject: [PATCH] Configurable villager brain ticks


diff --git a/src/main/java/net/minecraft/world/entity/npc/Villager.java b/src/main/java/net/minecraft/world/entity/npc/Villager.java
index aee46cbe65ed12a687badd6bdf6fbf75016a104b..9c0ffa4dd6417633638780fee66797145cb37962 100644
--- a/src/main/java/net/minecraft/world/entity/npc/Villager.java
+++ b/src/main/java/net/minecraft/world/entity/npc/Villager.java
@@ -139,6 +139,7 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
     }, MemoryModuleType.MEETING_POINT, (entityvillager, holder) -> {
         return holder.is(PoiTypes.MEETING);
     });
+    private final int brainTickOffset; // Purpur
 
     public Villager(EntityType<? extends Villager> entityType, Level world) {
         this(entityType, world, VillagerType.PLAINS);
@@ -151,6 +152,7 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
         this.getNavigation().setCanFloat(true);
         this.setCanPickUpLoot(true);
         this.setVillagerData(this.getVillagerData().setType(type).setProfession(VillagerProfession.NONE));
+        this.brainTickOffset = getRandom().nextInt(100); // Purpur
     }
 
     // Purpur start
@@ -274,6 +276,10 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
     protected void customServerAiStep() { mobTick(false); }
     protected void mobTick(boolean inactive) {
         this.level.getProfiler().push("villagerBrain");
+        // Purpur start
+        boolean tick = (level.getGameTime() + brainTickOffset) % level.purpurConfig().mobs.villager.brain.tickEvery == 0;
+        if (((ServerLevel) level).getServer().lagging ? tick : level.purpurConfig().mobs.villager.brain.onlyUseTicksWhenLagging || tick)
+        // Purpur end
         if (getRider() == null || !this.isControllable())// Purpur - only use brain if no rider
         if (!inactive) this.getBrain().tick((ServerLevel) this.level, this); // Paper
         this.level.getProfiler().pop();
diff --git a/src/main/java/org/purpurmc/purpur/configuration/PurpurWorldConfiguration.java b/src/main/java/org/purpurmc/purpur/configuration/PurpurWorldConfiguration.java
index 87411ad955f1faf87432e7500e2b55a192484626..53614bab6fca0927b17fd0a2e35db043826b0814 100644
--- a/src/main/java/org/purpurmc/purpur/configuration/PurpurWorldConfiguration.java
+++ b/src/main/java/org/purpurmc/purpur/configuration/PurpurWorldConfiguration.java
@@ -1035,6 +1035,12 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
             public class Attributes extends ConfigurationPart {
                 public double maxHealth = 20.0D;
             }
+
+            public Brain brain;
+            public class Brain extends ConfigurationPart {
+                public int tickEvery = 1;
+                public boolean onlyUseTicksWhenLagging = true;
+            }
         }
 
         public Vindicator vindicator;
