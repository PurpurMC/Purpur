From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: William Blake Galbreath <Blake.Galbreath@GMail.com>
Date: Sat, 12 Dec 2020 21:19:05 -0600
Subject: [PATCH] Implement TPSBar


diff --git a/src/main/java/net/minecraft/commands/Commands.java b/src/main/java/net/minecraft/commands/Commands.java
index f164106a957c24bdb71bde85d82948a64613fd91..bef1f6ca54fc6c1741b54b8e071a90eb5e3a36f3 100644
--- a/src/main/java/net/minecraft/commands/Commands.java
+++ b/src/main/java/net/minecraft/commands/Commands.java
@@ -201,6 +201,7 @@ public class Commands {
             net.pl3x.purpur.command.CreditsCommand.register(this.dispatcher); // Purpur
             net.pl3x.purpur.command.DemoCommand.register(this.dispatcher); // Purpur
             net.pl3x.purpur.command.PingCommand.register(this.dispatcher); // Purpur
+            net.pl3x.purpur.command.TPSBarCommand.register(this.dispatcher); // Purpur
         }
 
         if (environment.includeIntegrated) {
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 214b25f57f15e2127b92ec88117c36d4b2096477..652e596c37bf8d865c954b31ad7d2562b9e95c46 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -1119,6 +1119,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
         this.safeShutdown(flag, false);
     }
     public void safeShutdown(boolean flag, boolean isRestarting) {
+        net.pl3x.purpur.task.TPSBarTask.stop(); // Purpur
         this.isRestarting = isRestarting;
         this.hasLoggedStop = true; // Paper
         if (isDebugging()) io.papermc.paper.util.TraceUtil.dumpTraceForThread("Server stopped"); // Paper
diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
index 1b8d836607d52c3bc67ad5f2accbc94663637d49..606d5577f121b0103e272bbe4ffa4b582c76469c 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
@@ -349,6 +349,8 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
                 DedicatedServer.LOGGER.info("JMX monitoring enabled");
             }
 
+            net.pl3x.purpur.task.TPSBarTask.start(); // Purpur
+
             return true;
         }
     }
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index 29043f9354b29f7766f1d6d8e793e2ea23883fa0..5141185821c798cb20f7936d7927d2256d9be75f 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -593,6 +593,8 @@ public abstract class PlayerList {
     }
     public net.kyori.adventure.text.Component disconnect(ServerPlayer entityplayer, net.kyori.adventure.text.Component leaveMessage) {
         // Paper end
+        net.pl3x.purpur.task.TPSBarTask.removePlayer(entityplayer.getBukkitEntity()); // Purpur
+
         ServerLevel worldserver = entityplayer.getLevel();
 
         entityplayer.awardStat(Stats.LEAVE_GAME);
diff --git a/src/main/java/net/pl3x/purpur/command/TPSBarCommand.java b/src/main/java/net/pl3x/purpur/command/TPSBarCommand.java
new file mode 100644
index 0000000000000000000000000000000000000000..2803a1b95121fbff3066fd2d1abaf8723386781f
--- /dev/null
+++ b/src/main/java/net/pl3x/purpur/command/TPSBarCommand.java
@@ -0,0 +1,24 @@
+package net.pl3x.purpur.command;
+
+import com.mojang.brigadier.CommandDispatcher;
+import net.minecraft.commands.CommandSourceStack;
+import net.minecraft.commands.Commands;
+import net.minecraft.server.level.ServerPlayer;
+import net.pl3x.purpur.task.TPSBarTask;
+
+public class TPSBarCommand {
+    public static void register(CommandDispatcher<CommandSourceStack> dispatcher) {
+        dispatcher.register(Commands.literal("tpsbar")
+                .requires(listener -> listener.hasPermission(2))
+                .executes(context -> execute(context.getSource(), context.getSource().getPlayerOrException()))
+        ).setPermission("bukkit.command.tpsbar");
+    }
+
+    private static int execute(CommandSourceStack source, ServerPlayer player) {
+        if (player != null) {
+            TPSBarTask.togglePlayer(player.getBukkitEntity());
+            return 1;
+        }
+        return 0;
+    }
+}
diff --git a/src/main/java/net/pl3x/purpur/task/TPSBarTask.java b/src/main/java/net/pl3x/purpur/task/TPSBarTask.java
new file mode 100644
index 0000000000000000000000000000000000000000..a9d71d2b769b8e4e0f5039e997fc5ebc1cc9bfbb
--- /dev/null
+++ b/src/main/java/net/pl3x/purpur/task/TPSBarTask.java
@@ -0,0 +1,116 @@
+package net.pl3x.purpur.task;
+
+import org.bukkit.Bukkit;
+import org.bukkit.ChatColor;
+import org.bukkit.NamespacedKey;
+import org.bukkit.boss.BarColor;
+import org.bukkit.boss.BarStyle;
+import org.bukkit.boss.BossBar;
+import org.bukkit.craftbukkit.scheduler.MinecraftInternalPlugin;
+import org.bukkit.entity.Player;
+import org.bukkit.scheduler.BukkitRunnable;
+
+public class TPSBarTask extends BukkitRunnable {
+    private static TPSBarTask instance;
+    private final NamespacedKey key;
+    private BossBar bossbar;
+
+    private TPSBarTask() {
+        this.key = new NamespacedKey("purpur", "tpsbar");
+    }
+
+    private static TPSBarTask instance() {
+        if (instance == null) {
+            instance = new TPSBarTask();
+        }
+        return instance;
+    }
+
+    private BossBar bossbar() {
+        if (bossbar == null) {
+            bossbar = Bukkit.getBossBar(key);
+            if (bossbar == null) {
+                bossbar = Bukkit.createBossBar(key, "TPS: 20.0", BarColor.RED, BarStyle.SEGMENTED_20);
+            }
+            bossbar.setVisible(true);
+            bossbar.setProgress(1.0D);
+        }
+        return bossbar;
+    }
+
+    @Override
+    public void run() {
+        BossBar bossbar = bossbar();
+        if (bossbar.getPlayers().isEmpty()) {
+            return;
+        }
+
+        double tps = Bukkit.getTPS()[0];
+        if (tps > 20.0D) {
+            tps = 20.0D;
+        } else if (tps < 0.0D) {
+            tps = 0.0D;
+        }
+
+        bossbar.setVisible(true);
+        bossbar.setProgress(Math.max(Math.min(tps / 20.0D, 1.0D), 0.0D));
+
+        String tpsColor;
+        if (tps >= 18) {
+            tpsColor = "&2";
+            bossbar.setColor(BarColor.GREEN);
+        } else if (tps >= 15) {
+            tpsColor = "&e";
+            bossbar.setColor(BarColor.YELLOW);
+        } else {
+            tpsColor = "&4";
+            bossbar.setColor(BarColor.RED);
+        }
+
+        double mspt = Bukkit.getAverageTickTime();
+        String msptColor;
+        if (mspt < 40) {
+            msptColor = "&2";
+        } else if (mspt < 50) {
+            msptColor = "&e";
+        } else {
+            msptColor = "&4";
+        }
+
+        bossbar.setTitle(ChatColor.translateAlternateColorCodes('&', "&eTPS&3: " + tpsColor + String.format("%.2f", tps) + " &eMSPT&3: " + msptColor + String.format("%.3f", mspt)));
+    }
+
+    @Override
+    public void cancel() {
+        super.cancel();
+        BossBar bossbar = bossbar();
+        bossbar.setVisible(false);
+        bossbar.removeAll();
+        Bukkit.removeBossBar(key);
+    }
+
+    public static void removePlayer(Player player) {
+        instance().bossbar().removePlayer(player);
+    }
+
+    public static void togglePlayer(Player player) {
+        BossBar bossbar = instance().bossbar();
+        if (bossbar.getPlayers().contains(player)) {
+            bossbar.removePlayer(player);
+        } else {
+            bossbar.addPlayer(player);
+            instance.run();
+        }
+    }
+
+    public static void start() {
+        stop();
+        instance().runTaskTimerAsynchronously(new MinecraftInternalPlugin(), 20L, 20L);
+    }
+
+    public static void stop() {
+        if (instance != null) {
+            instance.cancel();
+        }
+    }
+}
