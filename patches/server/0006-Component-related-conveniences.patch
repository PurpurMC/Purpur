From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: William Blake Galbreath <blake.galbreath@gmail.com>
Date: Tue, 29 Jun 2021 21:37:40 -0500
Subject: [PATCH] Component related conveniences


diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 54dc872b1d448c8895313b216d6cd1c9836a5160..c1091ab7069fa3dd934409da23d404a7747b1a11 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -1678,6 +1678,26 @@ public class ServerPlayer extends Player {
     }
     // CraftBukkit end
 
+    // Purpur start
+    public void sendActionBarMessage(@Nullable String message) {
+        if (message != null) {
+            sendActionBarMessage(net.kyori.adventure.text.minimessage.MiniMessage.get().parse(message));
+        }
+    }
+
+    public void sendActionBarMessage(@Nullable net.kyori.adventure.text.Component message) {
+        if (message != null) {
+            sendActionBarMessage(io.papermc.paper.adventure.PaperAdventure.asVanilla(message));
+        }
+    }
+
+    public void sendActionBarMessage(@Nullable Component message) {
+        if (message != null) {
+            displayClientMessage(message, true);
+        }
+    }
+    // Purpur end
+
     @Override
     public void displayClientMessage(Component message, boolean actionBar) {
         this.sendMessage(message, actionBar ? ChatType.GAME_INFO : ChatType.CHAT, Util.NIL_UUID);
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index ea1f7c8bf220982a086d4ae1663ae445b8c6cebd..dc5492b45bfa97c0e1237096764b79c88e846e4e 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -1395,6 +1395,62 @@ public abstract class PlayerList {
     }
     // CraftBukkit end
 
+    // Purpur start
+    public void broadcast(@Nullable String message) {
+        broadcast(message, Util.NIL_UUID);
+    }
+
+    public void broadcast(@Nullable String message, ChatType type) {
+        broadcast(message, type, Util.NIL_UUID);
+    }
+
+    public void broadcast(@Nullable String message, UUID sender) {
+        broadcast(message, ChatType.SYSTEM, sender);
+    }
+
+    public void broadcast(@Nullable String message, ChatType type, UUID sender) {
+        if (message != null) {
+            broadcast(net.kyori.adventure.text.minimessage.MiniMessage.get().parse(message), type, sender);
+        }
+    }
+
+    public void broadcast(@Nullable net.kyori.adventure.text.Component message) {
+        broadcast(message, Util.NIL_UUID);
+    }
+
+    public void broadcast(@Nullable net.kyori.adventure.text.Component message, ChatType type) {
+        broadcast(message, type, Util.NIL_UUID);
+    }
+
+    public void broadcast(@Nullable net.kyori.adventure.text.Component message, UUID sender) {
+        broadcast(message, ChatType.SYSTEM, sender);
+    }
+
+    public void broadcast(@Nullable net.kyori.adventure.text.Component message, ChatType type, UUID sender) {
+        if (message != null) {
+            broadcast(io.papermc.paper.adventure.PaperAdventure.asVanilla(message), type, sender);
+        }
+    }
+
+    public void broadcast(@Nullable Component message) {
+        broadcast(message, Util.NIL_UUID);
+    }
+
+    public void broadcast(@Nullable Component message, ChatType type) {
+        broadcast(message, type, Util.NIL_UUID);
+    }
+
+    public void broadcast(@Nullable Component message, UUID sender) {
+        broadcast(message, ChatType.SYSTEM, sender);
+    }
+
+    public void broadcast(@Nullable Component message, ChatType type, UUID sender) {
+        if (message != null) {
+            broadcastMessage(message, type, sender);
+        }
+    }
+    // Purpur end
+
     public void broadcastMessage(Component message, ChatType type, UUID sender) {
         this.server.sendMessage(message, sender);
         Iterator iterator = this.players.iterator();
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index d35cdcf2ee7568ad5caf52588db54e9c6f607d4b..7a954d7495636a27149a55b58436183e18e028dd 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -3620,6 +3620,34 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, n
         return SlotAccess.NULL;
     }
 
+    // Purpur Start
+    public void sendMessage(@Nullable String message) {
+        sendMessage(message, Util.NIL_UUID);
+    }
+
+    public void sendMessage(@Nullable String message, UUID sender) {
+        if (org.apache.commons.lang3.StringUtils.isNotEmpty(message)) {
+            sendMessage(net.kyori.adventure.text.minimessage.MiniMessage.get().parse(message), sender);
+        }
+    }
+
+    public void sendMessage(@Nullable net.kyori.adventure.text.Component message) {
+        sendMessage(message, Util.NIL_UUID);
+    }
+
+    public void sendMessage(@Nullable net.kyori.adventure.text.Component message, UUID sender) {
+        if (message != null) {
+            sendMessage(io.papermc.paper.adventure.PaperAdventure.asVanilla(message), sender);
+        }
+    }
+
+    public void sendMessage(@Nullable Component message) {
+        if (message != null) {
+            sendMessage(message, Util.NIL_UUID);
+        }
+    }
+    // Purpur end
+
     @Override
     public void sendMessage(Component message, UUID sender) {}
 
