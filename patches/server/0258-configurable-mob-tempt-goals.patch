From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Oharass <oharass@bk.ru>
Date: Sat, 11 Sep 2021 22:05:15 +0300
Subject: [PATCH] configurable mob tempt goals


diff --git a/src/main/java/net/minecraft/world/entity/GlowSquid.java b/src/main/java/net/minecraft/world/entity/GlowSquid.java
index 02b79aa6f4c472a9450549b1730f026d6d93b87b..435a9f9c27daf60b18cd8433deaeb18adc53823d 100644
--- a/src/main/java/net/minecraft/world/entity/GlowSquid.java
+++ b/src/main/java/net/minecraft/world/entity/GlowSquid.java
@@ -112,4 +112,12 @@ public class GlowSquid extends Squid {
     public int getDarkTicksRemaining() {
         return this.entityData.get(DATA_DARK_TICKS_REMAINING);
     }
+
+    // Purpur start
+    @Override
+    protected void registerGoals() {
+        super.registerGoals();
+        if (this.level.purpurConfig.glowSquidTemptEnabled) this.goalSelector.addGoal(3, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.glowSquidTemptSpeed, this.level.purpurConfig.glowSquidTemptIngredient, this.level.purpurConfig.glowSquidTemptScared)); // Purpur
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/world/entity/animal/Bee.java b/src/main/java/net/minecraft/world/entity/animal/Bee.java
index d4aa4a33f52b9dbc0756f7a6024105e0c2b9983f..9ab8958e3cc8dea8d03718594b1d06290df3799f 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Bee.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Bee.java
@@ -255,6 +255,7 @@ public class Bee extends Animal implements NeutralMob, FlyingAnimal {
         this.targetSelector.addGoal(1, (new Bee.BeeHurtByOtherGoal(this)).setAlertOthers(new Class[0]));
         this.targetSelector.addGoal(2, new Bee.BeeBecomeAngryTargetGoal(this));
         this.targetSelector.addGoal(3, new ResetUniversalAngerTargetGoal<>(this, true));
+        if (this.level.purpurConfig.beeTemptEnabled) this.goalSelector.addGoal(3, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.beeTemptSpeed, this.level.purpurConfig.beeTemptIngredient, this.level.purpurConfig.beeTemptScared)); // Purpur
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/Cat.java b/src/main/java/net/minecraft/world/entity/animal/Cat.java
index 0d521af1a44acc0fd62f209b845b6d128e42baf4..a1a9cfd3d36f70b0c6b67e1ded349a6f35143f45 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Cat.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Cat.java
@@ -174,6 +174,7 @@ public class Cat extends TamableAnimal {
         this.targetSelector.addGoal(1, new net.pl3x.purpur.entity.ai.HasRider(this)); // Purpur
         this.targetSelector.addGoal(1, new NonTameRandomTargetGoal<>(this, Rabbit.class, false, (Predicate) null));
         this.targetSelector.addGoal(1, new NonTameRandomTargetGoal<>(this, Turtle.class, false, Turtle.BABY_ON_LAND_SELECTOR));
+        if (this.level.purpurConfig.catTemptEnabled) this.goalSelector.addGoal(3, new TemptGoal(this, this.level.purpurConfig.catTemptSpeed, this.level.purpurConfig.catTemptIngredient, this.level.purpurConfig.catTemptScared)); // Purpur
     }
 
     public int getCatType() {
diff --git a/src/main/java/net/minecraft/world/entity/animal/Chicken.java b/src/main/java/net/minecraft/world/entity/animal/Chicken.java
index 50bd7f218ed5c85f52e8e53f027623a5ec12078b..f4fbf9e78bee946effc3ee5c187a8132f6666c98 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Chicken.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Chicken.java
@@ -96,6 +96,7 @@ public class Chicken extends Animal {
             this.goalSelector.addGoal(1, new PanicGoal(this, 1.4D));
         }
         // Purpur end
+        if (this.level.purpurConfig.chickenTemptEnabled) this.goalSelector.addGoal(3, new TemptGoal(this, this.level.purpurConfig.chickenTemptSpeed, this.level.purpurConfig.chickenTemptIngredient, this.level.purpurConfig.chickenTemptScared)); // Purpur
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/Cod.java b/src/main/java/net/minecraft/world/entity/animal/Cod.java
index b84aa3aa391aab6c7bcb804ec3cad67264a1e3d5..93fb9188cb018ca29a02ebed93dc545cd85a99da 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Cod.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Cod.java
@@ -54,4 +54,12 @@ public class Cod extends AbstractSchoolingFish {
     protected SoundEvent getFlopSound() {
         return SoundEvents.COD_FLOP;
     }
+    
+    // Purpur start
+    @Override
+    protected void registerGoals() {
+        super.registerGoals();
+        if (this.level.purpurConfig.codTemptEnabled) this.goalSelector.addGoal(2, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.codTemptSpeed, this.level.purpurConfig.codTemptIngredient, this.level.purpurConfig.codTemptScared)); // Purpur
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/world/entity/animal/Cow.java b/src/main/java/net/minecraft/world/entity/animal/Cow.java
index 66ecd29cc52483e0a79ec6c9c5dbf071501825d5..edce6fec6f0ecf5a275b1eae5604e15c5a882d9f 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Cow.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Cow.java
@@ -86,6 +86,7 @@ public class Cow extends Animal {
         this.goalSelector.addGoal(6, new LookAtPlayerGoal(this, Player.class, 6.0F));
         this.goalSelector.addGoal(7, new RandomLookAroundGoal(this));
         this.targetSelector.addGoal(0, new net.minecraft.world.entity.ai.goal.target.NearestAttackableTargetGoal<>(this, Player.class, 10, true, false, target -> isNaturallyAggressiveToPlayers)); // Purpur
+        if (this.level.purpurConfig.cowTemptEnabled) this.goalSelector.addGoal(3, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.cowTemptSpeed, this.level.purpurConfig.cowTemptIngredient, this.level.purpurConfig.cowTemptScared)); // Purpur
     }
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/animal/Dolphin.java b/src/main/java/net/minecraft/world/entity/animal/Dolphin.java
index a33724bee284c3f05b1807d6564ddf1564278167..54aba68820d53cc7aa2b1d4a1d1d4830bad7fbdf 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Dolphin.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Dolphin.java
@@ -256,6 +256,7 @@ public class Dolphin extends WaterAnimal {
         this.targetSelector.addGoal(0, new net.pl3x.purpur.entity.ai.HasRider(this)); // Purpur
         this.targetSelector.addGoal(1, (new HurtByTargetGoal(this, new Class[]{Guardian.class})).setAlertOthers(new Class[0])); // CraftBukkit - decompile error
         this.targetSelector.addGoal(2, new net.minecraft.world.entity.ai.goal.target.NearestAttackableTargetGoal<>(this, Player.class, 10, true, false, target -> isNaturallyAggressiveToPlayers)); // Purpur
+        if (this.level.purpurConfig.dolphinTemptEnabled) this.goalSelector.addGoal(3, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.dolphinTemptSpeed, this.level.purpurConfig.dolphinTemptIngredient, this.level.purpurConfig.dolphinTemptScared)); // Purpur
     }
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/animal/Fox.java b/src/main/java/net/minecraft/world/entity/animal/Fox.java
index 5750b42a3f522402e9cea573204cf31f6ab0c287..83c5a59e4f5989e5767f8b94f42a786c2ce66919 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Fox.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Fox.java
@@ -232,6 +232,7 @@ public class Fox extends Animal {
         this.targetSelector.addGoal(3, new Fox.DefendTrustedTargetGoal(LivingEntity.class, false, false, (entityliving) -> {
             return Fox.TRUSTED_TARGET_SELECTOR.test(entityliving) && !this.trusts(entityliving.getUUID());
         }));
+        if (this.level.purpurConfig.foxTemptEnabled) this.goalSelector.addGoal(4, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.foxTemptSpeed, this.level.purpurConfig.foxTemptIngredient, this.level.purpurConfig.foxTemptScared)); // Purpur
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/IronGolem.java b/src/main/java/net/minecraft/world/entity/animal/IronGolem.java
index 70d5b30a23b41579d4edf7542480c40466a08e49..981b29189accf451123dcfca50de216d913a350a 100644
--- a/src/main/java/net/minecraft/world/entity/animal/IronGolem.java
+++ b/src/main/java/net/minecraft/world/entity/animal/IronGolem.java
@@ -117,6 +117,7 @@ public class IronGolem extends AbstractGolem implements NeutralMob {
             return entityliving instanceof Enemy && !(entityliving instanceof Creeper);
         }));
         this.targetSelector.addGoal(4, new ResetUniversalAngerTargetGoal<>(this, false));
+        if (this.level.purpurConfig.ironGolemTemptEnabled) this.goalSelector.addGoal(3, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.ironGolemTemptSpeed, this.level.purpurConfig.ironGolemTemptIngredient, this.level.purpurConfig.ironGolemTemptScared)); // Purpur
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/MushroomCow.java b/src/main/java/net/minecraft/world/entity/animal/MushroomCow.java
index 417640879f17081591b1ed23c6704a8b68069942..5e470bc314fa2806cc3ad0d1f085983a957d7891 100644
--- a/src/main/java/net/minecraft/world/entity/animal/MushroomCow.java
+++ b/src/main/java/net/minecraft/world/entity/animal/MushroomCow.java
@@ -60,6 +60,14 @@ public class MushroomCow extends Cow implements Shearable {
     public MushroomCow(EntityType<? extends MushroomCow> type, Level world) {
         super(type, world);
     }
+    
+    // Purpur start
+    @Override
+    protected void registerGoals() {
+        super.registerGoals();
+        if (this.level.purpurConfig.mooshroomTemptEnabled) this.goalSelector.addGoal(2, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.mooshroomTemptSpeed, this.level.purpurConfig.mooshroomTemptIngredient, this.level.purpurConfig.mooshroomTemptScared)); // Purpur
+    }
+    // Purpur end
 
     // Purpur start
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/Ocelot.java b/src/main/java/net/minecraft/world/entity/animal/Ocelot.java
index 3b8c3aaa7f8249dafea44b306583cf7f7dbbed5e..845673ad81da8ecad77974a4ff7e6db8f629892a 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Ocelot.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Ocelot.java
@@ -131,6 +131,7 @@ public class Ocelot extends Animal {
         this.targetSelector.addGoal(0, new net.pl3x.purpur.entity.ai.HasRider(this)); // Purpur
         this.targetSelector.addGoal(1, new NearestAttackableTargetGoal<>(this, Chicken.class, false));
         this.targetSelector.addGoal(1, new NearestAttackableTargetGoal<>(this, Turtle.class, 10, false, false, Turtle.BABY_ON_LAND_SELECTOR));
+        if (this.level.purpurConfig.ocelotTemptEnabled) this.goalSelector.addGoal(3, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.ocelotTemptSpeed, this.level.purpurConfig.ocelotTemptIngredient, this.level.purpurConfig.ocelotTemptScared)); // Purpur
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/Panda.java b/src/main/java/net/minecraft/world/entity/animal/Panda.java
index a1538e9b97745dd775b48d38f14cff1b3fb1dd2e..07d5942875c856ccd09c4ee1e54f94507164f2cb 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Panda.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Panda.java
@@ -313,6 +313,7 @@ public class Panda extends Animal {
         this.goalSelector.addGoal(14, new WaterAvoidingRandomStrollGoal(this, 1.0D));
         this.targetSelector.addGoal(0, new net.pl3x.purpur.entity.ai.HasRider(this)); // Purpur
         this.targetSelector.addGoal(1, (new Panda.PandaHurtByTargetGoal(this, new Class[0])).setAlertOthers(new Class[0]));
+        if (this.level.purpurConfig.pandaTemptEnabled) this.goalSelector.addGoal(4, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.pandaTemptSpeed, this.level.purpurConfig.pandaTemptIngredient, this.level.purpurConfig.pandaTemptScared)); // Purpur
     }
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/animal/Parrot.java b/src/main/java/net/minecraft/world/entity/animal/Parrot.java
index 3da2b68fb03a80676d7a5eed271499f6c4612c61..1624f64830c60949b780400b4bd57f61ba198a26 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Parrot.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Parrot.java
@@ -217,6 +217,7 @@ public class Parrot extends ShoulderRidingEntity implements FlyingAnimal {
         this.goalSelector.addGoal(2, new WaterAvoidingRandomFlyingGoal(this, 1.0D));
         this.goalSelector.addGoal(3, new LandOnOwnersShoulderGoal(this));
         this.goalSelector.addGoal(3, new FollowMobGoal(this, 1.0D, 3.0F, 7.0F));
+        if (this.level.purpurConfig.parrotTemptEnabled) this.goalSelector.addGoal(3, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.parrotTemptSpeed, this.level.purpurConfig.parrotTemptIngredient, this.level.purpurConfig.parrotTemptScared)); // Purpur
     }
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/animal/Pig.java b/src/main/java/net/minecraft/world/entity/animal/Pig.java
index 98cf2268304f3a092dba45bb4297d14fe81cc057..30e709d5ffb2e6c7518a1c9f8a6af0a79564fe88 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Pig.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Pig.java
@@ -99,6 +99,7 @@ public class Pig extends Animal implements ItemSteerable, Saddleable {
         this.goalSelector.addGoal(6, new WaterAvoidingRandomStrollGoal(this, 1.0D));
         this.goalSelector.addGoal(7, new LookAtPlayerGoal(this, Player.class, 6.0F));
         this.goalSelector.addGoal(8, new RandomLookAroundGoal(this));
+        if (this.level.purpurConfig.pigTemptEnabled) this.goalSelector.addGoal(4, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.pigTemptSpeed, this.level.purpurConfig.pigTemptIngredient, this.level.purpurConfig.pigTemptScared)); // Purpur
     }
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/animal/PolarBear.java b/src/main/java/net/minecraft/world/entity/animal/PolarBear.java
index 45934499067bb323413e73c99fe01bb223df7990..2f01169d8fab7f4a7290073db7d0160df64bca5e 100644
--- a/src/main/java/net/minecraft/world/entity/animal/PolarBear.java
+++ b/src/main/java/net/minecraft/world/entity/animal/PolarBear.java
@@ -154,6 +154,7 @@ public class PolarBear extends Animal implements NeutralMob {
         this.targetSelector.addGoal(3, new NearestAttackableTargetGoal<>(this, Player.class, 10, true, false, this::isAngryAt));
         this.targetSelector.addGoal(4, new NearestAttackableTargetGoal<>(this, Fox.class, 10, true, true, (Predicate<LivingEntity>)null));
         this.targetSelector.addGoal(5, new ResetUniversalAngerTargetGoal<>(this, false));
+        if (this.level.purpurConfig.polarBearTemptEnabled) this.goalSelector.addGoal(2, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.polarBearTemptSpeed, this.level.purpurConfig.polarBearTemptIngredient, this.level.purpurConfig.polarBearTemptScared)); // Purpur
     }
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/animal/Pufferfish.java b/src/main/java/net/minecraft/world/entity/animal/Pufferfish.java
index bb1a2d79e0034ca3d8b18cb578049deecd234a05..0ee287872398a75439ef52b97cf11796d1818d93 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Pufferfish.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Pufferfish.java
@@ -106,6 +106,7 @@ public class Pufferfish extends AbstractFish {
     protected void registerGoals() {
         super.registerGoals();
         this.goalSelector.addGoal(1, new Pufferfish.PufferfishPuffGoal(this));
+        if (this.level.purpurConfig.pufferfishTemptEnabled) this.goalSelector.addGoal(2, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.pufferfishTemptSpeed, this.level.purpurConfig.pufferfishTemptIngredient, this.level.purpurConfig.pufferfishTemptScared)); // Purpur
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/Rabbit.java b/src/main/java/net/minecraft/world/entity/animal/Rabbit.java
index f2d5c9e5c93d2b93d5188491d0f6239bbdf84e78..52a09fc4c01055ae428b5f7e582e5a0fe2179a6c 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Rabbit.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Rabbit.java
@@ -159,6 +159,7 @@ public class Rabbit extends Animal {
         this.goalSelector.addGoal(5, new Rabbit.RaidGardenGoal(this));
         this.goalSelector.addGoal(6, new WaterAvoidingRandomStrollGoal(this, 0.6D));
         this.goalSelector.addGoal(11, new LookAtPlayerGoal(this, Player.class, 10.0F));
+        if (this.level.purpurConfig.rabbitTemptEnabled) this.goalSelector.addGoal(2, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.rabbitTemptSpeed, this.level.purpurConfig.rabbitTemptIngredient, this.level.purpurConfig.rabbitTemptScared)); // Purpur
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/Salmon.java b/src/main/java/net/minecraft/world/entity/animal/Salmon.java
index 002564221cc53b872001bdb8a76d9ca059212401..8485bf5f5bddad36702d6a2d06f7648ed34b7bac 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Salmon.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Salmon.java
@@ -59,4 +59,12 @@ public class Salmon extends AbstractSchoolingFish {
     protected SoundEvent getFlopSound() {
         return SoundEvents.SALMON_FLOP;
     }
+    
+    // Purpur start
+    @Override
+    protected void registerGoals() {
+        super.registerGoals();
+        if (this.level.purpurConfig.salmonTemptEnabled) this.goalSelector.addGoal(3, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.salmonTemptSpeed, this.level.purpurConfig.salmonTemptIngredient, this.level.purpurConfig.salmonTemptScared)); // Purpur
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/world/entity/animal/Sheep.java b/src/main/java/net/minecraft/world/entity/animal/Sheep.java
index 607823661ba942ec03b1f61dac5a786b6f72ff7b..ae8a8c23bf6f74b2095e1545b9d6670af008ce64 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Sheep.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Sheep.java
@@ -151,6 +151,7 @@ public class Sheep extends Animal implements Shearable {
         this.goalSelector.addGoal(6, new WaterAvoidingRandomStrollGoal(this, 1.0D));
         this.goalSelector.addGoal(7, new LookAtPlayerGoal(this, Player.class, 6.0F));
         this.goalSelector.addGoal(8, new RandomLookAroundGoal(this));
+        if (this.level.purpurConfig.sheepTemptEnabled) this.goalSelector.addGoal(3, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.sheepTemptSpeed, this.level.purpurConfig.sheepTemptIngredient, this.level.purpurConfig.sheepTemptScared)); // Purpur
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java b/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java
index bd89c62101be03bc3d13a1400efceaa26b901fa1..5a71850e1bf62d76e28f7dedd8b07ab24a629e90 100644
--- a/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java
+++ b/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java
@@ -91,6 +91,7 @@ public class SnowGolem extends AbstractGolem implements Shearable, RangedAttackM
         this.targetSelector.addGoal(1, new NearestAttackableTargetGoal<>(this, Mob.class, 10, true, false, (entityliving) -> {
             return entityliving instanceof Enemy;
         }));
+        if (this.level.purpurConfig.snowGolemTemptEnabled) this.goalSelector.addGoal(3, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.snowGolemTemptSpeed, this.level.purpurConfig.snowGolemTemptIngredient, this.level.purpurConfig.snowGolemTemptScared)); // Purpur
     }
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/animal/Squid.java b/src/main/java/net/minecraft/world/entity/animal/Squid.java
index 12be4a2f25a7def8341acda47d10a256c044aec2..35c82e0a0552762d8403d3f50919faa49135062f 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Squid.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Squid.java
@@ -101,6 +101,7 @@ public class Squid extends WaterAnimal {
         this.goalSelector.addGoal(0, new Squid.SquidRandomMovementGoal(this));
         this.goalSelector.addGoal(0, new net.pl3x.purpur.entity.ai.HasRider(this)); // Purpur
         this.goalSelector.addGoal(1, new Squid.SquidFleeGoal());
+        if (this.level.purpurConfig.squidTemptEnabled) this.goalSelector.addGoal(1, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.squidTemptSpeed, this.level.purpurConfig.squidTemptIngredient, this.level.purpurConfig.squidTemptScared)); // Purpur
     }
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/animal/TropicalFish.java b/src/main/java/net/minecraft/world/entity/animal/TropicalFish.java
index fcd3166a7c818ef089ccf2a687596bef51ad14a6..6da1913a7b6b73359d625cdab25c037bfb4ff83d 100644
--- a/src/main/java/net/minecraft/world/entity/animal/TropicalFish.java
+++ b/src/main/java/net/minecraft/world/entity/animal/TropicalFish.java
@@ -43,6 +43,14 @@ public class TropicalFish extends AbstractSchoolingFish {
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    protected void registerGoals() {
+        super.registerGoals();
+        if (this.level.purpurConfig.tropicalFishTemptEnabled) this.goalSelector.addGoal(2, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.tropicalFishTemptSpeed, this.level.purpurConfig.tropicalFishTemptIngredient, this.level.purpurConfig.tropicalFishTemptScared)); // Purpur
+    }
+    // Purpur end
+    
     // Purpur start
     @Override
     public boolean isRidable() {
diff --git a/src/main/java/net/minecraft/world/entity/animal/Turtle.java b/src/main/java/net/minecraft/world/entity/animal/Turtle.java
index 3e8c90c2d44d906fae3dfc068a30c81a494a3268..1be9a04665f49c5a0cd0b4def1782905f3d9e40c 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Turtle.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Turtle.java
@@ -224,6 +224,7 @@ public class Turtle extends Animal {
         this.goalSelector.addGoal(7, new Turtle.TurtleTravelGoal(this, 1.0D));
         this.goalSelector.addGoal(8, new LookAtPlayerGoal(this, Player.class, 8.0F));
         this.goalSelector.addGoal(9, new Turtle.TurtleRandomStrollGoal(this, 1.0D, 100));
+        if (this.level.purpurConfig.turtleTemptEnabled) this.goalSelector.addGoal(2, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.turtleTemptSpeed, this.level.purpurConfig.turtleTemptIngredient, this.level.purpurConfig.turtleTemptScared)); // Purpur
     }
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/animal/Wolf.java b/src/main/java/net/minecraft/world/entity/animal/Wolf.java
index 21e154c4e7fe261a41c891b481072fbd6d5215b5..71ae660499d6388308877e3c4f01b3ddbcd92e20 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Wolf.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Wolf.java
@@ -220,6 +220,7 @@ public class Wolf extends TamableAnimal implements NeutralMob {
         this.targetSelector.addGoal(6, new NonTameRandomTargetGoal<>(this, Turtle.class, false, Turtle.BABY_ON_LAND_SELECTOR));
         this.targetSelector.addGoal(7, new NearestAttackableTargetGoal<>(this, AbstractSkeleton.class, false));
         this.targetSelector.addGoal(8, new ResetUniversalAngerTargetGoal<>(this, true));
+        if (this.level.purpurConfig.wolfTemptEnabled) this.goalSelector.addGoal(3, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.wolfTemptSpeed, this.level.purpurConfig.wolfTemptIngredient, this.level.purpurConfig.wolfTemptScared)); // Purpur
     }
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/animal/axolotl/Axolotl.java b/src/main/java/net/minecraft/world/entity/animal/axolotl/Axolotl.java
index be4beb44c5db58a0ac33e21948b45bc792c692e1..888521bf88875b244b6bb86e0740c0f76990af4c 100644
--- a/src/main/java/net/minecraft/world/entity/animal/axolotl/Axolotl.java
+++ b/src/main/java/net/minecraft/world/entity/animal/axolotl/Axolotl.java
@@ -104,6 +104,7 @@ public class Axolotl extends Animal implements LerpingModel, Bucketable {
     @Override
     protected void registerGoals() {
         this.goalSelector.addGoal(0, new net.pl3x.purpur.entity.ai.HasRider(this)); // Purpur
+        if (this.level.purpurConfig.axolotlTemptEnabled) this.goalSelector.addGoal(1, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.axolotlTemptSpeed, this.level.purpurConfig.axolotlTemptIngredient, this.level.purpurConfig.axolotlTemptScared)); // Purpur
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/goat/Goat.java b/src/main/java/net/minecraft/world/entity/animal/goat/Goat.java
index ce2896c609d16a9b9a733930a3c4c3bd32ebec90..cff16257a4e8af43aa7347809b2eeaf474adb39a 100644
--- a/src/main/java/net/minecraft/world/entity/animal/goat/Goat.java
+++ b/src/main/java/net/minecraft/world/entity/animal/goat/Goat.java
@@ -146,6 +146,14 @@ public class Goat extends Animal {
     protected SoundEvent getMilkingSound() {
         return this.isScreamingGoat() ? SoundEvents.GOAT_SCREAMING_MILK : SoundEvents.GOAT_MILK;
     }
+    
+    // Purpur start
+    @Override
+    protected void registerGoals() {
+        super.registerGoals();
+        if (this.level.purpurConfig.goatTemptEnabled) this.goalSelector.addGoal(0, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.goatTemptSpeed, this.level.purpurConfig.goatTemptIngredient, this.level.purpurConfig.goatTemptScared)); // Purpur
+    }
+    // Purpur end
 
     @Override
     public Goat getBreedOffspring(ServerLevel world, AgeableMob entity) {
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/Donkey.java b/src/main/java/net/minecraft/world/entity/animal/horse/Donkey.java
index 63378addd3de1a3e882f72bc6e1da74405bd79ed..c59ac1f5953272864c0ac7ad38bfec6d07edf8a7 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/Donkey.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/Donkey.java
@@ -15,6 +15,14 @@ public class Donkey extends AbstractChestedHorse {
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    protected void registerGoals() {
+        super.registerGoals();
+        if (this.level.purpurConfig.donkeyTemptEnabled) this.goalSelector.addGoal(3, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.donkeyTemptSpeed, this.level.purpurConfig.donkeyTemptIngredient, this.level.purpurConfig.donkeyTemptScared)); // Purpur
+    }
+    // Purpur end
+    
     // Purpur start
     @Override
     public boolean rideableUnderWater() {
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/Horse.java b/src/main/java/net/minecraft/world/entity/animal/horse/Horse.java
index b077b3d389e3439cf1115009a0edb4ed9f66bf02..56ca6e2e18eb0dcdb0b77262e8aa7a4fcd9bf1e0 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/Horse.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/Horse.java
@@ -39,6 +39,14 @@ public class Horse extends AbstractHorse {
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    protected void registerGoals() {
+        super.registerGoals();
+        if (this.level.purpurConfig.horseTemptEnabled) this.goalSelector.addGoal(3, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.horseTemptSpeed, this.level.purpurConfig.horseTemptIngredient, this.level.purpurConfig.horseTemptScared)); // Purpur
+    }
+    // Purpur end
+    
     // Purpur start
     @Override
     public boolean rideableUnderWater() {
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/Llama.java b/src/main/java/net/minecraft/world/entity/animal/horse/Llama.java
index 02035b4d062e4a44b8711d940cc3680c3132fb4d..e492f6177f3a97f19a1a5887ccf01e65cf2b7d08 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/Llama.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/Llama.java
@@ -185,7 +185,8 @@ public class Llama extends AbstractChestedHorse implements RangedAttackMob {
         this.goalSelector.addGoal(3, new RangedAttackGoal(this, 1.25D, 40, 20.0F));
         this.goalSelector.addGoal(3, new PanicGoal(this, 1.2D));
         this.goalSelector.addGoal(4, new BreedGoal(this, 1.0D));
-        if (this.level.purpurConfig.llamaTemptedByHay) this.goalSelector.addGoal(5, new net.minecraft.world.entity.ai.goal.TemptGoal(this, 1.25D, Ingredient.of(Items.HAY_BLOCK), false)); // Purpur
+        if (this.level.purpurConfig.llamaTemptEnabled) this.goalSelector.addGoal(3, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.llamaTemptSpeed, this.level.purpurConfig.llamaTemptIngredient, this.level.purpurConfig.llamaTemptScared)); // Purpur
+        if (this.level.purpurConfig.llamaTemptedByHay) this.goalSelector.addGoal(3, new net.minecraft.world.entity.ai.goal.TemptGoal(this, 1.25D, Ingredient.of(Items.HAY_BLOCK), false)); // Purpur
         this.goalSelector.addGoal(5, new FollowParentGoal(this, 1.0D));
         this.goalSelector.addGoal(6, new WaterAvoidingRandomStrollGoal(this, 0.7D));
         this.goalSelector.addGoal(7, new LookAtPlayerGoal(this, Player.class, 6.0F));
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/Mule.java b/src/main/java/net/minecraft/world/entity/animal/horse/Mule.java
index 6bdf1727ae241538dc391431a55e5b089431bd7b..55d1fedfc2dfa4fa157d4cf7b6b62986c0494a24 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/Mule.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/Mule.java
@@ -14,6 +14,14 @@ public class Mule extends AbstractChestedHorse {
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    protected void registerGoals() {
+        super.registerGoals();
+        if (this.level.purpurConfig.muleTemptEnabled) this.goalSelector.addGoal(2, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.muleTemptSpeed, this.level.purpurConfig.muleTemptIngredient, this.level.purpurConfig.muleTemptScared)); // Purpur
+    }
+    // Purpur end
+    
     // Purpur start
     @Override
     public boolean rideableUnderWater() {
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/SkeletonHorse.java b/src/main/java/net/minecraft/world/entity/animal/horse/SkeletonHorse.java
index 6d595941aa2dd36fda8bf7efea06b6d52c17647d..64b7c9a52f0c26693c9bec0806fe5d06578774e2 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/SkeletonHorse.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/SkeletonHorse.java
@@ -68,6 +68,7 @@ public class SkeletonHorse extends AbstractHorse {
     @Override
     protected void addBehaviourGoals() {
         if (level.purpurConfig.skeletonHorseCanSwim) goalSelector.addGoal(0, new net.minecraft.world.entity.ai.goal.FloatGoal(this)); // Purpur
+        if (this.level.purpurConfig.skeletonHorseTemptEnabled) this.goalSelector.addGoal(3, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.skeletonHorseTemptSpeed, this.level.purpurConfig.skeletonHorseTemptIngredient, this.level.purpurConfig.skeletonHorseTemptScared)); // Purpur
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/TraderLlama.java b/src/main/java/net/minecraft/world/entity/animal/horse/TraderLlama.java
index dbeed04103ee42bd16e7b785d7024214b6335679..a59848b39c82cdedceb0cd4f61e3c7470593eeef 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/TraderLlama.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/TraderLlama.java
@@ -94,6 +94,7 @@ public class TraderLlama extends Llama {
         super.registerGoals();
         this.goalSelector.addGoal(1, new PanicGoal(this, 2.0D));
         this.targetSelector.addGoal(1, new TraderLlama.TraderLlamaDefendWanderingTraderGoal(this));
+        if (this.level.purpurConfig.traderLlamaTemptEnabled) this.goalSelector.addGoal(0, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.traderLlamaTemptSpeed, this.level.purpurConfig.traderLlamaTemptIngredient, this.level.purpurConfig.traderLlamaTemptScared)); // Purpur
     }
 
     public void setDespawnDelay(int despawnDelay) {
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/ZombieHorse.java b/src/main/java/net/minecraft/world/entity/animal/horse/ZombieHorse.java
index 74321ed51b25617bac25e3497ba908cd1751db09..c4209571f815f16edaa21321937b65e2d4cf8ef5 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/ZombieHorse.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/ZombieHorse.java
@@ -125,5 +125,6 @@ public class ZombieHorse extends AbstractHorse {
     @Override
     protected void addBehaviourGoals() {
         if (level.purpurConfig.zombieHorseCanSwim) goalSelector.addGoal(0, new net.minecraft.world.entity.ai.goal.FloatGoal(this)); // Purpur
+        if (this.level.purpurConfig.zombieHorseTemptEnabled) this.goalSelector.addGoal(1, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.zombieHorseTemptSpeed, this.level.purpurConfig.zombieHorseTemptIngredient, this.level.purpurConfig.zombieHorseTemptScared)); // Purpur
     }
 }
diff --git a/src/main/java/net/minecraft/world/entity/monster/Blaze.java b/src/main/java/net/minecraft/world/entity/monster/Blaze.java
index d772fcfc62425bb720003a681b987382603961f7..5bb361b3abfe4d682372e3a7db008df40fac5995 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Blaze.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Blaze.java
@@ -85,6 +85,7 @@ public class Blaze extends Monster {
         this.targetSelector.addGoal(0, new net.pl3x.purpur.entity.ai.HasRider(this)); // Purpur
         this.targetSelector.addGoal(1, (new HurtByTargetGoal(this)).setAlertOthers());
         this.targetSelector.addGoal(2, new NearestAttackableTargetGoal<>(this, Player.class, true));
+        if (this.level.purpurConfig.blazeTemptEnabled) this.goalSelector.addGoal(3, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.blazeTemptSpeed, this.level.purpurConfig.blazeTemptIngredient, this.level.purpurConfig.blazeTemptScared)); // Purpur
     }
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/monster/CaveSpider.java b/src/main/java/net/minecraft/world/entity/monster/CaveSpider.java
index 45b53f11b52cc161775fcaa18567e4a74c5e71b8..62e1f396bb9e8dee66f06a674546e41abbcfe47d 100644
--- a/src/main/java/net/minecraft/world/entity/monster/CaveSpider.java
+++ b/src/main/java/net/minecraft/world/entity/monster/CaveSpider.java
@@ -78,4 +78,12 @@ public class CaveSpider extends Spider {
     protected float getStandingEyeHeight(Pose pose, EntityDimensions dimensions) {
         return 0.45F;
     }
+
+    // Purpur start
+    @Override
+    protected void registerGoals() {
+        super.registerGoals();
+        if (this.level.purpurConfig.caveSpiderTemptEnabled) this.goalSelector.addGoal(2, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.caveSpiderTemptSpeed, this.level.purpurConfig.caveSpiderTemptIngredient, this.level.purpurConfig.caveSpiderTemptScared)); // Purpur
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/world/entity/monster/Creeper.java b/src/main/java/net/minecraft/world/entity/monster/Creeper.java
index 02ebc4ee80d433f895e643bfbc618aa85d96cc43..a3bbe0632e2d415c778aac34caf46bca75644ce6 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Creeper.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Creeper.java
@@ -171,6 +171,7 @@ public class Creeper extends Monster implements PowerableMob {
         this.targetSelector.addGoal(0, new net.pl3x.purpur.entity.ai.HasRider(this)); // Purpur
         this.targetSelector.addGoal(1, new NearestAttackableTargetGoal<>(this, Player.class, true));
         this.targetSelector.addGoal(2, new HurtByTargetGoal(this, new Class[0]));
+        if (this.level.purpurConfig.creeperTemptEnabled) this.goalSelector.addGoal(2, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.creeperTemptSpeed, this.level.purpurConfig.creeperTemptIngredient, this.level.purpurConfig.creeperTemptScared)); // Purpur
     }
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/monster/Drowned.java b/src/main/java/net/minecraft/world/entity/monster/Drowned.java
index a004d59483dc3ffb404ae28daf76c807504ab6d4..22996d3b97e2da0808b8402e5b1f694d059b5c3d 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Drowned.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Drowned.java
@@ -134,6 +134,7 @@ public class Drowned extends Zombie implements RangedAttackMob {
         this.targetSelector.addGoal(3, new NearestAttackableTargetGoal<>(this, IronGolem.class, true));
         this.targetSelector.addGoal(3, new NearestAttackableTargetGoal<>(this, Axolotl.class, true, false));
         this.targetSelector.addGoal(5, new NearestAttackableTargetGoal<>(this, Turtle.class, 10, true, false, Turtle.BABY_ON_LAND_SELECTOR));
+        if (this.level.purpurConfig.drownedTemptEnabled) this.goalSelector.addGoal(2, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.drownedTemptSpeed, this.level.purpurConfig.drownedTemptIngredient, this.level.purpurConfig.drownedTemptScared)); // Purpur
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/ElderGuardian.java b/src/main/java/net/minecraft/world/entity/monster/ElderGuardian.java
index 55f67061aa4a63105059bfecfb153a579472adc0..519d29bd2dc6503055835ef86d94fafc8497761c 100644
--- a/src/main/java/net/minecraft/world/entity/monster/ElderGuardian.java
+++ b/src/main/java/net/minecraft/world/entity/monster/ElderGuardian.java
@@ -108,4 +108,12 @@ public class ElderGuardian extends Guardian {
         }
 
     }
+
+    // Purpur start
+    @Override
+    protected void registerGoals() {
+        super.registerGoals();
+        if (this.level.purpurConfig.elderGuardianTemptEnabled) this.goalSelector.addGoal(3, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.elderGuardianTemptSpeed, this.level.purpurConfig.elderGuardianTemptIngredient, this.level.purpurConfig.elderGuardianTemptScared)); // Purpur
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/world/entity/monster/EnderMan.java b/src/main/java/net/minecraft/world/entity/monster/EnderMan.java
index e76164aa8e8750cb188bec250d0cca262c88d8e6..4c973a79e9904ec6392800b293db66f096052363 100644
--- a/src/main/java/net/minecraft/world/entity/monster/EnderMan.java
+++ b/src/main/java/net/minecraft/world/entity/monster/EnderMan.java
@@ -116,6 +116,7 @@ public class EnderMan extends Monster implements NeutralMob {
         this.targetSelector.addGoal(2, new HurtByTargetGoal(this, new Class[0]));
         this.targetSelector.addGoal(3, new NearestAttackableTargetGoal<>(this, Endermite.class, 10, true, false, (entityliving) -> entityliving.level.purpurConfig.endermanAggroEndermites && entityliving instanceof Endermite endermite && (!entityliving.level.purpurConfig.endermanAggroEndermitesOnlyIfPlayerSpawned || endermite.isPlayerSpawned()))); // Purpur
         this.targetSelector.addGoal(4, new ResetUniversalAngerTargetGoal<>(this, false));
+        if (this.level.purpurConfig.endermanTemptEnabled) this.goalSelector.addGoal(1, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.endermanTemptSpeed, this.level.purpurConfig.endermanTemptIngredient, this.level.purpurConfig.endermanTemptScared)); // Purpur
     }
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/monster/Endermite.java b/src/main/java/net/minecraft/world/entity/monster/Endermite.java
index 1578a8196f860995370a1b8938b6d71040f5d3a9..231ec855a0de6aa0bfb5d2b08070e46d0806f6fd 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Endermite.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Endermite.java
@@ -73,6 +73,7 @@ public class Endermite extends Monster {
         this.targetSelector.addGoal(0, new net.pl3x.purpur.entity.ai.HasRider(this)); // Purpur
         this.targetSelector.addGoal(1, (new HurtByTargetGoal(this)).setAlertOthers());
         this.targetSelector.addGoal(2, new NearestAttackableTargetGoal<>(this, Player.class, true));
+        if (this.level.purpurConfig.endermiteTemptEnabled) this.goalSelector.addGoal(1, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.endermiteTemptSpeed, this.level.purpurConfig.endermiteTemptIngredient, this.level.purpurConfig.endermiteTemptScared)); // Purpur
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Evoker.java b/src/main/java/net/minecraft/world/entity/monster/Evoker.java
index 01b5a4e75af2aa4f9c59ca77fd91fe62d10fe39b..a6f7cce68b0dd7431f8253609e0a106c36a10e04 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Evoker.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Evoker.java
@@ -81,6 +81,7 @@ public class Evoker extends SpellcasterIllager {
         this.targetSelector.addGoal(2, (new NearestAttackableTargetGoal<>(this, Player.class, true)).setUnseenMemoryTicks(300));
         this.targetSelector.addGoal(3, (new NearestAttackableTargetGoal<>(this, AbstractVillager.class, false)).setUnseenMemoryTicks(300));
         this.targetSelector.addGoal(3, new NearestAttackableTargetGoal<>(this, IronGolem.class, false));
+        if (this.level.purpurConfig.evokerTemptEnabled) this.goalSelector.addGoal(3, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.evokerTemptSpeed, this.level.purpurConfig.evokerTemptIngredient, this.level.purpurConfig.evokerTemptScared)); // Purpur
     }
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/monster/Giant.java b/src/main/java/net/minecraft/world/entity/monster/Giant.java
index 91e28c414545d2bbb4e2f22c516d0f683e8b04ec..af1ed6e77d8f52b29e4cfab2c235789e2b821b5c 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Giant.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Giant.java
@@ -75,6 +75,7 @@ public class Giant extends Monster {
                 this.targetSelector.addGoal(5, new NearestAttackableTargetGoal<>(this, Turtle.class, true));
             }
         }
+        if (this.level.purpurConfig.giantTemptEnabled) this.goalSelector.addGoal(1, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.giantTemptSpeed, this.level.purpurConfig.giantTemptIngredient, this.level.purpurConfig.giantTemptScared)); // Purpur
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Guardian.java b/src/main/java/net/minecraft/world/entity/monster/Guardian.java
index 2a25dbf9449ebc63587f24346ee92bd3115ad4d6..20677a0d1b07de9343f9c7493505c93e3570fefa 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Guardian.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Guardian.java
@@ -110,6 +110,7 @@ public class Guardian extends Monster {
         pathfindergoalmovetowardsrestriction.setFlags(EnumSet.of(Goal.Flag.MOVE, Goal.Flag.LOOK));
         this.targetSelector.addGoal(0, new net.pl3x.purpur.entity.ai.HasRider(this)); // Purpur
         this.targetSelector.addGoal(1, new NearestAttackableTargetGoal<>(this, LivingEntity.class, 10, true, false, new Guardian.GuardianAttackSelector(this)));
+        if (this.level.purpurConfig.guardianTemptEnabled) this.goalSelector.addGoal(3, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.guardianTemptSpeed, this.level.purpurConfig.guardianTemptIngredient, this.level.purpurConfig.guardianTemptScared)); // Purpur
     }
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/monster/Husk.java b/src/main/java/net/minecraft/world/entity/monster/Husk.java
index 2ff43cebc2e6471395e90a8a19828d94fe635e0b..2f8eeac7a53a1befa20c7f48bfa4bd4155aa41b8 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Husk.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Husk.java
@@ -120,4 +120,12 @@ public class Husk extends Zombie {
     protected ItemStack getSkull() {
         return ItemStack.EMPTY;
     }
+    
+    // Purpur start
+    @Override
+    protected void registerGoals() {
+        super.registerGoals();
+        if (this.level.purpurConfig.huskTemptEnabled) this.goalSelector.addGoal(4, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.huskTemptSpeed, this.level.purpurConfig.huskTemptIngredient, this.level.purpurConfig.huskTemptScared)); // Purpur
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/world/entity/monster/Illusioner.java b/src/main/java/net/minecraft/world/entity/monster/Illusioner.java
index c4c239ab51c48a2b9c12e547dc7e125955911794..2bfd8e90bd8ff78efee7cbbb9b5b18e1803eb423 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Illusioner.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Illusioner.java
@@ -95,6 +95,7 @@ public class Illusioner extends SpellcasterIllager implements RangedAttackMob {
         this.targetSelector.addGoal(2, (new NearestAttackableTargetGoal<>(this, Player.class, true)).setUnseenMemoryTicks(300));
         this.targetSelector.addGoal(3, (new NearestAttackableTargetGoal<>(this, AbstractVillager.class, false)).setUnseenMemoryTicks(300));
         this.targetSelector.addGoal(3, (new NearestAttackableTargetGoal<>(this, IronGolem.class, false)).setUnseenMemoryTicks(300));
+        if (this.level.purpurConfig.illusionerTemptEnabled) this.goalSelector.addGoal(3, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.illusionerTemptSpeed, this.level.purpurConfig.illusionerTemptIngredient, this.level.purpurConfig.illusionerTemptScared)); // Purpur
     }
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/monster/Pillager.java b/src/main/java/net/minecraft/world/entity/monster/Pillager.java
index 48a1bd4c9c7e36e42797937ea1af3d213f418da4..534c7cc112bb7d17fec02dd4e2b8816b193a141d 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Pillager.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Pillager.java
@@ -98,6 +98,7 @@ public class Pillager extends AbstractIllager implements CrossbowAttackMob, Inve
         this.targetSelector.addGoal(2, new NearestAttackableTargetGoal<>(this, Player.class, true));
         this.targetSelector.addGoal(3, new NearestAttackableTargetGoal<>(this, AbstractVillager.class, false));
         this.targetSelector.addGoal(3, new NearestAttackableTargetGoal<>(this, IronGolem.class, true));
+        if (this.level.purpurConfig.pillagerTemptEnabled) this.goalSelector.addGoal(2, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.pillagerTemptSpeed, this.level.purpurConfig.pillagerTemptIngredient, this.level.purpurConfig.pillagerTemptScared)); // Purpur
     }
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/monster/Ravager.java b/src/main/java/net/minecraft/world/entity/monster/Ravager.java
index 56ff44fb097893c2596e60312671307942520c0f..ed2891cdb2261b4fc592126ba899167c33330321 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Ravager.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Ravager.java
@@ -107,6 +107,7 @@ public class Ravager extends Raider {
         this.targetSelector.addGoal(3, new NearestAttackableTargetGoal<>(this, Player.class, true));
         this.targetSelector.addGoal(4, new NearestAttackableTargetGoal<>(this, AbstractVillager.class, true));
         this.targetSelector.addGoal(4, new NearestAttackableTargetGoal<>(this, IronGolem.class, true));
+        if (this.level.purpurConfig.ravagerTemptEnabled) this.goalSelector.addGoal(3, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.ravagerTemptSpeed, this.level.purpurConfig.ravagerTemptIngredient, this.level.purpurConfig.ravagerTemptScared)); // Purpur
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Shulker.java b/src/main/java/net/minecraft/world/entity/monster/Shulker.java
index fba13f838c7a427cf43ae9958d8815b170d64b46..3505d36b94b9330f8ca574ebcb162402015f9c86 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Shulker.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Shulker.java
@@ -137,6 +137,7 @@ public class Shulker extends AbstractGolem implements Enemy {
         this.targetSelector.addGoal(1, (new HurtByTargetGoal(this, new Class[]{this.getClass()})).setAlertOthers(new Class[0])); // CraftBukkit - decompile error
         this.targetSelector.addGoal(2, new Shulker.ShulkerNearestAttackGoal(this));
         this.targetSelector.addGoal(3, new Shulker.ShulkerDefenseAttackGoal(this));
+        if (this.level.purpurConfig.shulkerTemptEnabled) this.goalSelector.addGoal(4, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.shulkerTemptSpeed, this.level.purpurConfig.shulkerTemptIngredient, this.level.purpurConfig.shulkerTemptScared)); // Purpur
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Silverfish.java b/src/main/java/net/minecraft/world/entity/monster/Silverfish.java
index b9d5a03000b3b0759d786ac69e30d6a9d25146b3..536a643d06a6a35e2d77c809806171c9e271028c 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Silverfish.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Silverfish.java
@@ -67,6 +67,7 @@ public class Silverfish extends Monster {
         this.targetSelector.addGoal(0, new net.pl3x.purpur.entity.ai.HasRider(this)); // Purpur
         this.targetSelector.addGoal(1, (new HurtByTargetGoal(this, new Class[0])).setAlertOthers(new Class[0])); // CraftBukkit - decompile error
         this.targetSelector.addGoal(2, new NearestAttackableTargetGoal<>(this, Player.class, true));
+        if (this.level.purpurConfig.silverfishTemptEnabled) this.goalSelector.addGoal(2, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.silverfishTemptSpeed, this.level.purpurConfig.silverfishTemptIngredient, this.level.purpurConfig.silverfishTemptScared)); // Purpur
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Skeleton.java b/src/main/java/net/minecraft/world/entity/monster/Skeleton.java
index 5a2759e636717920a6b34ddbda34a1106a88714b..62c8d59de61db1d5a2764374aa62995094807e6e 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Skeleton.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Skeleton.java
@@ -150,4 +150,12 @@ public class Skeleton extends AbstractSkeleton {
         }
 
     }
+    
+    // Purpur start
+    @Override
+    protected void registerGoals() {
+        super.registerGoals();
+        if (this.level.purpurConfig.skeletonTemptEnabled) this.goalSelector.addGoal(2, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.skeletonTemptSpeed, this.level.purpurConfig.skeletonTemptIngredient, this.level.purpurConfig.skeletonTemptScared)); // Purpur
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/world/entity/monster/Spider.java b/src/main/java/net/minecraft/world/entity/monster/Spider.java
index 7ed31ccc9fbb3960f9de24d5893f7fa1f86ab4b8..4b5463a4b0a65375fbc494737e6586cdcc48df5d 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Spider.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Spider.java
@@ -81,6 +81,7 @@ public class Spider extends Monster {
         this.targetSelector.addGoal(1, new HurtByTargetGoal(this, new Class[0]));
         this.targetSelector.addGoal(2, new Spider.SpiderTargetGoal<>(this, Player.class));
         this.targetSelector.addGoal(3, new Spider.SpiderTargetGoal<>(this, IronGolem.class));
+        if (this.level.purpurConfig.spiderTemptEnabled) this.goalSelector.addGoal(3, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.spiderTemptSpeed, this.level.purpurConfig.spiderTemptIngredient, this.level.purpurConfig.spiderTemptScared)); // Purpur
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Stray.java b/src/main/java/net/minecraft/world/entity/monster/Stray.java
index d2eb323c8957ac4ccdf2ab73d83dbbdeefd6ae53..e2d869edbab9fd7c3e6cff220154c33b2f1981b2 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Stray.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Stray.java
@@ -77,4 +77,12 @@ public class Stray extends AbstractSkeleton {
 
         return abstractArrow;
     }
+
+    // Purpur start
+    @Override
+    protected void registerGoals() {
+        super.registerGoals();
+        if (this.level.purpurConfig.strayTemptEnabled) this.goalSelector.addGoal(4, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.strayTemptSpeed, this.level.purpurConfig.strayTemptIngredient, this.level.purpurConfig.strayTemptScared)); // Purpur
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/world/entity/monster/Strider.java b/src/main/java/net/minecraft/world/entity/monster/Strider.java
index 19753a1855b11f8cdc9fb77e8d9079bbeb3c519b..f3311a838e06e647743d3a87553dbff70b0eb961 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Strider.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Strider.java
@@ -191,6 +191,7 @@ public class Strider extends Animal implements ItemSteerable, Saddleable {
         this.goalSelector.addGoal(8, new LookAtPlayerGoal(this, Player.class, 8.0F));
         this.goalSelector.addGoal(8, new RandomLookAroundGoal(this));
         this.goalSelector.addGoal(9, new LookAtPlayerGoal(this, Strider.class, 8.0F));
+        if (this.level.purpurConfig.striderTemptEnabled) this.goalSelector.addGoal(3, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.striderTemptSpeed, this.level.purpurConfig.striderTemptIngredient, this.level.purpurConfig.striderTemptScared)); // Purpur
     }
 
     public void setSuffocating(boolean cold) {
diff --git a/src/main/java/net/minecraft/world/entity/monster/Vex.java b/src/main/java/net/minecraft/world/entity/monster/Vex.java
index 18d650befe5f257b9e8f269e605de70d4201dd5c..bc7a45f6190a5837275a086a29e302c60b0f36a3 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Vex.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Vex.java
@@ -138,6 +138,7 @@ public class Vex extends Monster {
         this.targetSelector.addGoal(1, (new HurtByTargetGoal(this, new Class[]{Raider.class})).setAlertOthers(new Class[0])); // CraftBukkit - decompile error
         this.targetSelector.addGoal(2, new Vex.VexCopyOwnerTargetGoal(this));
         this.targetSelector.addGoal(3, new NearestAttackableTargetGoal<>(this, Player.class, true));
+        if (this.level.purpurConfig.vexTemptEnabled) this.goalSelector.addGoal(4, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.vexTemptSpeed, this.level.purpurConfig.vexTemptIngredient, this.level.purpurConfig.vexTemptScared)); // Purpur
     }
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/monster/Vindicator.java b/src/main/java/net/minecraft/world/entity/monster/Vindicator.java
index 9096c40ad5784d9097e889f0f43b6cf1f60c0692..e9f6f26eb32e79eb4ed25d98ee896cee67fa0aa6 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Vindicator.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Vindicator.java
@@ -93,6 +93,7 @@ public class Vindicator extends AbstractIllager {
         this.goalSelector.addGoal(8, new RandomStrollGoal(this, 0.6D));
         this.goalSelector.addGoal(9, new LookAtPlayerGoal(this, Player.class, 3.0F, 1.0F));
         this.goalSelector.addGoal(10, new LookAtPlayerGoal(this, Mob.class, 8.0F));
+        if (this.level.purpurConfig.vindicatorTemptEnabled) this.goalSelector.addGoal(2, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.vindicatorTemptSpeed, this.level.purpurConfig.vindicatorTemptIngredient, this.level.purpurConfig.vindicatorTemptScared)); // Purpur
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Witch.java b/src/main/java/net/minecraft/world/entity/monster/Witch.java
index 0876224d15b7b08954ab4348f942d2aaf91aa078..8eb4926d85722cf5fcdce458eaf9bd24bdba352c 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Witch.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Witch.java
@@ -94,6 +94,7 @@ public class Witch extends Raider implements RangedAttackMob {
         this.targetSelector.addGoal(1, new HurtByTargetGoal(this, new Class[]{Raider.class}));
         this.targetSelector.addGoal(2, this.healRaidersGoal);
         this.targetSelector.addGoal(3, this.attackPlayersGoal);
+        if (this.level.purpurConfig.witchTemptEnabled) this.goalSelector.addGoal(3, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.witchTemptSpeed, this.level.purpurConfig.witchTemptIngredient, this.level.purpurConfig.witchTemptScared)); // Purpur
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/WitherSkeleton.java b/src/main/java/net/minecraft/world/entity/monster/WitherSkeleton.java
index 16d7266c32f5aa5cb980bf07d9d92c41c6405a2f..afedbae79d5cc010c898590ca48cd374c0d9a4d5 100644
--- a/src/main/java/net/minecraft/world/entity/monster/WitherSkeleton.java
+++ b/src/main/java/net/minecraft/world/entity/monster/WitherSkeleton.java
@@ -53,6 +53,7 @@ public class WitherSkeleton extends AbstractSkeleton {
 
     @Override
     protected void registerGoals() {
+        if (this.level.purpurConfig.witherSkeletonTemptEnabled) this.goalSelector.addGoal(3, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.witherSkeletonTemptSpeed, this.level.purpurConfig.witherSkeletonTemptIngredient, this.level.purpurConfig.witherSkeletonTemptScared)); // Purpur
         this.targetSelector.addGoal(3, new NearestAttackableTargetGoal<>(this, AbstractPiglin.class, true));
         super.registerGoals();
     }
diff --git a/src/main/java/net/minecraft/world/entity/monster/Zoglin.java b/src/main/java/net/minecraft/world/entity/monster/Zoglin.java
index 7afc9b83e385d711096db5ea9c6c259fd2387075..65a2a3390f8af4aecf6714c67c00566c3ef1819c 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Zoglin.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Zoglin.java
@@ -317,4 +317,12 @@ public class Zoglin extends Monster implements Enemy, HoglinBase {
         }
 
     }
+
+    // Purpur start
+    @Override
+    protected void registerGoals() {
+        super.registerGoals();
+        if (this.level.purpurConfig.zoglinTemptEnabled) this.goalSelector.addGoal(2, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.zoglinTemptSpeed, this.level.purpurConfig.zoglinTemptIngredient, this.level.purpurConfig.zoglinTemptScared)); // Purpur
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/world/entity/monster/Zombie.java b/src/main/java/net/minecraft/world/entity/monster/Zombie.java
index 39fa4a9a52c510e88036ab790a8739d20935188b..7706eb112a125b493d348984b34ff89536c6e284 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Zombie.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Zombie.java
@@ -168,6 +168,7 @@ public class Zombie extends Monster {
         // Purpur end
         this.targetSelector.addGoal(3, new NearestAttackableTargetGoal<>(this, IronGolem.class, true));
         this.targetSelector.addGoal(5, new NearestAttackableTargetGoal<>(this, Turtle.class, 10, true, false, Turtle.BABY_ON_LAND_SELECTOR));
+        if (this.level.purpurConfig.zombieTemptEnabled) this.goalSelector.addGoal(3, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.zombieTemptSpeed, this.level.purpurConfig.zombieTemptIngredient, this.level.purpurConfig.zombieTemptScared)); // Purpur
     }
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/monster/ZombieVillager.java b/src/main/java/net/minecraft/world/entity/monster/ZombieVillager.java
index 6a456f52ae529654c15bd3e8ec717b3fe032da21..12f785d34c6759fd89edcd9be739dcd12f873239 100644
--- a/src/main/java/net/minecraft/world/entity/monster/ZombieVillager.java
+++ b/src/main/java/net/minecraft/world/entity/monster/ZombieVillager.java
@@ -406,4 +406,12 @@ public class ZombieVillager extends Zombie implements VillagerDataHolder {
     public void setVillagerXp(int xp) {
         this.villagerXp = xp;
     }
+
+    // Purpur start
+    @Override
+    protected void registerGoals() {
+        super.registerGoals();
+        if (this.level.purpurConfig.zombieVillagerTemptEnabled) this.goalSelector.addGoal(2, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.zombieVillagerTemptSpeed, this.level.purpurConfig.zombieVillagerTemptIngredient, this.level.purpurConfig.zombieVillagerTemptScared)); // Purpur
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/world/entity/monster/ZombifiedPiglin.java b/src/main/java/net/minecraft/world/entity/monster/ZombifiedPiglin.java
index 64216c9d76ce5ec6a845915ca078b0c0fb0199d4..0a2150065a86f737f8f68afe2fd9bb632e742322 100644
--- a/src/main/java/net/minecraft/world/entity/monster/ZombifiedPiglin.java
+++ b/src/main/java/net/minecraft/world/entity/monster/ZombifiedPiglin.java
@@ -107,6 +107,7 @@ public class ZombifiedPiglin extends Zombie implements NeutralMob {
         this.targetSelector.addGoal(1, pathfinderGoalHurtByTarget = new HurtByTargetGoal(this).setAlertOthers(new Class[0])); // CraftBukkit - decompile error // Paper - assign field
         this.targetSelector.addGoal(2, new NearestAttackableTargetGoal<>(this, Player.class, 10, true, false, this::isAngryAt));
         this.targetSelector.addGoal(3, new ResetUniversalAngerTargetGoal<>(this, true));
+        if (this.level.purpurConfig.zombifiedPiglinTemptEnabled) this.goalSelector.addGoal(3, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.zombifiedPiglinTemptSpeed, this.level.purpurConfig.zombifiedPiglinTemptIngredient, this.level.purpurConfig.zombifiedPiglinTemptScared)); // Purpur
     }
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/monster/hoglin/Hoglin.java b/src/main/java/net/minecraft/world/entity/monster/hoglin/Hoglin.java
index 975e15a501f01c1f87b80ee20d57f4d26051f326..8328a6bf1d9ade7ca42e395e25c1c0fb7f300ceb 100644
--- a/src/main/java/net/minecraft/world/entity/monster/hoglin/Hoglin.java
+++ b/src/main/java/net/minecraft/world/entity/monster/hoglin/Hoglin.java
@@ -384,4 +384,12 @@ public class Hoglin extends Animal implements Enemy, HoglinBase {
         super.sendDebugPackets();
         DebugPackets.sendEntityBrain(this);
     }
+    
+    // Purpur start
+    @Override
+    protected void registerGoals() {
+        super.registerGoals();
+        if (this.level.purpurConfig.hoglinTemptEnabled) this.goalSelector.addGoal(2, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.hoglinTemptSpeed, this.level.purpurConfig.hoglinTemptIngredient, this.level.purpurConfig.hoglinTemptScared)); // Purpur
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/world/entity/npc/AbstractVillager.java b/src/main/java/net/minecraft/world/entity/npc/AbstractVillager.java
index 44e9d6d0b80203b152957efef953c2fa1c9f3146..23cabe7bebbc99419d997aee4b89ed211d1e9e97 100644
--- a/src/main/java/net/minecraft/world/entity/npc/AbstractVillager.java
+++ b/src/main/java/net/minecraft/world/entity/npc/AbstractVillager.java
@@ -43,7 +43,7 @@ import org.bukkit.event.entity.VillagerAcquireTradeEvent;
 // CraftBukkit end
 
 public abstract class AbstractVillager extends AgeableMob implements InventoryCarrier, Npc, Merchant {
-    static final net.minecraft.world.item.crafting.Ingredient TEMPT_ITEMS = net.minecraft.world.item.crafting.Ingredient.of(net.minecraft.world.level.block.Blocks.EMERALD_BLOCK.asItem()); // Purpur
+    static final net.minecraft.world.item.crafting.Ingredient TEMPT_ITEMS = net.minecraft.world.level.block.Blocks.EMERALD_BLOCK.asItem()); // Purpur
 
     // CraftBukkit start
     private CraftMerchant craftMerchant;
diff --git a/src/main/java/net/minecraft/world/entity/npc/Villager.java b/src/main/java/net/minecraft/world/entity/npc/Villager.java
index e5adfd16d132828727040b56a90c1173c9b71a44..1f628c1a333427cdf166f5e386f0c7e533874234 100644
--- a/src/main/java/net/minecraft/world/entity/npc/Villager.java
+++ b/src/main/java/net/minecraft/world/entity/npc/Villager.java
@@ -175,6 +175,7 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
     protected void registerGoals() {
         this.goalSelector.addGoal(0, new net.pl3x.purpur.entity.ai.HasRider(this));
         if (level.purpurConfig.villagerFollowEmeraldBlock) this.goalSelector.addGoal(3, new net.minecraft.world.entity.ai.goal.TemptGoal(this, 1.0D, TEMPT_ITEMS, false));
+        if (this.level.purpurConfig.villagerTemptEnabled) this.goalSelector.addGoal(5, new net.minecraft.world.entity.ai.goal.TemptGoal(this, this.level.purpurConfig.villagerTemptSpeed, this.level.purpurConfig.villagerTemptIngredient, this.level.purpurConfig.villagerTemptScared)); // Purpur
     }
 
     @Override
diff --git a/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java b/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
index 66cce23e9c7927d73bc9ecf038ad6c0d1f9d534d..086bfdad483476172469aa22d53f1ec1a6590557 100644
--- a/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
+++ b/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
@@ -7,6 +7,7 @@ import net.minecraft.world.Difficulty;
 import net.minecraft.world.item.DyeColor;
 import net.minecraft.world.item.Item;
 import net.minecraft.world.item.Items;
+import net.minecraft.world.item.crafting.Ingredient;
 import net.minecraft.world.level.Explosion;
 import net.minecraft.world.level.block.Block;
 import net.minecraft.world.level.block.Blocks;
@@ -28,6 +29,8 @@ import java.util.Map;
 import java.util.Set;
 import java.util.function.Predicate;
 import java.util.logging.Level;
+import java.util.stream.Collectors;
+
 import static net.pl3x.purpur.PurpurConfig.log;
 
 @SuppressWarnings("unused")
@@ -100,6 +103,23 @@ public class PurpurWorldConfig {
         return value.isEmpty() ? fallback : value;
     }
 
+    private List<Item> getItemList(final String path) {
+        List<Item> list = new ArrayList<>();
+        getList(path, new ArrayList<>()).forEach(key -> {
+            if (key.toString().equals("*")) {
+                Registry.ITEM.stream().filter(item -> item != Items.AIR).forEach(list::add);
+                return;
+            }
+            Item item = Registry.ITEM.get(new ResourceLocation(key.toString()));
+            if (item != Items.AIR) list.add(item);
+        });
+        return list;
+    }
+
+    private Ingredient getIngredient(final String path) {
+        return Ingredient.of(getItemList(path).toArray(new Item[0]));
+    }
+
     public float armorstandStepHeight = 0.0F;
     public boolean armorstandSetNameVisible = false;
     public boolean armorstandFixNametags = false;
@@ -1013,10 +1033,18 @@ public class PurpurWorldConfig {
     public boolean axolotlRidable = false;
     public double axolotlMaxHealth = 14.0D;
     public int axolotlBreedingTicks = 6000;
+    public boolean axolotlTemptEnabled = false;
+    public Ingredient axolotlTemptIngredient = Ingredient.EMPTY;
+    public boolean axolotlTemptScared = false;
+    public double axolotlTemptSpeed = 1D;
     private void axolotlSettings() {
         axolotlRidable = getBoolean("mobs.axolotl.ridable", axolotlRidable);
         axolotlMaxHealth = getDouble("mobs.axolotl.attributes.max_health", axolotlMaxHealth);
         axolotlBreedingTicks = getInt("mobs.axolotl.breeding-delay-ticks", axolotlBreedingTicks);
+        axolotlTemptEnabled = getBoolean("mobs.axolotl.goal.tempt.enabled", axolotlTemptEnabled);
+        axolotlTemptIngredient = getIngredient("mobs.axolotl.goal.tempt.items");
+        axolotlTemptScared = getBoolean("mobs.axolotl.goal.tempt.scared", axolotlTemptScared);
+        axolotlTemptSpeed = getDouble("mobs.axolotl.goal.tempt.speed", axolotlTemptSpeed);
     }
 
     public boolean batRidable = false;
@@ -1049,6 +1077,10 @@ public class PurpurWorldConfig {
     public int beeBreedingTicks = 6000;
     public boolean beeCanWorkAtNight = false;
     public boolean beeCanWorkInRain = false;
+    public boolean beeTemptEnabled = false;
+    public Ingredient beeTemptIngredient = Ingredient.EMPTY;
+    public boolean beeTemptScared = false;
+    public double beeTemptSpeed = 1D;
     private void beeSettings() {
         beeRidable = getBoolean("mobs.bee.ridable", beeRidable);
         beeRidableInWater = getBoolean("mobs.bee.ridable-in-water", beeRidableInWater);
@@ -1062,6 +1094,10 @@ public class PurpurWorldConfig {
         beeBreedingTicks = getInt("mobs.bee.breeding-delay-ticks", beeBreedingTicks);
         beeCanWorkAtNight = getBoolean("mobs.bee.can-work-at-night", beeCanWorkAtNight);
         beeCanWorkInRain = getBoolean("mobs.bee.can-work-in-rain", beeCanWorkInRain);
+        beeTemptEnabled = getBoolean("mobs.bat.goal.tempt.enabled", beeTemptEnabled);
+        beeTemptIngredient = getIngredient("mobs.bee.goal.tempt.items");
+        beeTemptScared = getBoolean("mobs.bee.goal.tempt.scared", beeTemptScared);
+        beeTemptSpeed = getDouble("mobs.bee.goal.tempt.speed", beeTemptSpeed);
     }
 
     public boolean blazeRidable = false;
@@ -1069,6 +1105,10 @@ public class PurpurWorldConfig {
     public double blazeMaxY = 256D;
     public double blazeMaxHealth = 20.0D;
     public boolean blazeTakeDamageFromWater = true;
+    public boolean blazeTemptEnabled = false;
+    public Ingredient blazeTemptIngredient = Ingredient.EMPTY;
+    public boolean blazeTemptScared = false;
+    public double blazeTemptSpeed = 1D;
     private void blazeSettings() {
         blazeRidable = getBoolean("mobs.blaze.ridable", blazeRidable);
         blazeRidableInWater = getBoolean("mobs.blaze.ridable-in-water", blazeRidableInWater);
@@ -1080,6 +1120,10 @@ public class PurpurWorldConfig {
         }
         blazeMaxHealth = getDouble("mobs.blaze.attributes.max_health", blazeMaxHealth);
         blazeTakeDamageFromWater = getBoolean("mobs.blaze.takes-damage-from-water", blazeTakeDamageFromWater);
+        blazeTemptEnabled = getBoolean("mobs.blaze.goal.tempt.enabled", blazeTemptEnabled);
+        blazeTemptIngredient = getIngredient("mobs.blaze.goal.tempt.items");
+        blazeTemptScared = getBoolean("mobs.blaze.goal.tempt.scared", blazeTemptScared);
+        blazeTemptSpeed = getDouble("mobs.blaze.goal.tempt.speed", blazeTemptSpeed);
     }
 
     public boolean catRidable = false;
@@ -1089,6 +1133,10 @@ public class PurpurWorldConfig {
     public int catSpawnSwampHutScanRange = 16;
     public int catSpawnVillageScanRange = 48;
     public int catBreedingTicks = 6000;
+    public boolean catTemptEnabled = false;
+    public Ingredient catTemptIngredient = Ingredient.EMPTY;
+    public boolean catTemptScared = false;
+    public double catTemptSpeed = 1D;
     private void catSettings() {
         catRidable = getBoolean("mobs.cat.ridable", catRidable);
         catRidableInWater = getBoolean("mobs.cat.ridable-in-water", catRidableInWater);
@@ -1102,11 +1150,19 @@ public class PurpurWorldConfig {
         catSpawnSwampHutScanRange = getInt("mobs.cat.scan-range-for-other-cats.swamp-hut", catSpawnSwampHutScanRange);
         catSpawnVillageScanRange = getInt("mobs.cat.scan-range-for-other-cats.village", catSpawnVillageScanRange);
         catBreedingTicks = getInt("mobs.cat.breeding-delay-ticks", catBreedingTicks);
+        catTemptEnabled = getBoolean("mobs.cat.goal.tempt.enabled", catTemptEnabled);
+        catTemptIngredient = getIngredient("mobs.cat.goal.tempt.items");
+        catTemptScared = getBoolean("mobs.cat.goal.tempt.scared", catTemptScared);
+        catTemptSpeed = getDouble("mobs.cat.goal.tempt.speed", catTemptSpeed);
     }
 
     public boolean caveSpiderRidable = false;
     public boolean caveSpiderRidableInWater = false;
     public double caveSpiderMaxHealth = 12.0D;
+    public boolean caveSpiderTemptEnabled = false;
+    public Ingredient caveSpiderTemptIngredient = Ingredient.EMPTY;
+    public boolean caveSpiderTemptScared = false;
+    public double caveSpiderTemptSpeed = 1D;
     private void caveSpiderSettings() {
         caveSpiderRidable = getBoolean("mobs.cave_spider.ridable", caveSpiderRidable);
         caveSpiderRidableInWater = getBoolean("mobs.cave_spider.ridable-in-water", caveSpiderRidableInWater);
@@ -1116,6 +1172,10 @@ public class PurpurWorldConfig {
             set("mobs.cave_spider.attributes.max_health", oldValue);
         }
         caveSpiderMaxHealth = getDouble("mobs.cave_spider.attributes.max_health", caveSpiderMaxHealth);
+        caveSpiderTemptEnabled = getBoolean("mobs.caveSpider.goal.tempt.enabled", caveSpiderTemptEnabled);
+        caveSpiderTemptIngredient = getIngredient("mobs.caveSpider.goal.tempt.items");
+        caveSpiderTemptScared = getBoolean("mobs.caveSpider.goal.tempt.scared", caveSpiderTemptScared);
+        caveSpiderTemptSpeed = getDouble("mobs.caveSpider.goal.tempt.speed", caveSpiderTemptSpeed);
     }
 
     public boolean chickenRidable = false;
@@ -1123,6 +1183,10 @@ public class PurpurWorldConfig {
     public double chickenMaxHealth = 4.0D;
     public boolean chickenRetaliate = false;
     public int chickenBreedingTicks = 6000;
+    public boolean chickenTemptEnabled = false;
+    public Ingredient chickenTemptIngredient = Ingredient.EMPTY;
+    public boolean chickenTemptScared = false;
+    public double chickenTemptSpeed = 1D;
     private void chickenSettings() {
         chickenRidable = getBoolean("mobs.chicken.ridable", chickenRidable);
         chickenRidableInWater = getBoolean("mobs.chicken.ridable-in-water", chickenRidableInWater);
@@ -1134,10 +1198,18 @@ public class PurpurWorldConfig {
         chickenMaxHealth = getDouble("mobs.chicken.attributes.max_health", chickenMaxHealth);
         chickenRetaliate = getBoolean("mobs.chicken.retaliate", chickenRetaliate);
         chickenBreedingTicks = getInt("mobs.chicken.breeding-delay-ticks", chickenBreedingTicks);
+        chickenTemptEnabled = getBoolean("mobs.chicken.goal.tempt.enabled", chickenTemptEnabled);
+        chickenTemptIngredient = getIngredient("mobs.chicken.goal.tempt.items");
+        chickenTemptScared = getBoolean("mobs.chicken.goal.tempt.scared", chickenTemptScared);
+        chickenTemptSpeed = getDouble("mobs.chicken.goal.tempt.speed", chickenTemptSpeed);
     }
 
     public boolean codRidable = false;
     public double codMaxHealth = 3.0D;
+    public boolean codTemptEnabled = false;
+    public Ingredient codTemptIngredient = Ingredient.EMPTY;
+    public boolean codTemptScared = false;
+    public double codTemptSpeed = 1D;
     private void codSettings() {
         codRidable = getBoolean("mobs.cod.ridable", codRidable);
         if (PurpurConfig.version < 10) {
@@ -1146,6 +1218,10 @@ public class PurpurWorldConfig {
             set("mobs.cod.attributes.max_health", oldValue);
         }
         codMaxHealth = getDouble("mobs.cod.attributes.max_health", codMaxHealth);
+        codTemptEnabled = getBoolean("mobs.cod.goal.tempt.enabled", codTemptEnabled);
+        codTemptIngredient = getIngredient("mobs.cod.goal.tempt.items");
+        codTemptScared = getBoolean("mobs.cod.goal.tempt.scared", codTemptScared);
+        codTemptSpeed = getDouble("mobs.cod.goal.tempt.speed", codTemptSpeed);
     }
 
     public boolean cowRidable = false;
@@ -1155,6 +1231,10 @@ public class PurpurWorldConfig {
     public int cowBreedingTicks = 6000;
     public double cowNaturallyAggressiveToPlayersChance = 0.0D;
     public double cowNaturallyAggressiveToPlayersDamage = 2.0D;
+    public boolean cowTemptEnabled = false;
+    public Ingredient cowTemptIngredient = Ingredient.EMPTY;
+    public boolean cowTemptScared = false;
+    public double cowTemptSpeed = 1D;
     private void cowSettings() {
         if (PurpurConfig.version < 22) {
             double oldValue = getDouble("mobs.cow.naturally-aggressive-to-players-chance", cowNaturallyAggressiveToPlayersChance);
@@ -1173,6 +1253,10 @@ public class PurpurWorldConfig {
         cowBreedingTicks = getInt("mobs.cow.breeding-delay-ticks", cowBreedingTicks);
         cowNaturallyAggressiveToPlayersChance = getDouble("mobs.cow.naturally-aggressive-to-players.chance", cowNaturallyAggressiveToPlayersChance);
         cowNaturallyAggressiveToPlayersDamage = getDouble("mobs.cow.naturally-aggressive-to-players.damage", cowNaturallyAggressiveToPlayersDamage);
+        cowTemptEnabled = getBoolean("mobs.cow.goal.tempt.enabled", cowTemptEnabled);
+        cowTemptIngredient = getIngredient("mobs.cow.goal.tempt.items");
+        cowTemptScared = getBoolean("mobs.cow.goal.tempt.scared", cowTemptScared);
+        cowTemptSpeed = getDouble("mobs.cow.goal.tempt.speed", cowTemptSpeed);
     }
 
     public boolean creeperRidable = false;
@@ -1183,6 +1267,10 @@ public class PurpurWorldConfig {
     public boolean creeperBypassMobGriefing = false;
     public boolean creeperExplodeWhenKilled = false;
     public boolean creeperHealthRadius = false;
+    public boolean creeperTemptEnabled = false;
+    public Ingredient creeperTemptIngredient = Ingredient.EMPTY;
+    public boolean creeperTemptScared = false;
+    public double creeperTemptSpeed = 1D;
     private void creeperSettings() {
         creeperRidable = getBoolean("mobs.creeper.ridable", creeperRidable);
         creeperRidableInWater = getBoolean("mobs.creeper.ridable-in-water", creeperRidableInWater);
@@ -1197,6 +1285,10 @@ public class PurpurWorldConfig {
         creeperBypassMobGriefing = getBoolean("mobs.creeper.bypass-mob-griefing", creeperBypassMobGriefing);
         creeperExplodeWhenKilled = getBoolean("mobs.creeper.explode-when-killed", creeperExplodeWhenKilled);
         creeperHealthRadius = getBoolean("mobs.creeper.health-impacts-explosion", creeperHealthRadius);
+        creeperTemptEnabled = getBoolean("mobs.creeper.goal.tempt.enabled", creeperTemptEnabled);
+        creeperTemptIngredient = getIngredient("mobs.creeper.goal.tempt.items");
+        creeperTemptScared = getBoolean("mobs.creeper.goal.tempt.scared", creeperTemptScared);
+        creeperTemptSpeed = getDouble("mobs.creeper.goal.tempt.speed", creeperTemptSpeed);
     }
 
     public boolean dolphinRidable = false;
@@ -1206,6 +1298,10 @@ public class PurpurWorldConfig {
     public double dolphinMaxHealth = 10.0D;
     public boolean dolphinDisableTreasureSearching = false;
     public double dolphinNaturallyAggressiveToPlayersChance = 0.0D;
+    public boolean dolphinTemptEnabled = false;
+    public Ingredient dolphinTemptIngredient = Ingredient.EMPTY;
+    public boolean dolphinTemptScared = false;
+    public double dolphinTemptSpeed = 1D;
     private void dolphinSettings() {
         dolphinRidable = getBoolean("mobs.dolphin.ridable", dolphinRidable);
         dolphinSpitCooldown = getInt("mobs.dolphin.spit.cooldown", dolphinSpitCooldown);
@@ -1219,6 +1315,10 @@ public class PurpurWorldConfig {
         dolphinMaxHealth = getDouble("mobs.dolphin.attributes.max_health", dolphinMaxHealth);
         dolphinDisableTreasureSearching = getBoolean("mobs.dolphin.disable-treasure-searching", dolphinDisableTreasureSearching);
         dolphinNaturallyAggressiveToPlayersChance = getDouble("mobs.dolphin.naturally-aggressive-to-players-chance", dolphinNaturallyAggressiveToPlayersChance);
+        dolphinTemptEnabled = getBoolean("mobs.dolphin.goal.tempt.enabled", dolphinTemptEnabled);
+        dolphinTemptIngredient = getIngredient("mobs.dolphin.goal.tempt.items");
+        dolphinTemptScared = getBoolean("mobs.dolphin.goal.tempt.scared", dolphinTemptScared);
+        dolphinTemptSpeed = getDouble("mobs.dolphin.goal.tempt.speed", dolphinTemptSpeed);
     }
 
     public boolean donkeyRidableInWater = false;
@@ -1229,6 +1329,10 @@ public class PurpurWorldConfig {
     public double donkeyMovementSpeedMin = 0.175D;
     public double donkeyMovementSpeedMax = 0.175D;
     public int donkeyBreedingTicks = 6000;
+    public boolean donkeyTemptEnabled = false;
+    public Ingredient donkeyTemptIngredient = Ingredient.EMPTY;
+    public boolean donkeyTemptScared = false;
+    public double donkeyTemptSpeed = 1D;
     private void donkeySettings() {
         donkeyRidableInWater = getBoolean("mobs.donkey.ridable-in-water", donkeyRidableInWater);
         if (PurpurConfig.version < 10) {
@@ -1245,6 +1349,10 @@ public class PurpurWorldConfig {
         donkeyMovementSpeedMin = getDouble("mobs.donkey.attributes.movement_speed.min", donkeyMovementSpeedMin);
         donkeyMovementSpeedMax = getDouble("mobs.donkey.attributes.movement_speed.max", donkeyMovementSpeedMax);
         donkeyBreedingTicks = getInt("mobs.donkey.breeding-delay-ticks", donkeyBreedingTicks);
+        donkeyTemptEnabled = getBoolean("mobs.donkey.goal.tempt.enabled", donkeyTemptEnabled);
+        donkeyTemptIngredient = getIngredient("mobs.donkey.goal.tempt.items");
+        donkeyTemptScared = getBoolean("mobs.donkey.goal.tempt.scared", donkeyTemptScared);
+        donkeyTemptSpeed = getDouble("mobs.donkey.goal.tempt.speed", donkeyTemptSpeed);
     }
 
     public boolean drownedRidable = false;
@@ -1255,6 +1363,10 @@ public class PurpurWorldConfig {
     public double drownedJockeyChance = 0.05D;
     public boolean drownedJockeyTryExistingChickens = true;
     public boolean drownedBreakDoors = false;
+    public boolean drownedTemptEnabled = false;
+    public Ingredient drownedTemptIngredient = Ingredient.EMPTY;
+    public boolean drownedTemptScared = false;
+    public double drownedTemptSpeed = 1D;
     private void drownedSettings() {
         drownedRidable = getBoolean("mobs.drowned.ridable", drownedRidable);
         drownedRidableInWater = getBoolean("mobs.drowned.ridable-in-water", drownedRidableInWater);
@@ -1269,10 +1381,18 @@ public class PurpurWorldConfig {
         drownedJockeyChance = getDouble("mobs.drowned.jockey.chance", drownedJockeyChance);
         drownedJockeyTryExistingChickens = getBoolean("mobs.drowned.jockey.try-existing-chickens", drownedJockeyTryExistingChickens);
         drownedBreakDoors = getBoolean("mobs.drowned.can-break-doors", drownedBreakDoors);
+        drownedTemptEnabled = getBoolean("mobs.drowned.goal.tempt.enabled", drownedTemptEnabled);
+        drownedTemptIngredient = getIngredient("mobs.drowned.goal.tempt.items");
+        drownedTemptScared = getBoolean("mobs.drowned.goal.tempt.scared", drownedTemptScared);
+        drownedTemptSpeed = getDouble("mobs.drowned.goal.tempt.speed", drownedTemptSpeed);
     }
 
     public boolean elderGuardianRidable = false;
     public double elderGuardianMaxHealth = 80.0D;
+    public boolean elderGuardianTemptEnabled = false;
+    public Ingredient elderGuardianTemptIngredient = Ingredient.EMPTY;
+    public boolean elderGuardianTemptScared = false;
+    public double elderGuardianTemptSpeed = 1D;
     private void elderGuardianSettings() {
         elderGuardianRidable = getBoolean("mobs.elder_guardian.ridable", elderGuardianRidable);
         if (PurpurConfig.version < 10) {
@@ -1281,6 +1401,10 @@ public class PurpurWorldConfig {
             set("mobs.elder_guardian.attributes.max_health", oldValue);
         }
         elderGuardianMaxHealth = getDouble("mobs.elder_guardian.attributes.max_health", elderGuardianMaxHealth);
+        elderGuardianTemptEnabled = getBoolean("mobs.elderGuardian.goal.tempt.enabled", elderGuardianTemptEnabled);
+        elderGuardianTemptIngredient = getIngredient("mobs.elderGuardian.goal.tempt.items");
+        elderGuardianTemptScared = getBoolean("mobs.elderGuardian.goal.tempt.scared", elderGuardianTemptScared);
+        elderGuardianTemptSpeed = getDouble("mobs.elderGuardian.goal.tempt.speed", elderGuardianTemptSpeed);
     }
 
     public boolean enderDragonRidable = false;
@@ -1321,6 +1445,10 @@ public class PurpurWorldConfig {
     public boolean endermanIgnorePlayerDragonHead = false;
     public boolean endermanDisableStareAggro = false;
     public boolean endermanIgnoreProjectiles = false;
+    public boolean endermanTemptEnabled = false;
+    public Ingredient endermanTemptIngredient = Ingredient.EMPTY;
+    public boolean endermanTemptScared = false;
+    public double endermanTemptSpeed = 1D;
     private void endermanSettings() {
         endermanRidable = getBoolean("mobs.enderman.ridable", endermanRidable);
         endermanRidableInWater = getBoolean("mobs.enderman.ridable-in-water", endermanRidableInWater);
@@ -1343,11 +1471,19 @@ public class PurpurWorldConfig {
         endermanIgnorePlayerDragonHead = getBoolean("mobs.enderman.ignore-players-wearing-dragon-head", endermanIgnorePlayerDragonHead);
         endermanDisableStareAggro = getBoolean("mobs.enderman.disable-player-stare-aggression", endermanDisableStareAggro);
         endermanIgnoreProjectiles = getBoolean("mobs.enderman.ignore-projectiles", endermanIgnoreProjectiles);
+        endermanTemptEnabled = getBoolean("mobs.enderman.goal.tempt.enabled", endermanTemptEnabled);
+        endermanTemptIngredient = getIngredient("mobs.enderman.goal.tempt.items");
+        endermanTemptScared = getBoolean("mobs.enderman.goal.tempt.scared", endermanTemptScared);
+        endermanTemptSpeed = getDouble("mobs.enderman.goal.tempt.speed", endermanTemptSpeed);
     }
 
     public boolean endermiteRidable = false;
     public boolean endermiteRidableInWater = false;
     public double endermiteMaxHealth = 8.0D;
+    public boolean endermiteTemptEnabled = false;
+    public Ingredient endermiteTemptIngredient = Ingredient.EMPTY;
+    public boolean endermiteTemptScared = false;
+    public double endermiteTemptSpeed = 1D;
     private void endermiteSettings() {
         endermiteRidable = getBoolean("mobs.endermite.ridable", endermiteRidable);
         endermiteRidableInWater = getBoolean("mobs.endermite.ridable-in-water", endermiteRidableInWater);
@@ -1357,12 +1493,20 @@ public class PurpurWorldConfig {
             set("mobs.endermite.attributes.max_health", oldValue);
         }
         endermiteMaxHealth = getDouble("mobs.endermite.attributes.max_health", endermiteMaxHealth);
+        endermiteTemptEnabled = getBoolean("mobs.endermite.goal.tempt.enabled", endermiteTemptEnabled);
+        endermiteTemptIngredient = getIngredient("mobs.endermite.goal.tempt.items");
+        endermiteTemptScared = getBoolean("mobs.endermite.goal.tempt.scared", endermiteTemptScared);
+        endermiteTemptSpeed = getDouble("mobs.endermite.goal.tempt.speed", endermiteTemptSpeed);
     }
 
     public boolean evokerRidable = false;
     public boolean evokerRidableInWater = false;
     public double evokerMaxHealth = 24.0D;
     public boolean evokerBypassMobGriefing = false;
+    public boolean evokerTemptEnabled = false;
+    public Ingredient evokerTemptIngredient = Ingredient.EMPTY;
+    public boolean evokerTemptScared = false;
+    public double evokerTemptSpeed = 1D;
     private void evokerSettings() {
         evokerRidable = getBoolean("mobs.evoker.ridable", evokerRidable);
         evokerRidableInWater = getBoolean("mobs.evoker.ridable-in-water", evokerRidableInWater);
@@ -1373,6 +1517,10 @@ public class PurpurWorldConfig {
         }
         evokerMaxHealth = getDouble("mobs.evoker.attributes.max_health", evokerMaxHealth);
         evokerBypassMobGriefing = getBoolean("mobs.evoker.bypass-mob-griefing", evokerBypassMobGriefing);
+        evokerTemptEnabled = getBoolean("mobs.evoker.goal.tempt.enabled", evokerTemptEnabled);
+        evokerTemptIngredient = getIngredient("mobs.evoker.goal.tempt.items");
+        evokerTemptScared = getBoolean("mobs.evoker.goal.tempt.scared", evokerTemptScared);
+        evokerTemptSpeed = getDouble("mobs.evoker.goal.tempt.speed", evokerTemptSpeed);
     }
 
     public boolean foxRidable = false;
@@ -1381,6 +1529,10 @@ public class PurpurWorldConfig {
     public boolean foxTypeChangesWithTulips = false;
     public int foxBreedingTicks = 6000;
     public boolean foxBypassMobGriefing = false;
+    public boolean foxTemptEnabled = false;
+    public Ingredient foxTemptIngredient = Ingredient.EMPTY;
+    public boolean foxTemptScared = false;
+    public double foxTemptSpeed = 1D;
     private void foxSettings() {
         foxRidable = getBoolean("mobs.fox.ridable", foxRidable);
         foxRidableInWater = getBoolean("mobs.fox.ridable-in-water", foxRidableInWater);
@@ -1393,6 +1545,10 @@ public class PurpurWorldConfig {
         foxTypeChangesWithTulips = getBoolean("mobs.fox.tulips-change-type", foxTypeChangesWithTulips);
         foxBreedingTicks = getInt("mobs.fox.breeding-delay-ticks", foxBreedingTicks);
         foxBypassMobGriefing = getBoolean("mobs.fox.bypass-mob-griefing", foxBypassMobGriefing);
+        foxTemptEnabled = getBoolean("mobs.fox.goal.tempt.enabled", foxTemptEnabled);
+        foxTemptIngredient = getIngredient("mobs.fox.goal.tempt.items");
+        foxTemptScared = getBoolean("mobs.fox.goal.tempt.scared", foxTemptScared);
+        foxTemptSpeed = getDouble("mobs.fox.goal.tempt.speed", foxTemptSpeed);
     }
 
     public boolean ghastRidable = false;
@@ -1420,6 +1576,10 @@ public class PurpurWorldConfig {
     public float giantJumpHeight = 1.0F;
     public boolean giantHaveAI = false;
     public boolean giantHaveHostileAI = false;
+    public boolean giantTemptEnabled = false;
+    public Ingredient giantTemptIngredient = Ingredient.EMPTY;
+    public boolean giantTemptScared = false;
+    public double giantTemptSpeed = 1D;
     private void giantSettings() {
         giantRidable = getBoolean("mobs.giant.ridable", giantRidable);
         giantRidableInWater = getBoolean("mobs.giant.ridable-in-water", giantRidableInWater);
@@ -1439,30 +1599,54 @@ public class PurpurWorldConfig {
         giantJumpHeight = (float) getDouble("mobs.giant.jump-height", giantJumpHeight);
         giantHaveAI = getBoolean("mobs.giant.have-ai", giantHaveAI);
         giantHaveHostileAI = getBoolean("mobs.giant.have-hostile-ai", giantHaveHostileAI);
+        giantTemptEnabled = getBoolean("mobs.giant.goal.tempt.enabled", giantTemptEnabled);
+        giantTemptIngredient = getIngredient("mobs.giant.goal.tempt.items");
+        giantTemptScared = getBoolean("mobs.giant.goal.tempt.scared", giantTemptScared);
+        giantTemptSpeed = getDouble("mobs.giant.goal.tempt.speed", giantTemptSpeed);
     }
 
     public boolean glowSquidRidable = false;
     public double glowSquidMaxHealth = 10.0D;
     public boolean glowSquidsCanFly = false;
+    public boolean glowSquidTemptEnabled = false;
+    public Ingredient glowSquidTemptIngredient = Ingredient.EMPTY;
+    public boolean glowSquidTemptScared = false;
+    public double glowSquidTemptSpeed = 1D;
     private void glowSquidSettings() {
         glowSquidRidable = getBoolean("mobs.glow_squid.ridable", glowSquidRidable);
         glowSquidMaxHealth = getDouble("mobs.glow_squid.attributes.max_health", glowSquidMaxHealth);
         glowSquidsCanFly = getBoolean("mobs.glow_squid.can-fly", glowSquidsCanFly);
+        glowSquidTemptEnabled = getBoolean("mobs.glow_squid.goal.tempt.enabled", glowSquidTemptEnabled);
+        glowSquidTemptIngredient = getIngredient("mobs.glow_squid.goal.tempt.items");
+        glowSquidTemptScared = getBoolean("mobs.glow_squid.goal.tempt.scared", glowSquidTemptScared);
+        glowSquidTemptSpeed = getDouble("mobs.glow_squid.goal.tempt.speed", glowSquidTemptSpeed);
     }
 
     public boolean goatRidable = false;
     public boolean goatRidableInWater = false;
     public double goatMaxHealth = 10.0D;
     public int goatBreedingTicks = 6000;
+    public boolean goatTemptEnabled = false;
+    public Ingredient goatTemptIngredient = Ingredient.EMPTY;
+    public boolean goatTemptScared = false;
+    public double goatTemptSpeed = 1D;
     private void goatSettings() {
         goatRidable = getBoolean("mobs.goat.ridable", goatRidable);
         goatRidableInWater = getBoolean("mobs.goat.ridable-in-water", goatRidableInWater);
         goatMaxHealth = getDouble("mobs.goat.attributes.max_health", goatMaxHealth);
         goatBreedingTicks = getInt("mobs.goat.breeding-delay-ticks", goatBreedingTicks);
+        goatTemptEnabled = getBoolean("mobs.goat.goal.tempt.enabled", goatTemptEnabled);
+        goatTemptIngredient = getIngredient("mobs.goat.goal.tempt.items");
+        goatTemptScared = getBoolean("mobs.goat.goal.tempt.scared", goatTemptScared);
+        goatTemptSpeed = getDouble("mobs.goat.goal.tempt.speed", goatTemptSpeed);
     }
 
     public boolean guardianRidable = false;
     public double guardianMaxHealth = 30.0D;
+    public boolean guardianTemptEnabled = false;
+    public Ingredient guardianTemptIngredient = Ingredient.EMPTY;
+    public boolean guardianTemptScared = false;
+    public double guardianTemptSpeed = 1D;
     private void guardianSettings() {
         guardianRidable = getBoolean("mobs.guardian.ridable", guardianRidable);
         if (PurpurConfig.version < 10) {
@@ -1471,12 +1655,20 @@ public class PurpurWorldConfig {
             set("mobs.guardian.attributes.max_health", oldValue);
         }
         guardianMaxHealth = getDouble("mobs.guardian.attributes.max_health", guardianMaxHealth);
+        guardianTemptEnabled = getBoolean("mobs.guardian.goal.tempt.enabled", guardianTemptEnabled);
+        guardianTemptIngredient = getIngredient("mobs.guardian.goal.tempt.items");
+        guardianTemptScared = getBoolean("mobs.guardian.goal.tempt.scared", guardianTemptScared);
+        guardianTemptSpeed = getDouble("mobs.guardian.goal.tempt.speed", guardianTemptSpeed);
     }
 
     public boolean hoglinRidable = false;
     public boolean hoglinRidableInWater = false;
     public double hoglinMaxHealth = 40.0D;
     public int hoglinBreedingTicks = 6000;
+    public boolean hoglinTemptEnabled = false;
+    public Ingredient hoglinTemptIngredient = Ingredient.EMPTY;
+    public boolean hoglinTemptScared = false;
+    public double hoglinTemptSpeed = 1D;
     private void hoglinSettings() {
         hoglinRidable = getBoolean("mobs.hoglin.ridable", hoglinRidable);
         hoglinRidableInWater = getBoolean("mobs.hoglin.ridable-in-water", hoglinRidableInWater);
@@ -1487,6 +1679,10 @@ public class PurpurWorldConfig {
         }
         hoglinMaxHealth = getDouble("mobs.hoglin.attributes.max_health", hoglinMaxHealth);
         hoglinBreedingTicks = getInt("mobs.hoglin.breeding-delay-ticks", hoglinBreedingTicks);
+        hoglinTemptEnabled = getBoolean("mobs.hoglin.goal.tempt.enabled", hoglinTemptEnabled);
+        hoglinTemptIngredient = getIngredient("mobs.hoglin.goal.tempt.items");
+        hoglinTemptScared = getBoolean("mobs.hoglin.goal.tempt.scared", hoglinTemptScared);
+        hoglinTemptSpeed = getDouble("mobs.hoglin.goal.tempt.speed", hoglinTemptSpeed);
     }
 
     public boolean horseRidableInWater = false;
@@ -1499,6 +1695,10 @@ public class PurpurWorldConfig {
     public int horseBreedingTicks = 6000;
     public boolean horseStandWithRider = true;
     public boolean horseTemptedByGold = false;
+    public boolean horseTemptEnabled = false;
+    public Ingredient horseTemptIngredient = Ingredient.EMPTY;
+    public boolean horseTemptScared = false;
+    public double horseTemptSpeed = 1D;
     private void horseSettings() {
         horseRidableInWater = getBoolean("mobs.horse.ridable-in-water", horseRidableInWater);
         if (PurpurConfig.version < 10) {
@@ -1517,6 +1717,10 @@ public class PurpurWorldConfig {
         horseBreedingTicks = getInt("mobs.horse.breeding-delay-ticks", horseBreedingTicks);
         horseStandWithRider = getBoolean("mobs.horse.stand-with-rider", horseStandWithRider);
         horseTemptedByGold = getBoolean("mobs.horse.tempted-by-gold", horseTemptedByGold);
+        horseTemptEnabled = getBoolean("mobs.horse.goal.tempt.enabled", horseTemptEnabled);
+        horseTemptIngredient = getIngredient("mobs.horse.goal.tempt.items");
+        horseTemptScared = getBoolean("mobs.horse.goal.tempt.scared", horseTemptScared);
+        horseTemptSpeed = getDouble("mobs.horse.goal.tempt.speed", horseTemptSpeed);
     }
 
     public boolean huskRidable = false;
@@ -1526,6 +1730,10 @@ public class PurpurWorldConfig {
     public boolean huskJockeyOnlyBaby = true;
     public double huskJockeyChance = 0.05D;
     public boolean huskJockeyTryExistingChickens = true;
+    public boolean huskTemptEnabled = false;
+    public Ingredient huskTemptIngredient = Ingredient.EMPTY;
+    public boolean huskTemptScared = false;
+    public double huskTemptSpeed = 1D;
     private void huskSettings() {
         huskRidable = getBoolean("mobs.husk.ridable", huskRidable);
         huskRidableInWater = getBoolean("mobs.husk.ridable-in-water", huskRidableInWater);
@@ -1539,6 +1747,10 @@ public class PurpurWorldConfig {
         huskJockeyOnlyBaby = getBoolean("mobs.husk.jockey.only-babies", huskJockeyOnlyBaby);
         huskJockeyChance = getDouble("mobs.husk.jockey.chance", huskJockeyChance);
         huskJockeyTryExistingChickens = getBoolean("mobs.husk.jockey.try-existing-chickens", huskJockeyTryExistingChickens);
+        huskTemptEnabled = getBoolean("mobs.husk.goal.tempt.enabled", huskTemptEnabled);
+        huskTemptIngredient = getIngredient("mobs.husk.goal.tempt.items");
+        huskTemptScared = getBoolean("mobs.husk.goal.tempt.scared", huskTemptScared);
+        huskTemptSpeed = getDouble("mobs.husk.goal.tempt.speed", huskTemptSpeed);
     }
 
     public boolean illusionerRidable = false;
@@ -1546,6 +1758,10 @@ public class PurpurWorldConfig {
     public double illusionerMovementSpeed = 0.5D;
     public double illusionerFollowRange = 18.0D;
     public double illusionerMaxHealth = 32.0D;
+    public boolean illusionerTemptEnabled = false;
+    public Ingredient illusionerTemptIngredient = Ingredient.EMPTY;
+    public boolean illusionerTemptScared = false;
+    public double illusionerTemptSpeed = 1D;
     private void illusionerSettings() {
         illusionerRidable = getBoolean("mobs.illusioner.ridable", illusionerRidable);
         illusionerRidableInWater = getBoolean("mobs.illusioner.ridable-in-water", illusionerRidableInWater);
@@ -1561,6 +1777,10 @@ public class PurpurWorldConfig {
             set("mobs.illusioner.attributes.max_health", oldValue);
         }
         illusionerMaxHealth = getDouble("mobs.illusioner.attributes.max_health", illusionerMaxHealth);
+        illusionerTemptEnabled = getBoolean("mobs.illusioner.goal.tempt.enabled", illusionerTemptEnabled);
+        illusionerTemptIngredient = getIngredient("mobs.illusioner.goal.tempt.items");
+        illusionerTemptScared = getBoolean("mobs.illusioner.goal.tempt.scared", illusionerTemptScared);
+        illusionerTemptSpeed = getDouble("mobs.illusioner.goal.tempt.speed", illusionerTemptSpeed);
     }
 
     public boolean ironGolemRidable = false;
@@ -1568,6 +1788,10 @@ public class PurpurWorldConfig {
     public boolean ironGolemCanSwim = false;
     public double ironGolemMaxHealth = 100.0D;
     public boolean ironGolemPoppyCalm = false;
+    public boolean ironGolemTemptEnabled = false;
+    public Ingredient ironGolemTemptIngredient = Ingredient.EMPTY;
+    public boolean ironGolemTemptScared = false;
+    public double ironGolemTemptSpeed = 1D;
     private void ironGolemSettings() {
         ironGolemRidable = getBoolean("mobs.iron_golem.ridable", ironGolemRidable);
         ironGolemRidableInWater = getBoolean("mobs.iron_golem.ridable-in-water", ironGolemRidableInWater);
@@ -1579,6 +1803,10 @@ public class PurpurWorldConfig {
         }
         ironGolemMaxHealth = getDouble("mobs.iron_golem.attributes.max_health", ironGolemMaxHealth);
         ironGolemPoppyCalm = getBoolean("mobs.iron_golem.poppy-calms-anger", ironGolemPoppyCalm);
+        ironGolemTemptEnabled = getBoolean("mobs.ironGolem.goal.tempt.enabled", ironGolemTemptEnabled);
+        ironGolemTemptIngredient = getIngredient("mobs.ironGolem.goal.tempt.items");
+        ironGolemTemptScared = getBoolean("mobs.ironGolem.goal.tempt.scared", ironGolemTemptScared);
+        ironGolemTemptSpeed = getDouble("mobs.ironGolem.goal.tempt.speed", ironGolemTemptSpeed);
     }
 
     public boolean llamaRidable = false;
@@ -1592,6 +1820,10 @@ public class PurpurWorldConfig {
     public int llamaBreedingTicks = 6000;
     public boolean llamaJoinCaravans = true;
     public boolean llamaTemptedByHay = false;
+    public boolean llamaTemptEnabled = false;
+    public Ingredient llamaTemptIngredient = Ingredient.EMPTY;
+    public boolean llamaTemptScared = false;
+    public double llamaTemptSpeed = 1D;
     private void llamaSettings() {
         llamaRidable = getBoolean("mobs.llama.ridable", llamaRidable);
         llamaRidableInWater = getBoolean("mobs.llama.ridable-in-water", llamaRidableInWater);
@@ -1611,6 +1843,10 @@ public class PurpurWorldConfig {
         llamaBreedingTicks = getInt("mobs.llama.breeding-delay-ticks", llamaBreedingTicks);
         llamaJoinCaravans = getBoolean("mobs.llama.join-caravans", llamaJoinCaravans);
         llamaTemptedByHay = getBoolean("mobs.llama.tempted-by-hay", llamaTemptedByHay);
+        llamaTemptEnabled = getBoolean("mobs.llama.goal.tempt.enabled", llamaTemptEnabled);
+        llamaTemptIngredient = getIngredient("mobs.llama.goal.tempt.items");
+        llamaTemptScared = getBoolean("mobs.llama.goal.tempt.scared", llamaTemptScared);
+        llamaTemptSpeed = getDouble("mobs.llama.goal.tempt.speed", llamaTemptSpeed);
     }
 
     public boolean magmaCubeRidable = false;
@@ -1631,6 +1867,10 @@ public class PurpurWorldConfig {
     public boolean mooshroomRidableInWater = false;
     public double mooshroomMaxHealth = 10.0D;
     public int mooshroomBreedingTicks = 6000;
+    public boolean mooshroomTemptEnabled = false;
+    public Ingredient mooshroomTemptIngredient = Ingredient.EMPTY;
+    public boolean mooshroomTemptScared = false;
+    public double mooshroomTemptSpeed = 1D;
     private void mooshroomSettings() {
         mooshroomRidable = getBoolean("mobs.mooshroom.ridable", mooshroomRidable);
         mooshroomRidableInWater = getBoolean("mobs.mooshroom.ridable-in-water", mooshroomRidableInWater);
@@ -1641,6 +1881,10 @@ public class PurpurWorldConfig {
         }
         mooshroomMaxHealth = getDouble("mobs.mooshroom.attributes.max_health", mooshroomMaxHealth);
         mooshroomBreedingTicks = getInt("mobs.mooshroom.breeding-delay-ticks", mooshroomBreedingTicks);
+        mooshroomTemptEnabled = getBoolean("mobs.mooshroom.goal.tempt.enabled", mooshroomTemptEnabled);
+        mooshroomTemptIngredient = getIngredient("mobs.mooshroom.goal.tempt.items");
+        mooshroomTemptScared = getBoolean("mobs.mooshroom.goal.tempt.scared", mooshroomTemptScared);
+        mooshroomTemptSpeed = getDouble("mobs.mooshroom.goal.tempt.speed", mooshroomTemptSpeed);
     }
 
     public boolean muleRidableInWater = false;
@@ -1651,6 +1895,10 @@ public class PurpurWorldConfig {
     public double muleMovementSpeedMin = 0.175D;
     public double muleMovementSpeedMax = 0.175D;
     public int muleBreedingTicks = 6000;
+    public boolean muleTemptEnabled = false;
+    public Ingredient muleTemptIngredient = Ingredient.EMPTY;
+    public boolean muleTemptScared = false;
+    public double muleTemptSpeed = 1D;
     private void muleSettings() {
         muleRidableInWater = getBoolean("mobs.mule.ridable-in-water", muleRidableInWater);
         if (PurpurConfig.version < 10) {
@@ -1667,12 +1915,20 @@ public class PurpurWorldConfig {
         muleMovementSpeedMin = getDouble("mobs.mule.attributes.movement_speed.min", muleMovementSpeedMin);
         muleMovementSpeedMax = getDouble("mobs.mule.attributes.movement_speed.max", muleMovementSpeedMax);
         muleBreedingTicks = getInt("mobs.mule.breeding-delay-ticks", muleBreedingTicks);
+        muleTemptEnabled = getBoolean("mobs.mule.goal.tempt.enabled", muleTemptEnabled);
+        muleTemptIngredient = getIngredient("mobs.mule.goal.tempt.items");
+        muleTemptScared = getBoolean("mobs.mule.goal.tempt.scared", muleTemptScared);
+        muleTemptSpeed = getDouble("mobs.mule.goal.tempt.speed", muleTemptSpeed);
     }
 
     public boolean ocelotRidable = false;
     public boolean ocelotRidableInWater = false;
     public double ocelotMaxHealth = 10.0D;
     public int ocelotBreedingTicks = 6000;
+    public boolean ocelotTemptEnabled = false;
+    public Ingredient ocelotTemptIngredient = Ingredient.EMPTY;
+    public boolean ocelotTemptScared = false;
+    public double ocelotTemptSpeed = 1D;
     private void ocelotSettings() {
         ocelotRidable = getBoolean("mobs.ocelot.ridable", ocelotRidable);
         ocelotRidableInWater = getBoolean("mobs.ocelot.ridable-in-water", ocelotRidableInWater);
@@ -1683,12 +1939,20 @@ public class PurpurWorldConfig {
         }
         ocelotMaxHealth = getDouble("mobs.ocelot.attributes.max_health", ocelotMaxHealth);
         ocelotBreedingTicks = getInt("mobs.ocelot.breeding-delay-ticks", ocelotBreedingTicks);
+        ocelotTemptEnabled = getBoolean("mobs.ocelot.goal.tempt.enabled", ocelotTemptEnabled);
+        ocelotTemptIngredient = getIngredient("mobs.ocelot.goal.tempt.items");
+        ocelotTemptScared = getBoolean("mobs.ocelot.goal.tempt.scared", ocelotTemptScared);
+        ocelotTemptSpeed = getDouble("mobs.ocelot.goal.tempt.speed", ocelotTemptSpeed);
     }
 
     public boolean pandaRidable = false;
     public boolean pandaRidableInWater = false;
     public double pandaMaxHealth = 20.0D;
     public int pandaBreedingTicks = 6000;
+    public boolean pandaTemptEnabled = false;
+    public Ingredient pandaTemptIngredient = Ingredient.EMPTY;
+    public boolean pandaTemptScared = false;
+    public double pandaTemptSpeed = 1D;
     private void pandaSettings() {
         pandaRidable = getBoolean("mobs.panda.ridable", pandaRidable);
         pandaRidableInWater = getBoolean("mobs.panda.ridable-in-water", pandaRidableInWater);
@@ -1699,6 +1963,10 @@ public class PurpurWorldConfig {
         }
         pandaMaxHealth = getDouble("mobs.panda.attributes.max_health", pandaMaxHealth);
         pandaBreedingTicks = getInt("mobs.panda.breeding-delay-ticks", pandaBreedingTicks);
+        pandaTemptEnabled = getBoolean("mobs.panda.goal.tempt.enabled", pandaTemptEnabled);
+        pandaTemptIngredient = getIngredient("mobs.panda.goal.tempt.items");
+        pandaTemptScared = getBoolean("mobs.panda.goal.tempt.scared", pandaTemptScared);
+        pandaTemptSpeed = getDouble("mobs.panda.goal.tempt.speed", pandaTemptSpeed);
     }
 
     public boolean parrotRidable = false;
@@ -1706,6 +1974,10 @@ public class PurpurWorldConfig {
     public double parrotMaxY = 256D;
     public double parrotMaxHealth = 6.0D;
     public boolean parrotBreedable = false;
+    public boolean parrotTemptEnabled = false;
+    public Ingredient parrotTemptIngredient = Ingredient.EMPTY;
+    public boolean parrotTemptScared = false;
+    public double parrotTemptSpeed = 1D;
     private void parrotSettings() {
         parrotRidable = getBoolean("mobs.parrot.ridable", parrotRidable);
         parrotRidableInWater = getBoolean("mobs.parrot.ridable-in-water", parrotRidableInWater);
@@ -1717,6 +1989,10 @@ public class PurpurWorldConfig {
         }
         parrotMaxHealth = getDouble("mobs.parrot.attributes.max_health", parrotMaxHealth);
         parrotBreedable = getBoolean("mobs.parrot.can-breed", parrotBreedable);
+        parrotTemptEnabled = getBoolean("mobs.parrot.goal.tempt.enabled", parrotTemptEnabled);
+        parrotTemptIngredient = getIngredient("mobs.parrot.goal.tempt.items");
+        parrotTemptScared = getBoolean("mobs.parrot.goal.tempt.scared", parrotTemptScared);
+        parrotTemptSpeed = getDouble("mobs.parrot.goal.tempt.speed", parrotTemptSpeed);
     }
 
     public boolean phantomRidable = false;
@@ -1784,6 +2060,10 @@ public class PurpurWorldConfig {
     public double pigMaxHealth = 10.0D;
     public boolean pigGiveSaddleBack = false;
     public int pigBreedingTicks = 6000;
+    public boolean pigTemptEnabled = false;
+    public Ingredient pigTemptIngredient = Ingredient.EMPTY;
+    public boolean pigTemptScared = false;
+    public double pigTemptSpeed = 1D;
     private void pigSettings() {
         pigRidable = getBoolean("mobs.pig.ridable", pigRidable);
         pigRidableInWater = getBoolean("mobs.pig.ridable-in-water", pigRidableInWater);
@@ -1795,6 +2075,10 @@ public class PurpurWorldConfig {
         pigMaxHealth = getDouble("mobs.pig.attributes.max_health", pigMaxHealth);
         pigGiveSaddleBack = getBoolean("mobs.pig.give-saddle-back", pigGiveSaddleBack);
         pigBreedingTicks = getInt("mobs.pig.breeding-delay-ticks", pigBreedingTicks);
+        pigTemptEnabled = getBoolean("mobs.pig.goal.tempt.enabled", pigTemptEnabled);
+        pigTemptIngredient = getIngredient("mobs.pig.goal.tempt.items");
+        pigTemptScared = getBoolean("mobs.pig.goal.tempt.scared", pigTemptScared);
+        pigTemptSpeed = getDouble("mobs.pig.goal.tempt.speed", pigTemptSpeed);
     }
 
     public boolean piglinRidable = false;
@@ -1802,6 +2086,10 @@ public class PurpurWorldConfig {
     public double piglinMaxHealth = 16.0D;
     public boolean piglinBypassMobGriefing = false;
     public int piglinPortalSpawnModifier = 2000;
+    public boolean piglinTemptEnabled = false;
+    public Ingredient piglinTemptIngredient = Ingredient.EMPTY;
+    public boolean piglinTemptScared = false;
+    public double piglinTemptSpeed = 1D;
     private void piglinSettings() {
         piglinRidable = getBoolean("mobs.piglin.ridable", piglinRidable);
         piglinRidableInWater = getBoolean("mobs.piglin.ridable-in-water", piglinRidableInWater);
@@ -1813,11 +2101,19 @@ public class PurpurWorldConfig {
         piglinMaxHealth = getDouble("mobs.piglin.attributes.max_health", piglinMaxHealth);
         piglinBypassMobGriefing = getBoolean("mobs.piglin.bypass-mob-griefing", piglinBypassMobGriefing);
         piglinPortalSpawnModifier = getInt("mobs.piglin.portal-spawn-modifier", piglinPortalSpawnModifier);
+        piglinTemptEnabled = getBoolean("mobs.piglin.goal.tempt.enabled", piglinTemptEnabled);
+        piglinTemptIngredient = getIngredient("mobs.piglin.goal.tempt.items");
+        piglinTemptScared = getBoolean("mobs.piglin.goal.tempt.scared", piglinTemptScared);
+        piglinTemptSpeed = getDouble("mobs.piglin.goal.tempt.speed", piglinTemptSpeed);
     }
 
     public boolean piglinBruteRidable = false;
     public boolean piglinBruteRidableInWater = false;
     public double piglinBruteMaxHealth = 50.0D;
+    public boolean piglinBruteTemptEnabled = false;
+    public Ingredient piglinBruteTemptIngredient = Ingredient.EMPTY;
+    public boolean piglinBruteTemptScared = false;
+    public double piglinBruteTemptSpeed = 1D;
     private void piglinBruteSettings() {
         piglinBruteRidable = getBoolean("mobs.piglin_brute.ridable", piglinBruteRidable);
         piglinBruteRidableInWater = getBoolean("mobs.piglin_brute.ridable-in-water", piglinBruteRidableInWater);
@@ -1827,12 +2123,20 @@ public class PurpurWorldConfig {
             set("mobs.piglin_brute.attributes.max_health", oldValue);
         }
         piglinBruteMaxHealth = getDouble("mobs.piglin_brute.attributes.max_health", piglinBruteMaxHealth);
+        piglinBruteTemptEnabled = getBoolean("mobs.piglin_brute.goal.tempt.enabled", piglinBruteTemptEnabled);
+        piglinBruteTemptIngredient = getIngredient("mobs.piglin_brute.goal.tempt.items");
+        piglinBruteTemptScared = getBoolean("mobs.piglin_brute.goal.tempt.scared", piglinBruteTemptScared);
+        piglinBruteTemptSpeed = getDouble("mobs.piglin_brute.goal.tempt.speed", piglinBruteTemptSpeed);
     }
 
     public boolean pillagerRidable = false;
     public boolean pillagerRidableInWater = false;
     public double pillagerMaxHealth = 24.0D;
     public boolean pillagerBypassMobGriefing = false;
+    public boolean pillagerTemptEnabled = false;
+    public Ingredient pillagerTemptIngredient = Ingredient.EMPTY;
+    public boolean pillagerTemptScared = false;
+    public double pillagerTemptSpeed = 1D;
     private void pillagerSettings() {
         pillagerRidable = getBoolean("mobs.pillager.ridable", pillagerRidable);
         pillagerRidableInWater = getBoolean("mobs.pillager.ridable-in-water", pillagerRidableInWater);
@@ -1843,6 +2147,10 @@ public class PurpurWorldConfig {
         }
         pillagerMaxHealth = getDouble("mobs.pillager.attributes.max_health", pillagerMaxHealth);
         pillagerBypassMobGriefing = getBoolean("mobs.pillager.bypass-mob-griefing", pillagerBypassMobGriefing);
+        pillagerTemptEnabled = getBoolean("mobs.pillager.goal.tempt.enabled", pillagerTemptEnabled);
+        pillagerTemptIngredient = getIngredient("mobs.pillager.goal.tempt.items");
+        pillagerTemptScared = getBoolean("mobs.pillager.goal.tempt.scared", pillagerTemptScared);
+        pillagerTemptSpeed = getDouble("mobs.pillager.goal.tempt.speed", pillagerTemptSpeed);
     }
 
     public boolean polarBearRidable = false;
@@ -1851,6 +2159,10 @@ public class PurpurWorldConfig {
     public String polarBearBreedableItemString = "";
     public Item polarBearBreedableItem = null;
     public int polarBearBreedingTicks = 6000;
+    public boolean polarBearTemptEnabled = false;
+    public Ingredient polarBearTemptIngredient = Ingredient.EMPTY;
+    public boolean polarBearTemptScared = false;
+    public double polarBearTemptSpeed = 1D;
     private void polarBearSettings() {
         polarBearRidable = getBoolean("mobs.polar_bear.ridable", polarBearRidable);
         polarBearRidableInWater = getBoolean("mobs.polar_bear.ridable-in-water", polarBearRidableInWater);
@@ -1864,10 +2176,18 @@ public class PurpurWorldConfig {
         Item item = Registry.ITEM.get(new ResourceLocation(polarBearBreedableItemString));
         if (item != Items.AIR) polarBearBreedableItem = item;
         polarBearBreedingTicks = getInt("mobs.polar_bear.breeding-delay-ticks", polarBearBreedingTicks);
+        polarBearTemptEnabled = getBoolean("mobs.polar_bear.goal.tempt.enabled", polarBearTemptEnabled);
+        polarBearTemptIngredient = getIngredient("mobs.polar_bear.goal.tempt.items");
+        polarBearTemptScared = getBoolean("mobs.polar_bear.goal.tempt.scared", polarBearTemptScared);
+        polarBearTemptSpeed = getDouble("mobs.polar_bear.goal.tempt.speed", polarBearTemptSpeed);
     }
 
     public boolean pufferfishRidable = false;
     public double pufferfishMaxHealth = 3.0D;
+    public boolean pufferfishTemptEnabled = false;
+    public Ingredient pufferfishTemptIngredient = Ingredient.EMPTY;
+    public boolean pufferfishTemptScared = false;
+    public double pufferfishTemptSpeed = 1D;
     private void pufferfishSettings() {
         pufferfishRidable = getBoolean("mobs.pufferfish.ridable", pufferfishRidable);
         if (PurpurConfig.version < 10) {
@@ -1876,6 +2196,10 @@ public class PurpurWorldConfig {
             set("mobs.pufferfish.attributes.max_health", oldValue);
         }
         pufferfishMaxHealth = getDouble("mobs.pufferfish.attributes.max_health", pufferfishMaxHealth);
+        pufferfishTemptEnabled = getBoolean("mobs.pufferfish.goal.tempt.enabled", pufferfishTemptEnabled);
+        pufferfishTemptIngredient = getIngredient("mobs.pufferfish.goal.tempt.items");
+        pufferfishTemptScared = getBoolean("mobs.pufferfish.goal.tempt.scared", pufferfishTemptScared);
+        pufferfishTemptSpeed = getDouble("mobs.pufferfish.goal.tempt.speed", pufferfishTemptSpeed);
     }
 
     public boolean rabbitRidable = false;
@@ -1885,6 +2209,10 @@ public class PurpurWorldConfig {
     public double rabbitNaturalKiller = 0.0D;
     public int rabbitBreedingTicks = 6000;
     public boolean rabbitBypassMobGriefing = false;
+    public boolean rabbitTemptEnabled = false;
+    public Ingredient rabbitTemptIngredient = Ingredient.EMPTY;
+    public boolean rabbitTemptScared = false;
+    public double rabbitTemptSpeed = 1D;
     private void rabbitSettings() {
         rabbitRidable = getBoolean("mobs.rabbit.ridable", rabbitRidable);
         rabbitRidableInWater = getBoolean("mobs.rabbit.ridable-in-water", rabbitRidableInWater);
@@ -1898,6 +2226,10 @@ public class PurpurWorldConfig {
         rabbitNaturalKiller = getDouble("mobs.rabbit.spawn-killer-rabbit-chance", rabbitNaturalKiller);
         rabbitBreedingTicks = getInt("mobs.rabbit.breeding-delay-ticks", rabbitBreedingTicks);
         rabbitBypassMobGriefing = getBoolean("mobs.rabbit.bypass-mob-griefing", rabbitBypassMobGriefing);
+        rabbitTemptEnabled = getBoolean("mobs.rabbit.goal.tempt.enabled", rabbitTemptEnabled);
+        rabbitTemptIngredient = getIngredient("mobs.rabbit.goal.tempt.items");
+        rabbitTemptScared = getBoolean("mobs.rabbit.goal.tempt.scared", rabbitTemptScared);
+        rabbitTemptSpeed = getDouble("mobs.rabbit.goal.tempt.speed", rabbitTemptSpeed);
     }
 
     public boolean ravagerRidable = false;
@@ -1905,6 +2237,10 @@ public class PurpurWorldConfig {
     public double ravagerMaxHealth = 100.0D;
     public boolean ravagerBypassMobGriefing = false;
     public List<Block> ravagerGriefableBlocks = new ArrayList<>();
+    public boolean ravagerTemptEnabled = false;
+    public Ingredient ravagerTemptIngredient = Ingredient.EMPTY;
+    public boolean ravagerTemptScared = false;
+    public double ravagerTemptSpeed = 1D;
     private void ravagerSettings() {
         ravagerRidable = getBoolean("mobs.ravager.ridable", ravagerRidable);
         ravagerRidableInWater = getBoolean("mobs.ravager.ridable-in-water", ravagerRidableInWater);
@@ -1932,10 +2268,18 @@ public class PurpurWorldConfig {
                 ravagerGriefableBlocks.add(block);
             }
         });
+        ravagerTemptEnabled = getBoolean("mobs.ravager.goal.tempt.enabled", ravagerTemptEnabled);
+        ravagerTemptIngredient = getIngredient("mobs.ravager.goal.tempt.items");
+        ravagerTemptScared = getBoolean("mobs.ravager.goal.tempt.scared", ravagerTemptScared);
+        ravagerTemptSpeed = getDouble("mobs.ravager.goal.tempt.speed", ravagerTemptSpeed);
     }
 
     public boolean salmonRidable = false;
     public double salmonMaxHealth = 3.0D;
+    public boolean salmonTemptEnabled = false;
+    public Ingredient salmonTemptIngredient = Ingredient.EMPTY;
+    public boolean salmonTemptScared = false;
+    public double salmonTemptSpeed = 1D;
     private void salmonSettings() {
         salmonRidable = getBoolean("mobs.salmon.ridable", salmonRidable);
         if (PurpurConfig.version < 10) {
@@ -1944,6 +2288,10 @@ public class PurpurWorldConfig {
             set("mobs.salmon.attributes.max_health", oldValue);
         }
         salmonMaxHealth = getDouble("mobs.salmon.attributes.max_health", salmonMaxHealth);
+        salmonTemptEnabled = getBoolean("mobs.salmon.goal.tempt.enabled", salmonTemptEnabled);
+        salmonTemptIngredient = getIngredient("mobs.salmon.goal.tempt.items");
+        salmonTemptScared = getBoolean("mobs.salmon.goal.tempt.scared", salmonTemptScared);
+        salmonTemptSpeed = getDouble("mobs.salmon.goal.tempt.speed", salmonTemptSpeed);
     }
 
     public boolean sheepRidable = false;
@@ -1951,6 +2299,10 @@ public class PurpurWorldConfig {
     public double sheepMaxHealth = 8.0D;
     public int sheepBreedingTicks = 6000;
     public boolean sheepBypassMobGriefing = false;
+    public boolean sheepTemptEnabled = false;
+    public Ingredient sheepTemptIngredient = Ingredient.EMPTY;
+    public boolean sheepTemptScared = false;
+    public double sheepTemptSpeed = 1D;
     private void sheepSettings() {
         sheepRidable = getBoolean("mobs.sheep.ridable", sheepRidable);
         sheepRidableInWater = getBoolean("mobs.sheep.ridable-in-water", sheepRidableInWater);
@@ -1962,6 +2314,10 @@ public class PurpurWorldConfig {
         sheepMaxHealth = getDouble("mobs.sheep.attributes.max_health", sheepMaxHealth);
         sheepBreedingTicks = getInt("mobs.sheep.breeding-delay-ticks", sheepBreedingTicks);
         sheepBypassMobGriefing = getBoolean("mobs.sheep.bypass-mob-griefing", sheepBypassMobGriefing);
+        sheepTemptEnabled = getBoolean("mobs.sheep.goal.tempt.enabled", sheepTemptEnabled);
+        sheepTemptIngredient = getIngredient("mobs.sheep.goal.tempt.items");
+        sheepTemptScared = getBoolean("mobs.sheep.goal.tempt.scared", sheepTemptScared);
+        sheepTemptSpeed = getDouble("mobs.sheep.goal.tempt.speed", sheepTemptSpeed);
     }
 
     public boolean shulkerRidable = false;
@@ -1973,6 +2329,10 @@ public class PurpurWorldConfig {
     public String shulkerSpawnFromBulletNearbyEquation = "(nearby - 1) / 5.0";
     public boolean shulkerSpawnFromBulletRandomColor = false;
     public boolean shulkerChangeColorWithDye = false;
+    public boolean shulkerTemptEnabled = false;
+    public Ingredient shulkerTemptIngredient = Ingredient.EMPTY;
+    public boolean shulkerTemptScared = false;
+    public double shulkerTemptSpeed = 1D;
     private void shulkerSettings() {
         shulkerRidable = getBoolean("mobs.shulker.ridable", shulkerRidable);
         shulkerRidableInWater = getBoolean("mobs.shulker.ridable-in-water", shulkerRidableInWater);
@@ -1988,12 +2348,20 @@ public class PurpurWorldConfig {
         shulkerSpawnFromBulletNearbyEquation = getString("mobs.shulker.spawn-from-bullet.nearby-equation", shulkerSpawnFromBulletNearbyEquation);
         shulkerSpawnFromBulletRandomColor = getBoolean("mobs.shulker.spawn-from-bullet.random-color", shulkerSpawnFromBulletRandomColor);
         shulkerChangeColorWithDye = getBoolean("mobs.shulker.change-color-with-dye", shulkerChangeColorWithDye);
+        shulkerTemptEnabled = getBoolean("mobs.shulker.goal.tempt.enabled", shulkerTemptEnabled);
+        shulkerTemptIngredient = getIngredient("mobs.shulker.goal.tempt.items");
+        shulkerTemptScared = getBoolean("mobs.shulker.goal.tempt.scared", shulkerTemptScared);
+        shulkerTemptSpeed = getDouble("mobs.shulker.goal.tempt.speed", shulkerTemptSpeed);
     }
 
     public boolean silverfishRidable = false;
     public boolean silverfishRidableInWater = false;
     public double silverfishMaxHealth = 8.0D;
     public boolean silverfishBypassMobGriefing = false;
+    public boolean silverfishTemptEnabled = false;
+    public Ingredient silverfishTemptIngredient = Ingredient.EMPTY;
+    public boolean silverfishTemptScared = false;
+    public double silverfishTemptSpeed = 1D;
     private void silverfishSettings() {
         silverfishRidable = getBoolean("mobs.silverfish.ridable", silverfishRidable);
         silverfishRidableInWater = getBoolean("mobs.silverfish.ridable-in-water", silverfishRidableInWater);
@@ -2004,11 +2372,19 @@ public class PurpurWorldConfig {
         }
         silverfishMaxHealth = getDouble("mobs.silverfish.attributes.max_health", silverfishMaxHealth);
         silverfishBypassMobGriefing = getBoolean("mobs.silverfish.bypass-mob-griefing", silverfishBypassMobGriefing);
+        silverfishTemptEnabled = getBoolean("mobs.silverfish.goal.tempt.enabled", silverfishTemptEnabled);
+        silverfishTemptIngredient = getIngredient("mobs.silverfish.goal.tempt.items");
+        silverfishTemptScared = getBoolean("mobs.silverfish.goal.tempt.scared", silverfishTemptScared);
+        silverfishTemptSpeed = getDouble("mobs.silverfish.goal.tempt.speed", silverfishTemptSpeed);
     }
 
     public boolean skeletonRidable = false;
     public boolean skeletonRidableInWater = false;
     public double skeletonMaxHealth = 20.0D;
+    public boolean skeletonTemptEnabled = false;
+    public Ingredient skeletonTemptIngredient = Ingredient.EMPTY;
+    public boolean skeletonTemptScared = false;
+    public double skeletonTemptSpeed = 1D;
     private void skeletonSettings() {
         skeletonRidable = getBoolean("mobs.skeleton.ridable", skeletonRidable);
         skeletonRidableInWater = getBoolean("mobs.skeleton.ridable-in-water", skeletonRidableInWater);
@@ -2018,6 +2394,10 @@ public class PurpurWorldConfig {
             set("mobs.skeleton.attributes.max_health", oldValue);
         }
         skeletonMaxHealth = getDouble("mobs.skeleton.attributes.max_health", skeletonMaxHealth);
+        skeletonTemptEnabled = getBoolean("mobs.skeleton.goal.tempt.enabled", skeletonTemptEnabled);
+        skeletonTemptIngredient = getIngredient("mobs.skeleton.goal.tempt.items");
+        skeletonTemptScared = getBoolean("mobs.skeleton.goal.tempt.scared", skeletonTemptScared);
+        skeletonTemptSpeed = getDouble("mobs.skeleton.goal.tempt.speed", skeletonTemptSpeed);
     }
 
     public boolean skeletonHorseRidableInWater = false;
@@ -2028,6 +2408,10 @@ public class PurpurWorldConfig {
     public double skeletonHorseJumpStrengthMax = 1.0D;
     public double skeletonHorseMovementSpeedMin = 0.2D;
     public double skeletonHorseMovementSpeedMax = 0.2D;
+    public boolean skeletonHorseTemptEnabled = false;
+    public Ingredient skeletonHorseTemptIngredient = Ingredient.EMPTY;
+    public boolean skeletonHorseTemptScared = false;
+    public double skeletonHorseTemptSpeed = 1D;
     private void skeletonHorseSettings() {
         skeletonHorseRidableInWater = getBoolean("mobs.skeleton_horse.ridable-in-water", skeletonHorseRidableInWater);
         skeletonHorseCanSwim = getBoolean("mobs.skeleton_horse.can-swim", skeletonHorseCanSwim);
@@ -2043,6 +2427,10 @@ public class PurpurWorldConfig {
         skeletonHorseJumpStrengthMax = getDouble("mobs.skeleton_horse.attributes.jump_strength.max", skeletonHorseJumpStrengthMax);
         skeletonHorseMovementSpeedMin = getDouble("mobs.skeleton_horse.attributes.movement_speed.min", skeletonHorseMovementSpeedMin);
         skeletonHorseMovementSpeedMax = getDouble("mobs.skeleton_horse.attributes.movement_speed.max", skeletonHorseMovementSpeedMax);
+        skeletonHorseTemptEnabled = getBoolean("mobs.skeleton_horse.goal.tempt.enabled", skeletonHorseTemptEnabled);
+        skeletonHorseTemptIngredient = getIngredient("mobs.skeleton_horse.goal.tempt.items");
+        skeletonHorseTemptScared = getBoolean("mobs.skeleton_horse.goal.tempt.scared", skeletonHorseTemptScared);
+        skeletonHorseTemptSpeed = getDouble("mobs.skeleton_horse.goal.tempt.speed", skeletonHorseTemptSpeed);
     }
 
     public boolean slimeRidable = false;
@@ -2073,6 +2461,10 @@ public class PurpurWorldConfig {
     public double snowGolemAttackDistance = 1.25D;
     public boolean snowGolemBypassMobGriefing = false;
     public boolean snowGolemTakeDamageFromWater = true;
+    public boolean snowGolemTemptEnabled = false;
+    public Ingredient snowGolemTemptIngredient = Ingredient.EMPTY;
+    public boolean snowGolemTemptScared = false;
+    public double snowGolemTemptSpeed = 1D;
     private void snowGolemSettings() {
         snowGolemRidable = getBoolean("mobs.snow_golem.ridable", snowGolemRidable);
         snowGolemRidableInWater = getBoolean("mobs.snow_golem.ridable-in-water", snowGolemRidableInWater);
@@ -2091,6 +2483,10 @@ public class PurpurWorldConfig {
         snowGolemAttackDistance = getDouble("mobs.snow_golem.attack-distance", snowGolemAttackDistance);
         snowGolemBypassMobGriefing = getBoolean("mobs.snow_golem.bypass-mob-griefing", snowGolemBypassMobGriefing);
         snowGolemTakeDamageFromWater = getBoolean("mobs.snow_golem.takes-damage-from-water", snowGolemTakeDamageFromWater);
+        snowGolemTemptEnabled = getBoolean("mobs.snow_golem.goal.tempt.enabled", snowGolemTemptEnabled);
+        snowGolemTemptIngredient = getIngredient("mobs.snow_golem.goal.tempt.items");
+        snowGolemTemptScared = getBoolean("mobs.snow_golem.goal.tempt.scared", snowGolemTemptScared);
+        snowGolemTemptSpeed = getDouble("mobs.snow_golem.goal.tempt.speed", snowGolemTemptSpeed);
     }
 
     public boolean squidRidable = false;
@@ -2098,6 +2494,10 @@ public class PurpurWorldConfig {
     public boolean squidImmuneToEAR = true;
     public double squidOffsetWaterCheck = 0.0D;
     public boolean squidsCanFly = false;
+    public boolean squidTemptEnabled = false;
+    public Ingredient squidTemptIngredient = Ingredient.EMPTY;
+    public boolean squidTemptScared = false;
+    public double squidTemptSpeed = 1D;
     private void squidSettings() {
         squidRidable = getBoolean("mobs.squid.ridable", squidRidable);
         if (PurpurConfig.version < 10) {
@@ -2109,11 +2509,19 @@ public class PurpurWorldConfig {
         squidImmuneToEAR = getBoolean("mobs.squid.immune-to-EAR", squidImmuneToEAR);
         squidOffsetWaterCheck = getDouble("mobs.squid.water-offset-check", squidOffsetWaterCheck);
         squidsCanFly = getBoolean("mobs.squid.can-fly", squidsCanFly);
+        squidTemptEnabled = getBoolean("mobs.squid.goal.tempt.enabled", squidTemptEnabled);
+        squidTemptIngredient = getIngredient("mobs.squid.goal.tempt.items");
+        squidTemptScared = getBoolean("mobs.squid.goal.tempt.scared", squidTemptScared);
+        squidTemptSpeed = getDouble("mobs.squid.goal.tempt.speed", squidTemptSpeed);
     }
 
     public boolean spiderRidable = false;
     public boolean spiderRidableInWater = false;
     public double spiderMaxHealth = 16.0D;
+    public boolean spiderTemptEnabled = false;
+    public Ingredient spiderTemptIngredient = Ingredient.EMPTY;
+    public boolean spiderTemptScared = false;
+    public double spiderTemptSpeed = 1D;
     private void spiderSettings() {
         spiderRidable = getBoolean("mobs.spider.ridable", spiderRidable);
         spiderRidableInWater = getBoolean("mobs.spider.ridable-in-water", spiderRidableInWater);
@@ -2123,11 +2531,19 @@ public class PurpurWorldConfig {
             set("mobs.spider.attributes.max_health", oldValue);
         }
         spiderMaxHealth = getDouble("mobs.spider.attributes.max_health", spiderMaxHealth);
+        spiderTemptEnabled = getBoolean("mobs.spider.goal.tempt.enabled", spiderTemptEnabled);
+        spiderTemptIngredient = getIngredient("mobs.spider.goal.tempt.items");
+        spiderTemptScared = getBoolean("mobs.spider.goal.tempt.scared", spiderTemptScared);
+        spiderTemptSpeed = getDouble("mobs.spider.goal.tempt.speed", spiderTemptSpeed);
     }
 
     public boolean strayRidable = false;
     public boolean strayRidableInWater = false;
     public double strayMaxHealth = 20.0D;
+    public boolean strayTemptEnabled = false;
+    public Ingredient strayTemptIngredient = Ingredient.EMPTY;
+    public boolean strayTemptScared = false;
+    public double strayTemptSpeed = 1D;
     private void straySettings() {
         strayRidable = getBoolean("mobs.stray.ridable", strayRidable);
         strayRidableInWater = getBoolean("mobs.stray.ridable-in-water", strayRidableInWater);
@@ -2137,6 +2553,10 @@ public class PurpurWorldConfig {
             set("mobs.stray.attributes.max_health", oldValue);
         }
         strayMaxHealth = getDouble("mobs.stray.attributes.max_health", strayMaxHealth);
+        strayTemptEnabled = getBoolean("mobs.stray.goal.tempt.enabled", strayTemptEnabled);
+        strayTemptIngredient = getIngredient("mobs.stray.goal.tempt.items");
+        strayTemptScared = getBoolean("mobs.stray.goal.tempt.scared", strayTemptScared);
+        strayTemptSpeed = getDouble("mobs.stray.goal.tempt.speed", strayTemptSpeed);
     }
 
     public boolean striderRidable = false;
@@ -2145,6 +2565,10 @@ public class PurpurWorldConfig {
     public int striderBreedingTicks = 6000;
     public boolean striderGiveSaddleBack = false;
     public boolean striderTakeDamageFromWater = true;
+    public boolean striderTemptEnabled = false;
+    public Ingredient striderTemptIngredient = Ingredient.EMPTY;
+    public boolean striderTemptScared = false;
+    public double striderTemptSpeed = 1D;
     private void striderSettings() {
         striderRidable = getBoolean("mobs.strider.ridable", striderRidable);
         striderRidableInWater = getBoolean("mobs.strider.ridable-in-water", striderRidableInWater);
@@ -2157,6 +2581,10 @@ public class PurpurWorldConfig {
         striderBreedingTicks = getInt("mobs.strider.breeding-delay-ticks", striderBreedingTicks);
         striderGiveSaddleBack = getBoolean("mobs.strider.give-saddle-back", striderGiveSaddleBack);
         striderTakeDamageFromWater = getBoolean("mobs.strider.takes-damage-from-water", striderTakeDamageFromWater);
+        striderTemptEnabled = getBoolean("mobs.strider.goal.tempt.enabled", striderTemptEnabled);
+        striderTemptIngredient = getIngredient("mobs.strider.goal.tempt.items");
+        striderTemptScared = getBoolean("mobs.strider.goal.tempt.scared", striderTemptScared);
+        striderTemptSpeed = getDouble("mobs.strider.goal.tempt.speed", striderTemptSpeed);
     }
 
     public boolean traderLlamaRidable = false;
@@ -2167,6 +2595,10 @@ public class PurpurWorldConfig {
     public double traderLlamaJumpStrengthMax = 0.5D;
     public double traderLlamaMovementSpeedMin = 0.175D;
     public double traderLlamaMovementSpeedMax = 0.175D;
+    public boolean traderLlamaTemptEnabled = false;
+    public Ingredient traderLlamaTemptIngredient = Ingredient.EMPTY;
+    public boolean traderLlamaTemptScared = false;
+    public double traderLlamaTemptSpeed = 1D;
     public int traderLlamaBreedingTicks = 6000;
     private void traderLlamaSettings() {
         traderLlamaRidable = getBoolean("mobs.trader_llama.ridable", traderLlamaRidable);
@@ -2185,10 +2617,18 @@ public class PurpurWorldConfig {
         traderLlamaMovementSpeedMin = getDouble("mobs.trader_llama.attributes.movement_speed.min", traderLlamaMovementSpeedMin);
         traderLlamaMovementSpeedMax = getDouble("mobs.trader_llama.attributes.movement_speed.max", traderLlamaMovementSpeedMax);
         traderLlamaBreedingTicks = getInt("mobs.trader_llama.breeding-delay-ticks", traderLlamaBreedingTicks);
+        traderLlamaTemptEnabled = getBoolean("mobs.trader_llama.goal.tempt.enabled", traderLlamaTemptEnabled);
+        traderLlamaTemptIngredient = getIngredient("mobs.trader_llama.goal.tempt.items");
+        traderLlamaTemptScared = getBoolean("mobs.trader_llama.goal.tempt.scared", traderLlamaTemptScared);
+        traderLlamaTemptSpeed = getDouble("mobs.trader_llama.goal.tempt.speed", traderLlamaTemptSpeed);
     }
 
     public boolean tropicalFishRidable = false;
     public double tropicalFishMaxHealth = 3.0D;
+    public boolean tropicalFishTemptEnabled = false;
+    public Ingredient tropicalFishTemptIngredient = Ingredient.EMPTY;
+    public boolean tropicalFishTemptScared = false;
+    public double tropicalFishTemptSpeed = 1D;
     private void tropicalFishSettings() {
         tropicalFishRidable = getBoolean("mobs.tropical_fish.ridable", tropicalFishRidable);
         if (PurpurConfig.version < 10) {
@@ -2197,6 +2637,10 @@ public class PurpurWorldConfig {
             set("mobs.tropical_fish.attributes.max_health", oldValue);
         }
         tropicalFishMaxHealth = getDouble("mobs.tropical_fish.attributes.max_health", tropicalFishMaxHealth);
+        tropicalFishTemptEnabled = getBoolean("mobs.tropical_fish.goal.tempt.enabled", tropicalFishTemptEnabled);
+        tropicalFishTemptIngredient = getIngredient("mobs.tropical_fish.goal.tempt.items");
+        tropicalFishTemptScared = getBoolean("mobs.tropical_fish.goal.tempt.scared", tropicalFishTemptScared);
+        tropicalFishTemptSpeed = getDouble("mobs.tropical_fish.goal.tempt.speed", tropicalFishTemptSpeed);
     }
 
     public boolean turtleRidable = false;
@@ -2206,6 +2650,10 @@ public class PurpurWorldConfig {
     public boolean turtleEggsBreakFromItems = true;
     public boolean turtleEggsBreakFromMinecarts = true;
     public int turtleBreedingTicks = 6000;
+    public boolean turtleTemptEnabled = false;
+    public Ingredient turtleTemptIngredient = Ingredient.EMPTY;
+    public boolean turtleTemptScared = false;
+    public double turtleTemptSpeed = 1D;
     private void turtleEggSettings() {
         turtleRidable = getBoolean("mobs.turtle.ridable", turtleRidable);
         turtleRidableInWater = getBoolean("mobs.turtle.ridable-in-water", turtleRidableInWater);
@@ -2219,12 +2667,20 @@ public class PurpurWorldConfig {
         turtleEggsBreakFromItems = getBoolean("blocks.turtle_egg.break-from-items", turtleEggsBreakFromItems);
         turtleEggsBreakFromMinecarts = getBoolean("blocks.turtle_egg.break-from-minecarts", turtleEggsBreakFromMinecarts);
         turtleBreedingTicks = getInt("mobs.turtle.breeding-delay-ticks", turtleBreedingTicks);
+        turtleTemptEnabled = getBoolean("mobs.turtle.goal.tempt.enabled", turtleTemptEnabled);
+        turtleTemptIngredient = getIngredient("mobs.turtle.goal.tempt.items");
+        turtleTemptScared = getBoolean("mobs.turtle.goal.tempt.scared", turtleTemptScared);
+        turtleTemptSpeed = getDouble("mobs.turtle.goal.tempt.speed", turtleTemptSpeed);
     }
 
     public boolean vexRidable = false;
     public boolean vexRidableInWater = false;
     public double vexMaxY = 256D;
     public double vexMaxHealth = 14.0D;
+    public boolean vexTemptEnabled = false;
+    public Ingredient vexTemptIngredient = Ingredient.EMPTY;
+    public boolean vexTemptScared = false;
+    public double vexTemptSpeed = 1D;
     private void vexSettings() {
         vexRidable = getBoolean("mobs.vex.ridable", vexRidable);
         vexRidableInWater = getBoolean("mobs.vex.ridable-in-water", vexRidableInWater);
@@ -2235,6 +2691,10 @@ public class PurpurWorldConfig {
             set("mobs.vex.attributes.max_health", oldValue);
         }
         vexMaxHealth = getDouble("mobs.vex.attributes.max_health", vexMaxHealth);
+        vexTemptEnabled = getBoolean("mobs.vex.goal.tempt.enabled", vexTemptEnabled);
+        vexTemptIngredient = getIngredient("mobs.vex.goal.tempt.items");
+        vexTemptScared = getBoolean("mobs.vex.goal.tempt.scared", vexTemptScared);
+        vexTemptSpeed = getDouble("mobs.vex.goal.tempt.speed", vexTemptSpeed);
     }
 
     public boolean villagerRidable = false;
@@ -2254,6 +2714,10 @@ public class PurpurWorldConfig {
     public boolean villagerClericFarmersThrowWarts = true;
     public boolean villagerBypassMobGriefing = false;
     public boolean villagerAllowTrading = true;
+    public boolean villagerTemptEnabled = false;
+    public Ingredient villagerTemptIngredient = Ingredient.EMPTY;
+    public boolean villagerTemptScared = false;
+    public double villagerTemptSpeed = 1D;
     private void villagerSettings() {
         villagerRidable = getBoolean("mobs.villager.ridable", villagerRidable);
         villagerRidableInWater = getBoolean("mobs.villager.ridable-in-water", villagerRidableInWater);
@@ -2282,12 +2746,20 @@ public class PurpurWorldConfig {
         villagerClericFarmersThrowWarts = getBoolean("mobs.villager.cleric-wart-farmers-throw-warts-at-villagers", villagerClericFarmersThrowWarts);
         villagerBypassMobGriefing = getBoolean("mobs.villager.bypass-mob-griefing", villagerBypassMobGriefing);
         villagerAllowTrading = getBoolean("mobs.villager.allow-trading", villagerAllowTrading);
+        villagerTemptEnabled = getBoolean("mobs.villager.goal.tempt.enabled", villagerTemptEnabled);
+        villagerTemptIngredient = getIngredient("mobs.villager.goal.tempt.items");
+        villagerTemptScared = getBoolean("mobs.villager.goal.tempt.scared", villagerTemptScared);
+        villagerTemptSpeed = getDouble("mobs.villager.goal.tempt.speed", villagerTemptSpeed);
     }
 
     public boolean vindicatorRidable = false;
     public boolean vindicatorRidableInWater = false;
     public double vindicatorMaxHealth = 24.0D;
     public double vindicatorJohnnySpawnChance = 0D;
+    public boolean vindicatorTemptEnabled = false;
+    public Ingredient vindicatorTemptIngredient = Ingredient.EMPTY;
+    public boolean vindicatorTemptScared = false;
+    public double vindicatorTemptSpeed = 1D;
     private void vindicatorSettings() {
         vindicatorRidable = getBoolean("mobs.vindicator.ridable", vindicatorRidable);
         vindicatorRidableInWater = getBoolean("mobs.vindicator.ridable-in-water", vindicatorRidableInWater);
@@ -2298,6 +2770,10 @@ public class PurpurWorldConfig {
         }
         vindicatorMaxHealth = getDouble("mobs.vindicator.attributes.max_health", vindicatorMaxHealth);
         vindicatorJohnnySpawnChance = getDouble("mobs.vindicator.johnny.spawn-chance", vindicatorJohnnySpawnChance);
+        vindicatorTemptEnabled = getBoolean("mobs.vindicator.goal.tempt.enabled", vindicatorTemptEnabled);
+        vindicatorTemptIngredient = getIngredient("mobs.vindicator.goal.tempt.items");
+        vindicatorTemptScared = getBoolean("mobs.vindicator.goal.tempt.scared", vindicatorTemptScared);
+        vindicatorTemptSpeed = getDouble("mobs.vindicator.goal.tempt.speed", vindicatorTemptSpeed);
     }
 
     public boolean wanderingTraderRidable = false;
@@ -2306,6 +2782,10 @@ public class PurpurWorldConfig {
     public boolean wanderingTraderFollowEmeraldBlock = false;
     public boolean wanderingTraderCanBeLeashed = false;
     public boolean wanderingTraderAllowTrading = true;
+    public boolean wanderingTraderTemptEnabled = false;
+    public Ingredient wanderingTraderTemptIngredient = Ingredient.EMPTY;
+    public boolean wanderingTraderTemptScared = false;
+    public double wanderingTraderTemptSpeed = 1D;
     private void wanderingTraderSettings() {
         wanderingTraderRidable = getBoolean("mobs.wandering_trader.ridable", wanderingTraderRidable);
         wanderingTraderRidableInWater = getBoolean("mobs.wandering_trader.ridable-in-water", wanderingTraderRidableInWater);
@@ -2318,11 +2798,19 @@ public class PurpurWorldConfig {
         wanderingTraderFollowEmeraldBlock = getBoolean("mobs.wandering_trader.follow-emerald-blocks", wanderingTraderFollowEmeraldBlock);
         wanderingTraderCanBeLeashed = getBoolean("mobs.wandering_trader.can-be-leashed", wanderingTraderCanBeLeashed);
         wanderingTraderAllowTrading = getBoolean("mobs.wandering_trader.allow-trading", wanderingTraderAllowTrading);
+        wanderingTraderTemptEnabled = getBoolean("mobs.wandering_trader.goal.tempt.enabled", wanderingTraderTemptEnabled);
+        wanderingTraderTemptIngredient = getIngredient("mobs.wandering_trader.goal.tempt.items");
+        wanderingTraderTemptScared = getBoolean("mobs.wandering_trader.goal.tempt.scared", wanderingTraderTemptScared);
+        wanderingTraderTemptSpeed = getDouble("mobs.wandering_trader.goal.tempt.speed", wanderingTraderTemptSpeed);
     }
 
     public boolean witchRidable = false;
     public boolean witchRidableInWater = false;
     public double witchMaxHealth = 26.0D;
+    public boolean witchTemptEnabled = false;
+    public Ingredient witchTemptIngredient = Ingredient.EMPTY;
+    public boolean witchTemptScared = false;
+    public double witchTemptSpeed = 1D;
     private void witchSettings() {
         witchRidable = getBoolean("mobs.witch.ridable", witchRidable);
         witchRidableInWater = getBoolean("mobs.witch.ridable-in-water", witchRidableInWater);
@@ -2332,6 +2820,10 @@ public class PurpurWorldConfig {
             set("mobs.witch.attributes.max_health", oldValue);
         }
         witchMaxHealth = getDouble("mobs.witch.attributes.max_health", witchMaxHealth);
+        witchTemptEnabled = getBoolean("mobs.witch.goal.tempt.enabled", witchTemptEnabled);
+        witchTemptIngredient = getIngredient("mobs.witch.goal.tempt.items");
+        witchTemptScared = getBoolean("mobs.witch.goal.tempt.scared", witchTemptScared);
+        witchTemptSpeed = getDouble("mobs.witch.goal.tempt.speed", witchTemptSpeed);
     }
 
     public boolean witherRidable = false;
@@ -2344,6 +2836,10 @@ public class PurpurWorldConfig {
     public boolean witherCanRideVehicles = false;
     public float witherExplosionRadius = 1.0F;
     public boolean witherPlaySpawnSound = true;
+    public boolean witherTemptEnabled = false;
+    public Ingredient witherTemptIngredient = Ingredient.EMPTY;
+    public boolean witherTemptScared = false;
+    public double witherTemptSpeed = 1D;
     private void witherSettings() {
         witherRidable = getBoolean("mobs.wither.ridable", witherRidable);
         witherRidableInWater = getBoolean("mobs.wither.ridable-in-water", witherRidableInWater);
@@ -2364,11 +2860,19 @@ public class PurpurWorldConfig {
         witherCanRideVehicles = getBoolean("mobs.wither.can-ride-vehicles", witherCanRideVehicles);
         witherExplosionRadius = (float) getDouble("mobs.wither.explosion-radius", witherExplosionRadius);
         witherPlaySpawnSound = getBoolean("mobs.wither.play-spawn-sound", witherPlaySpawnSound);
+        witherTemptEnabled = getBoolean("mobs.wither.goal.tempt.enabled", witherTemptEnabled);
+        witherTemptIngredient = getIngredient("mobs.wither.goal.tempt.items");
+        witherTemptScared = getBoolean("mobs.wither.goal.tempt.scared", witherTemptScared);
+        witherTemptSpeed = getDouble("mobs.wither.goal.tempt.speed", witherTemptSpeed);
     }
 
     public boolean witherSkeletonRidable = false;
     public boolean witherSkeletonRidableInWater = false;
     public double witherSkeletonMaxHealth = 20.0D;
+    public boolean witherSkeletonTemptEnabled = false;
+    public Ingredient witherSkeletonTemptIngredient = Ingredient.EMPTY;
+    public boolean witherSkeletonTemptScared = false;
+    public double witherSkeletonTemptSpeed = 1D;
     private void witherSkeletonSettings() {
         witherSkeletonRidable = getBoolean("mobs.wither_skeleton.ridable", witherSkeletonRidable);
         witherSkeletonRidableInWater = getBoolean("mobs.wither_skeleton.ridable-in-water", witherSkeletonRidableInWater);
@@ -2378,6 +2882,10 @@ public class PurpurWorldConfig {
             set("mobs.wither_skeleton.attributes.max_health", oldValue);
         }
         witherSkeletonMaxHealth = getDouble("mobs.wither_skeleton.attributes.max_health", witherSkeletonMaxHealth);
+        witherSkeletonTemptEnabled = getBoolean("mobs.wither_skeleton.goal.tempt.enabled", witherSkeletonTemptEnabled);
+        witherSkeletonTemptIngredient = getIngredient("mobs.wither_skeleton.goal.tempt.items");
+        witherSkeletonTemptScared = getBoolean("mobs.wither_skeleton.goal.tempt.scared", witherSkeletonTemptScared);
+        witherSkeletonTemptSpeed = getDouble("mobs.wither_skeleton.goal.tempt.speed", witherSkeletonTemptSpeed);
     }
 
     public boolean wolfRidable = false;
@@ -2387,6 +2895,10 @@ public class PurpurWorldConfig {
     public boolean wolfMilkCuresRabies = true;
     public double wolfNaturalRabid = 0.0D;
     public int wolfBreedingTicks = 6000;
+    public boolean wolfTemptEnabled = false;
+    public Ingredient wolfTemptIngredient = Ingredient.EMPTY;
+    public boolean wolfTemptScared = false;
+    public double wolfTemptSpeed = 1D;
     private void wolfSettings() {
         wolfRidable = getBoolean("mobs.wolf.ridable", wolfRidable);
         wolfRidableInWater = getBoolean("mobs.wolf.ridable-in-water", wolfRidableInWater);
@@ -2404,11 +2916,19 @@ public class PurpurWorldConfig {
         wolfMilkCuresRabies = getBoolean("mobs.wolf.milk-cures-rabid-wolves", wolfMilkCuresRabies);
         wolfNaturalRabid = getDouble("mobs.wolf.spawn-rabid-chance", wolfNaturalRabid);
         wolfBreedingTicks = getInt("mobs.wolf.breeding-delay-ticks", wolfBreedingTicks);
+        wolfTemptEnabled = getBoolean("mobs.wolf.goal.tempt.enabled", wolfTemptEnabled);
+        wolfTemptIngredient = getIngredient("mobs.wolf.goal.tempt.items");
+        wolfTemptScared = getBoolean("mobs.wolf.goal.tempt.scared", wolfTemptScared);
+        wolfTemptSpeed = getDouble("mobs.wolf.goal.tempt.speed", wolfTemptSpeed);
     }
 
     public boolean zoglinRidable = false;
     public boolean zoglinRidableInWater = false;
     public double zoglinMaxHealth = 40.0D;
+    public boolean zoglinTemptEnabled = false;
+    public Ingredient zoglinTemptIngredient = Ingredient.EMPTY;
+    public boolean zoglinTemptScared = false;
+    public double zoglinTemptSpeed = 1D;
     private void zoglinSettings() {
         zoglinRidable = getBoolean("mobs.zoglin.ridable", zoglinRidable);
         zoglinRidableInWater = getBoolean("mobs.zoglin.ridable-in-water", zoglinRidableInWater);
@@ -2418,6 +2938,10 @@ public class PurpurWorldConfig {
             set("mobs.zoglin.attributes.max_health", oldValue);
         }
         zoglinMaxHealth = getDouble("mobs.zoglin.attributes.max_health", zoglinMaxHealth);
+        zoglinTemptEnabled = getBoolean("mobs.zoglin.goal.tempt.enabled", zoglinTemptEnabled);
+        zoglinTemptIngredient = getIngredient("mobs.zoglin.goal.tempt.items");
+        zoglinTemptScared = getBoolean("mobs.zoglin.goal.tempt.scared", zoglinTemptScared);
+        zoglinTemptSpeed = getDouble("mobs.zoglin.goal.tempt.speed", zoglinTemptSpeed);
     }
 
     public boolean zombieRidable = false;
@@ -2430,6 +2954,10 @@ public class PurpurWorldConfig {
     public boolean zombieAggressiveTowardsVillagerWhenLagging = true;
     public Difficulty zombieBreakDoorMinDifficulty = Difficulty.HARD;
     public boolean zombieBypassMobGriefing = false;
+    public boolean zombieTemptEnabled = false;
+    public Ingredient zombieTemptIngredient = Ingredient.EMPTY;
+    public boolean zombieTemptScared = false;
+    public double zombieTemptSpeed = 1D;
     private void zombieSettings() {
         zombieRidable = getBoolean("mobs.zombie.ridable", zombieRidable);
         zombieRidableInWater = getBoolean("mobs.zombie.ridable-in-water", zombieRidableInWater);
@@ -2450,6 +2978,10 @@ public class PurpurWorldConfig {
             zombieBreakDoorMinDifficulty = Difficulty.HARD;
         }
         zombieBypassMobGriefing = getBoolean("mobs.zombie.bypass-mob-griefing", zombieBypassMobGriefing);
+        zombieTemptEnabled = getBoolean("mobs.zombie.goal.tempt.enabled", zombieTemptEnabled);
+        zombieTemptIngredient = getIngredient("mobs.zombie.goal.tempt.items");
+        zombieTemptScared = getBoolean("mobs.zombie.goal.tempt.scared", zombieTemptScared);
+        zombieTemptSpeed = getDouble("mobs.zombie.goal.tempt.speed", zombieTemptSpeed);
     }
 
     public boolean zombieHorseRidableInWater = false;
@@ -2461,6 +2993,10 @@ public class PurpurWorldConfig {
     public double zombieHorseMovementSpeedMin = 0.2D;
     public double zombieHorseMovementSpeedMax = 0.2D;
     public double zombieHorseSpawnChance = 0.0D;
+    public boolean zombieHorseTemptEnabled = false;
+    public Ingredient zombieHorseTemptIngredient = Ingredient.EMPTY;
+    public boolean zombieHorseTemptScared = false;
+    public double zombieHorseTemptSpeed = 1D;
     private void zombieHorseSettings() {
         zombieHorseRidableInWater = getBoolean("mobs.zombie_horse.ridable-in-water", zombieHorseRidableInWater);
         zombieHorseCanSwim = getBoolean("mobs.zombie_horse.can-swim", zombieHorseCanSwim);
@@ -2477,6 +3013,10 @@ public class PurpurWorldConfig {
         zombieHorseMovementSpeedMin = getDouble("mobs.zombie_horse.attributes.movement_speed.min", zombieHorseMovementSpeedMin);
         zombieHorseMovementSpeedMax = getDouble("mobs.zombie_horse.attributes.movement_speed.max", zombieHorseMovementSpeedMax);
         zombieHorseSpawnChance = getDouble("mobs.zombie_horse.spawn-chance", zombieHorseSpawnChance);
+        zombieHorseTemptEnabled = getBoolean("mobs.zombie_horse.goal.tempt.enabled", zombieHorseTemptEnabled);
+        zombieHorseTemptIngredient = getIngredient("mobs.zombie_horse.goal.tempt.items");
+        zombieHorseTemptScared = getBoolean("mobs.zombie_horse.goal.tempt.scared", zombieHorseTemptScared);
+        zombieHorseTemptSpeed = getDouble("mobs.zombie_horse.goal.tempt.speed", zombieHorseTemptSpeed);
     }
 
     public boolean zombieVillagerRidable = false;
@@ -2488,6 +3028,10 @@ public class PurpurWorldConfig {
     public boolean zombieVillagerJockeyTryExistingChickens = true;
     public int zombieVillagerCuringTimeMin = 3600;
     public int zombieVillagerCuringTimeMax = 6000;
+    public boolean zombieVillagerTemptEnabled = false;
+    public Ingredient zombieVillagerTemptIngredient = Ingredient.EMPTY;
+    public boolean zombieVillagerTemptScared = false;
+    public double zombieVillagerTemptSpeed = 1D;
     private void zombieVillagerSettings() {
         zombieVillagerRidable = getBoolean("mobs.zombie_villager.ridable", zombieVillagerRidable);
         zombieVillagerRidableInWater = getBoolean("mobs.zombie_villager.ridable-in-water", zombieVillagerRidableInWater);
@@ -2503,6 +3047,10 @@ public class PurpurWorldConfig {
         zombieVillagerJockeyTryExistingChickens = getBoolean("mobs.zombie_villager.jockey.try-existing-chickens", zombieVillagerJockeyTryExistingChickens);
         zombieVillagerCuringTimeMin = getInt("mobs.zombie_villager.curing_time.min", zombieVillagerCuringTimeMin);
         zombieVillagerCuringTimeMax = getInt("mobs.zombie_villager.curing_time.max", zombieVillagerCuringTimeMax);
+        zombieVillagerTemptEnabled = getBoolean("mobs.zombie_villager.goal.tempt.enabled", zombieVillagerTemptEnabled);
+        zombieVillagerTemptIngredient = getIngredient("mobs.zombie_villager.goal.tempt.items");
+        zombieVillagerTemptScared = getBoolean("mobs.zombie_villager.goal.tempt.scared", zombieVillagerTemptScared);
+        zombieVillagerTemptSpeed = getDouble("mobs.zombie_villager.goal.tempt.speed", zombieVillagerTemptSpeed);
     }
 
     public boolean zombifiedPiglinRidable = false;
@@ -2513,6 +3061,10 @@ public class PurpurWorldConfig {
     public double zombifiedPiglinJockeyChance = 0.05D;
     public boolean zombifiedPiglinJockeyTryExistingChickens = true;
     public boolean zombifiedPiglinCountAsPlayerKillWhenAngry = true;
+    public boolean zombifiedPiglinTemptEnabled = false;
+    public Ingredient zombifiedPiglinTemptIngredient = Ingredient.EMPTY;
+    public boolean zombifiedPiglinTemptScared = false;
+    public double zombifiedPiglinTemptSpeed = 1D;
     private void zombifiedPiglinSettings() {
         zombifiedPiglinRidable = getBoolean("mobs.zombified_piglin.ridable", zombifiedPiglinRidable);
         zombifiedPiglinRidableInWater = getBoolean("mobs.zombified_piglin.ridable-in-water", zombifiedPiglinRidableInWater);
@@ -2527,6 +3079,10 @@ public class PurpurWorldConfig {
         zombifiedPiglinJockeyChance = getDouble("mobs.zombified_piglin.jockey.chance", zombifiedPiglinJockeyChance);
         zombifiedPiglinJockeyTryExistingChickens = getBoolean("mobs.zombified_piglin.jockey.try-existing-chickens", zombifiedPiglinJockeyTryExistingChickens);
         zombifiedPiglinCountAsPlayerKillWhenAngry = getBoolean("mobs.zombified_piglin.count-as-player-kill-when-angry", zombifiedPiglinCountAsPlayerKillWhenAngry);
+        zombifiedPiglinTemptEnabled = getBoolean("mobs.zombified_piglin.goal.tempt.enabled", zombifiedPiglinTemptEnabled);
+        zombifiedPiglinTemptIngredient = getIngredient("mobs.zombified_piglin.goal.tempt.items");
+        zombifiedPiglinTemptScared = getBoolean("mobs.zombified_piglin.goal.tempt.scared", zombifiedPiglinTemptScared);
+        zombifiedPiglinTemptSpeed = getDouble("mobs.zombified_piglin.goal.tempt.speed", zombifiedPiglinTemptSpeed);
     }
 
     public float hungerStarvationDamage = 1.0F;
