From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: DoctaEnkoda <bierquejason@gmail.com>
Date: Sun, 2 May 2021 23:14:54 +0200
Subject: [PATCH] Allows you to change the thrust limit of a piston


diff --git a/src/main/java/net/minecraft/world/level/block/piston/PistonExtendsChecker.java b/src/main/java/net/minecraft/world/level/block/piston/PistonExtendsChecker.java
index 6c9c4ab65b7e42efa68027057242e25b70313081..31729f9984e8f35d101c3e48f4bfba8c989330a6 100644
--- a/src/main/java/net/minecraft/world/level/block/piston/PistonExtendsChecker.java
+++ b/src/main/java/net/minecraft/world/level/block/piston/PistonExtendsChecker.java
@@ -20,12 +20,14 @@ public class PistonExtendsChecker {
     private final List<BlockPosition> f = Lists.newArrayList();
     private final List<BlockPosition> g = Lists.newArrayList();
     private final EnumDirection h;
+    private final int limitPistonPushBlock; // Purpur
 
     public PistonExtendsChecker(World world, BlockPosition blockposition, EnumDirection enumdirection, boolean flag) {
         this.a = world;
         this.b = blockposition;
         this.h = enumdirection;
         this.c = flag;
+        this.limitPistonPushBlock = net.pl3x.purpur.PurpurConfig.limitPistonPush; // Purpur
         if (flag) {
             this.e = enumdirection;
             this.d = blockposition.shift(enumdirection);
@@ -86,7 +88,7 @@ public class PistonExtendsChecker {
         } else {
             int i = 1;
 
-            if (i + this.f.size() > 12) {
+            if (i + this.f.size() > this.limitPistonPushBlock) { // Purpur
                 return false;
             } else {
                 while (a(block)) {
@@ -100,7 +102,7 @@ public class PistonExtendsChecker {
                     }
 
                     ++i;
-                    if (i + this.f.size() > 12) {
+                    if (i + this.f.size() > this.limitPistonPushBlock) { // Purpur
                         return false;
                     }
                 }
@@ -148,7 +150,7 @@ public class PistonExtendsChecker {
                         return true;
                     }
 
-                    if (this.f.size() >= 12) {
+                    if (this.f.size() >= this.limitPistonPushBlock) { // Purpur
                         return false;
                     }
 
diff --git a/src/main/java/net/pl3x/purpur/PurpurConfig.java b/src/main/java/net/pl3x/purpur/PurpurConfig.java
index 56424e45c04e7165c0671f74cdcd0147d1069af7..349a905e0d4de43330b31896ad96bbeb9fe9dd7b 100644
--- a/src/main/java/net/pl3x/purpur/PurpurConfig.java
+++ b/src/main/java/net/pl3x/purpur/PurpurConfig.java
@@ -221,6 +221,7 @@ public class PurpurConfig {
     public static boolean enderChestPermissionRows = false;
     public static boolean cryingObsidianValidForPortalFrame = false;
     public static int beeInsideBeeHive = 3;
+    public static int limitPistonPush = 12;
     private static void blockSettings() {
         if (version < 3) {
             boolean oldValue = getBoolean("settings.barrel.packed-barrels", true);
@@ -237,6 +238,7 @@ public class PurpurConfig {
         enderChestPermissionRows = getBoolean("settings.blocks.ender_chest.use-permissions-for-rows", enderChestPermissionRows);
         cryingObsidianValidForPortalFrame = getBoolean("settings.blocks.crying_obsidian.valid-for-portal-frame", cryingObsidianValidForPortalFrame);
         beeInsideBeeHive = getInt("settings.blocks.beehive.max-bees-inside", beeInsideBeeHive);
+        limitPistonPush = getInt("settings.blocks.piston.block-push-limit", limitPistonPush);
     }
 
     public static boolean allowInfinityMending = false;
