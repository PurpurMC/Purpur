From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Ben Kerllenevich <me@notom3ga.me>
Date: Tue, 25 May 2021 16:31:09 -0400
Subject: [PATCH] API for any mob to burn daylight


diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 4f0b8d966ba38672a39f95d1f6f55f95cdc8d334..5b58fe3a6aaaf6fb4e74042e28971c56e8a51765 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -1642,7 +1642,7 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, ne
         }
     }
 
-    public float aR() {
+    public float getBrightness() { return this.aR(); } public float aR() { // Purpur - OBFHELPER
         BlockPosition.MutableBlockPosition blockposition_mutableblockposition = new BlockPosition.MutableBlockPosition(this.locX(), 0.0D, this.locZ());
 
         if (this.world.isLoaded(blockposition_mutableblockposition)) {
diff --git a/src/main/java/net/minecraft/world/entity/EntityLiving.java b/src/main/java/net/minecraft/world/entity/EntityLiving.java
index 9e0c00bf0c1fb41d09de39d2a3831b6bc6658259..1ac56b5fcb45dfad5191875be4a0f3c8895329a9 100644
--- a/src/main/java/net/minecraft/world/entity/EntityLiving.java
+++ b/src/main/java/net/minecraft/world/entity/EntityLiving.java
@@ -238,6 +238,29 @@ public abstract class EntityLiving extends Entity {
     public boolean canPickUpLoot;
     public org.bukkit.craftbukkit.entity.CraftLivingEntity getBukkitLivingEntity() { return (org.bukkit.craftbukkit.entity.CraftLivingEntity) super.getBukkitEntity(); } // Paper
     public boolean silentDeath = false; // Paper - mark entity as dying silently for cancellable death event
+    // Purpur start
+    private boolean shouldBurnInDay;
+
+    public boolean shouldBurnInDay() {
+        return this.shouldBurnInDay;
+    }
+
+    public void setShouldBurnInDay(boolean shouldBurnInDay) {
+        this.shouldBurnInDay = shouldBurnInDay;
+    }
+
+    // copied from EntityInsentient
+    public boolean isInDaylight() {
+        if (this.world.isDay() && !this.world.isClientSide) {
+            float f = this.getBrightness();
+            BlockPosition blockposition = this.getVehicle() instanceof net.minecraft.world.entity.vehicle.EntityBoat ? (new BlockPosition(this.locX(), (double) Math.round(this.locY()), this.locZ())).up() : new BlockPosition(this.locX(), (double) Math.round(this.locY()), this.locZ());
+
+            return f > 0.5F && this.random.nextFloat() * 30.0F < (f - 0.4F) * 2.0F && this.world.isSkyVisible(blockposition);
+        }
+
+        return false;
+    }
+    // Purpur end
 
     @Override
     public float getBukkitYaw() {
@@ -276,6 +299,14 @@ public abstract class EntityLiving extends Entity {
         DynamicOpsNBT dynamicopsnbt = DynamicOpsNBT.a;
 
         this.bg = this.a(new Dynamic(dynamicopsnbt, dynamicopsnbt.createMap((Map) ImmutableMap.of(dynamicopsnbt.createString("memories"), dynamicopsnbt.emptyMap()))));
+
+        // Purpur start
+        if ((this instanceof net.minecraft.world.entity.monster.EntityZombie || this instanceof net.minecraft.world.entity.monster.EntitySkeletonAbstract || this instanceof net.minecraft.world.entity.monster.EntityPhantom) && !(this instanceof net.minecraft.world.entity.monster.EntityZombieHusk)) {
+            this.shouldBurnInDay = true;
+        } else {
+            this.shouldBurnInDay = false;
+        }
+        // Purpur end
     }
 
     protected void initAttributes() {} // Purpur
@@ -709,6 +740,7 @@ public abstract class EntityLiving extends Entity {
         dataresult.resultOrPartial(logger::error).ifPresent((nbtbase) -> {
             nbttagcompound.set("Brain", nbtbase);
         });
+        nbttagcompound.setBoolean("Purpur.ShouldBurnInDay", shouldBurnInDay); // Purpur
     }
 
     @Override
@@ -784,6 +816,11 @@ public abstract class EntityLiving extends Entity {
             this.bg = this.a(new Dynamic(DynamicOpsNBT.a, nbttagcompound.get("Brain")));
         }
 
+        // Purpur start
+        if (nbttagcompound.hasKey("Purpur.ShouldBurnInDay")) {
+            shouldBurnInDay = nbttagcompound.getBoolean("Purpur.ShouldBurnInDay");
+        }
+        // Purpur end
     }
 
     // CraftBukkit start
@@ -3017,6 +3054,31 @@ public abstract class EntityLiving extends Entity {
             this.damageEntity(DamageSource.DROWN, 1.0F);
         }
 
+        // Purpur start - copied from EntityZombie
+        if (this.isAlive()) {
+            boolean flag = this.shouldBurnInDay() && this.isInDaylight();
+
+            if (flag) {
+                ItemStack itemstack = this.getEquipment(EnumItemSlot.HEAD);
+
+                if (!itemstack.isEmpty()) {
+                    if (itemstack.isDamageableItem()) {
+                        itemstack.setDamage(itemstack.getDamage() + this.random.nextInt(2));
+                        if (itemstack.getDamage() >= itemstack.getMaxDamage()) {
+                            this.broadcastItemBreak(EnumItemSlot.HEAD);
+                            this.setSlot(EnumItemSlot.HEAD, ItemStack.NULL_ITEM);
+                        }
+                    }
+
+                    flag = false;
+                }
+
+                if (flag) {
+                    this.setOnFire(8);
+                }
+            }
+        }
+        // Purpur end
     }
 
     public boolean isSensitiveToWater() { return dO(); } // Purpur - OBFHELPER
diff --git a/src/main/java/net/minecraft/world/entity/monster/EntityPhantom.java b/src/main/java/net/minecraft/world/entity/monster/EntityPhantom.java
index fe07d9798eaae670e218d25fe23256c87c41d686..9b151eaa144b5e87bad43eac49c55e729cb7a885 100644
--- a/src/main/java/net/minecraft/world/entity/monster/EntityPhantom.java
+++ b/src/main/java/net/minecraft/world/entity/monster/EntityPhantom.java
@@ -231,7 +231,7 @@ public class EntityPhantom extends EntityFlying implements IMonster {
 
     @Override
     public void movementTick() {
-        if (this.isAlive() && !hasPurpurRider() && (((shouldBurnInDay || world.purpurConfig.phantomBurnInDaylight) && this.isInDaylight()) || (world.purpurConfig.phantomBurnInLight > 0 && world.getLightLevel(new BlockPosition(this)) >= world.purpurConfig.phantomBurnInLight))) { // Paper - Configurable Burning // Purpur
+        if (this.isAlive() && !hasPurpurRider() && (((this.shouldBurnInDay() || world.purpurConfig.phantomBurnInDaylight) && this.isInDaylight()) || (world.purpurConfig.phantomBurnInLight > 0 && world.getLightLevel(new BlockPosition(this)) >= world.purpurConfig.phantomBurnInLight))) { // Paper - Configurable Burning // Purpur
             this.setOnFire(8);
         }
 
@@ -258,12 +258,14 @@ public class EntityPhantom extends EntityFlying implements IMonster {
         }
 
         this.setSize(nbttagcompound.getInt("Size"));
+        /* // Purpur start - implemented in EntityLiving
         // Paper start
         if (nbttagcompound.hasUUID("Paper.SpawningEntity")) {
             this.spawningEntity = nbttagcompound.getUUID("Paper.SpawningEntity");
         }
         this.shouldBurnInDay = nbttagcompound.getBoolean("Paper.ShouldBurnInDay");
         // Paper end
+         */ // Purpur end
     }
 
     @Override
@@ -273,12 +275,14 @@ public class EntityPhantom extends EntityFlying implements IMonster {
         nbttagcompound.setInt("AY", this.d.getY());
         nbttagcompound.setInt("AZ", this.d.getZ());
         nbttagcompound.setInt("Size", this.getSize());
+        /* // Purpur start - implemented in EntityLiving
         // Paper start
         if (this.spawningEntity != null) {
             nbttagcompound.setUUID("Paper.SpawningEntity", this.spawningEntity);
         }
         nbttagcompound.setBoolean("Paper.ShouldBurnInDay", shouldBurnInDay);
         // Paper end
+         */ // Purpur end
     }
 
     @Override
@@ -333,9 +337,11 @@ public class EntityPhantom extends EntityFlying implements IMonster {
     }
     public void setSpawningEntity(java.util.UUID entity) { this.spawningEntity = entity; }
 
+    /*
     private boolean shouldBurnInDay = true;
     public boolean shouldBurnInDay() { return shouldBurnInDay; }
     public void setShouldBurnInDay(boolean shouldBurnInDay) { this.shouldBurnInDay = shouldBurnInDay; }
+     */
     // Paper end
 
     // Purpur start
diff --git a/src/main/java/net/minecraft/world/entity/monster/EntitySkeletonAbstract.java b/src/main/java/net/minecraft/world/entity/monster/EntitySkeletonAbstract.java
index f4c5c7995247b182d01d9232c8060d9fdb97c0a1..cefe6b883e774cc68ae3ae329133b24d12b6ee53 100644
--- a/src/main/java/net/minecraft/world/entity/monster/EntitySkeletonAbstract.java
+++ b/src/main/java/net/minecraft/world/entity/monster/EntitySkeletonAbstract.java
@@ -109,6 +109,7 @@ public abstract class EntitySkeletonAbstract extends EntityMonster implements IR
 
     @Override
     public void movementTick() {
+        /* // Purpur start - implemented in EntityLiving
         boolean flag = shouldBurnInDay && this.eG(); // Paper - Configurable Burning
 
         if (flag) {
@@ -130,6 +131,7 @@ public abstract class EntitySkeletonAbstract extends EntityMonster implements IR
                 this.setOnFire(8);
             }
         }
+         */ // Purpur end
 
         super.movementTick();
     }
@@ -229,14 +231,14 @@ public abstract class EntitySkeletonAbstract extends EntityMonster implements IR
     public void loadData(NBTTagCompound nbttagcompound) {
         super.loadData(nbttagcompound);
         this.eL();
-        this.shouldBurnInDay = nbttagcompound.getBoolean("Paper.ShouldBurnInDay"); // Paper
+        // this.shouldBurnInDay = nbttagcompound.getBoolean("Paper.ShouldBurnInDay"); // Paper // Purpur - implemented in EntityLiving
     }
 
     // Paper start
     @Override
     public void saveData(NBTTagCompound nbttagcompound) {
         super.saveData(nbttagcompound);
-        nbttagcompound.setBoolean("Paper.ShouldBurnInDay", shouldBurnInDay);
+        // nbttagcompound.setBoolean("Paper.ShouldBurnInDay", shouldBurnInDay); // Purpur - implemented in EntityLiving
     }
     // Paper end
 
diff --git a/src/main/java/net/minecraft/world/entity/monster/EntityZombie.java b/src/main/java/net/minecraft/world/entity/monster/EntityZombie.java
index ef8f6b442304285e2b398c9143e9e98e29330220..1f5a448020e03d6eb07ca3dd7d952595b58dfbc2 100644
--- a/src/main/java/net/minecraft/world/entity/monster/EntityZombie.java
+++ b/src/main/java/net/minecraft/world/entity/monster/EntityZombie.java
@@ -97,7 +97,7 @@ public class EntityZombie extends EntityMonster {
     private int bt;
     public int drownedConversionTime;
     private int lastTick = MinecraftServer.currentTick; // CraftBukkit - add field
-    private boolean shouldBurnInDay = true; // Paper
+    // private boolean shouldBurnInDay = true; // Paper // Purpur - implemented in EntityLiving
 
     public EntityZombie(EntityTypes<? extends EntityZombie> entitytypes, World world) {
         super(entitytypes, world);
@@ -288,6 +288,7 @@ public class EntityZombie extends EntityMonster {
 
     @Override
     public void movementTick() {
+        /* // Purpur start - implemented in EntityLiving
         if (this.isAlive()) {
             boolean flag = this.T_() && this.eG();
 
@@ -311,6 +312,7 @@ public class EntityZombie extends EntityMonster {
                 }
             }
         }
+         */ // Purpur end
 
         super.movementTick();
     }
@@ -349,16 +351,7 @@ public class EntityZombie extends EntityMonster {
 
     }
 
-    public boolean shouldBurnInDay() { return T_(); } // Paper - OBFHELPER
-    protected boolean T_() {
-        return this.shouldBurnInDay; // Paper - use api value instead
-    }
-
-    // Paper start
-    public void setShouldBurnInDay(boolean shouldBurnInDay) {
-        this.shouldBurnInDay = shouldBurnInDay;
-    }
-    // Paper end
+    // Purpur - implemented in EntityLiving
 
     @Override
     public boolean damageEntity(DamageSource damagesource, float f) {
@@ -479,7 +472,7 @@ public class EntityZombie extends EntityMonster {
         nbttagcompound.setBoolean("CanBreakDoors", this.eU());
         nbttagcompound.setInt("InWaterTime", this.isInWater() ? this.bt : -1);
         nbttagcompound.setInt("DrownedConversionTime", this.isDrownConverting() ? this.drownedConversionTime : -1);
-        nbttagcompound.setBoolean("Paper.ShouldBurnInDay", shouldBurnInDay); // Paper
+        // nbttagcompound.setBoolean("Paper.ShouldBurnInDay", shouldBurnInDay); // Paper // Purpur - implemented in EntityLiving
     }
 
     @Override
@@ -491,11 +484,13 @@ public class EntityZombie extends EntityMonster {
         if (nbttagcompound.hasKeyOfType("DrownedConversionTime", 99) && nbttagcompound.getInt("DrownedConversionTime") > -1) {
             this.startDrownedConversion(nbttagcompound.getInt("DrownedConversionTime"));
         }
+        /* // Purpur start - implemented in EntityLiving
         // Paper start
         if (nbttagcompound.hasKey("Paper.ShouldBurnInDay")) {
             shouldBurnInDay = nbttagcompound.getBoolean("Paper.ShouldBurnInDay");
         }
         // Paper end
+         */ // Purpur end - implemented in EntityLiving
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/EntityZombieHusk.java b/src/main/java/net/minecraft/world/entity/monster/EntityZombieHusk.java
index c060d93d9f3332b514a1400dec14f2035c058e48..3d8d5168664e4548993150206e977291011dc7b2 100644
--- a/src/main/java/net/minecraft/world/entity/monster/EntityZombieHusk.java
+++ b/src/main/java/net/minecraft/world/entity/monster/EntityZombieHusk.java
@@ -63,10 +63,12 @@ public class EntityZombieHusk extends EntityZombie {
         return b(entitytypes, worldaccess, enummobspawn, blockposition, random) && (enummobspawn == EnumMobSpawn.SPAWNER || worldaccess.e(blockposition));
     }
 
+    /* // Purpur start - implemented in EntityLiving
     @Override
     protected boolean T_() {
         return false;
     }
+     */ // Purpur end
 
     @Override
     protected SoundEffect getSoundAmbient() {
diff --git a/src/main/java/net/minecraft/world/item/ItemStack.java b/src/main/java/net/minecraft/world/item/ItemStack.java
index 677f866dfaab653b05c693663adaeb2465117a55..81ceeff37f7e03eead177cbd49f79a74be3aeeb2 100644
--- a/src/main/java/net/minecraft/world/item/ItemStack.java
+++ b/src/main/java/net/minecraft/world/item/ItemStack.java
@@ -458,7 +458,7 @@ public final class ItemStack {
         return this.getMaxStackSize() > 1 && (!this.e() || !this.f());
     }
 
-    public boolean e() {
+    public boolean isDamageableItem() { return e(); } public boolean e() { // Purpur - OBFHELPER
         if (!this.j && this.getItem().getMaxDurability() > 0) {
             NBTTagCompound nbttagcompound = this.getTag();
 
@@ -489,7 +489,7 @@ public final class ItemStack {
         this.getOrCreateTag().setInt("Damage", Math.max(0, i));
     }
 
-    public int h() {
+    public int getMaxDamage() { return h(); } public int h() { // Purpur - OBFHELPER
         return this.getItem().getMaxDurability();
     }
 
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftLivingEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftLivingEntity.java
index cf79f39fc8071d86f7455681e41b3eab1826cb35..6e9e9745e822794ff2d9e9ef4fc4cf774600d6db 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftLivingEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftLivingEntity.java
@@ -876,5 +876,15 @@ public class CraftLivingEntity extends CraftEntity implements LivingEntity {
         if (slot == null) return;
         getHandle().broadcastItemBreak(org.bukkit.craftbukkit.CraftEquipmentSlot.getNMS(slot));
     }
+
+    @Override
+    public boolean shouldBurnInDay() {
+        return false;
+    }
+
+    @Override
+    public void setShouldBurnInDay(boolean shouldBurnInDay) {
+
+    }
     // Purpur end
 }
