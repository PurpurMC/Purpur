From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Ben Kerllenevich <me@notom3ga.me>
Date: Mon, 22 Mar 2021 15:01:45 -0400
Subject: [PATCH] Bookshelf Containers


diff --git a/src/main/java/net/minecraft/core/NonNullList.java b/src/main/java/net/minecraft/core/NonNullList.java
index 03dc440215797afc3126efd05091f8e2f2f1a8bc..6f3111630f717afeeb5290b9bf4ef30a513a0689 100644
--- a/src/main/java/net/minecraft/core/NonNullList.java
+++ b/src/main/java/net/minecraft/core/NonNullList.java
@@ -17,12 +17,13 @@ public class NonNullList<E> extends AbstractList<E> {
         return new NonNullList<>();
     }
 
+    public static <E> NonNullList<E> withSize(int size, E type) { return NonNullList.a(size, type); } // Purpur - OBFHELPER
     public static <E> NonNullList<E> a(int i, E e0) {
         Validate.notNull(e0);
         Object[] aobject = new Object[i];
 
         Arrays.fill(aobject, e0);
-        return new NonNullList<>(Arrays.asList(aobject), e0);
+        return new NonNullList(Arrays.asList(aobject), e0); // Purpur - decompile fix
     }
 
     @SafeVarargs
@@ -31,7 +32,7 @@ public class NonNullList<E> extends AbstractList<E> {
     }
 
     protected NonNullList() {
-        this(Lists.newArrayList(), (Object) null);
+        this(Lists.newArrayList(), null); // Purpur - decompile fix
     }
 
     protected NonNullList(List<E> list, @Nullable E e0) {
diff --git a/src/main/java/net/minecraft/world/ContainerUtil.java b/src/main/java/net/minecraft/world/ContainerUtil.java
index c890708d84d9da1db4761817ff8677761b8e7989..54e6c43506b675c42cd3943a11aded8aab682b48 100644
--- a/src/main/java/net/minecraft/world/ContainerUtil.java
+++ b/src/main/java/net/minecraft/world/ContainerUtil.java
@@ -17,6 +17,7 @@ public class ContainerUtil {
         return i >= 0 && i < list.size() ? (ItemStack) list.set(i, ItemStack.b) : ItemStack.b;
     }
 
+    public static NBTTagCompound saveAllItems(NBTTagCompound nbttagcompound, NonNullList<ItemStack> nonnulllist) { return ContainerUtil.a(nbttagcompound, nonnulllist); } // Purpur - OBFHELPER
     public static NBTTagCompound a(NBTTagCompound nbttagcompound, NonNullList<ItemStack> nonnulllist) {
         return a(nbttagcompound, nonnulllist, true);
     }
@@ -43,6 +44,7 @@ public class ContainerUtil {
         return nbttagcompound;
     }
 
+    public static void loadAllItems(NBTTagCompound nbttagcompound, NonNullList<ItemStack> nonnulllist) { ContainerUtil.b(nbttagcompound, nonnulllist); } // Purpur - OBFHELPER
     public static void b(NBTTagCompound nbttagcompound, NonNullList<ItemStack> nonnulllist) {
         NBTTagList nbttaglist = nbttagcompound.getList("Items", 10);
 
diff --git a/src/main/java/net/minecraft/world/level/block/BlockBookshelf.java b/src/main/java/net/minecraft/world/level/block/BlockBookshelf.java
new file mode 100644
index 0000000000000000000000000000000000000000..c64bb6f8e765bae8d23ec15cb3d11bd5aad9cf0c
--- /dev/null
+++ b/src/main/java/net/minecraft/world/level/block/BlockBookshelf.java
@@ -0,0 +1,58 @@
+package net.minecraft.world.level.block;
+
+import net.minecraft.core.BlockPosition;
+import net.minecraft.world.EnumHand;
+import net.minecraft.world.EnumInteractionResult;
+import net.minecraft.world.InventoryUtils;
+import net.minecraft.world.entity.player.EntityHuman;
+import net.minecraft.world.level.IBlockAccess;
+import net.minecraft.world.level.World;
+import net.minecraft.world.level.block.entity.TileEntity;
+import net.minecraft.world.level.block.entity.TileEntityBookshelf;
+import net.minecraft.world.level.block.state.BlockBase;
+import net.minecraft.world.level.block.state.IBlockData;
+import net.minecraft.world.phys.MovingObjectPositionBlock;
+import org.jetbrains.annotations.Nullable;
+
+public class BlockBookshelf extends BlockTileEntity {
+
+    public BlockBookshelf(BlockBase.Info info) {
+        super(info);
+    }
+
+    @Override
+    public EnumInteractionResult interact(IBlockData data, World world, BlockPosition position, EntityHuman human, EnumHand hand, MovingObjectPositionBlock movingObjectPositionBlock) {
+        TileEntity tileEntity = world.getTileEntity(position);
+
+        if (tileEntity instanceof TileEntityBookshelf) {
+            human.openContainer((TileEntityBookshelf) tileEntity);
+        }
+
+        return EnumInteractionResult.CONSUME;
+    }
+
+    @Override
+    public void remove(IBlockData data, World world, BlockPosition position, IBlockData data1, boolean flag) {
+        if (!data.equals(data1.getBlock())) {
+            TileEntity tileEntity = world.getTileEntity(position);
+
+            if (tileEntity instanceof TileEntityBookshelf) {
+                InventoryUtils.dropInventory(world, position, (TileEntityBookshelf) tileEntity);
+                world.updateAdjacentComparators(position, this);
+            }
+
+            super.remove(data, world, position, data1, flag);
+        }
+    }
+
+    @Nullable
+    @Override
+    public TileEntity createTile(IBlockAccess access) {
+        return new TileEntityBookshelf();
+    }
+
+    @Override
+    public EnumRenderType b(IBlockData iblockdata) {
+        return EnumRenderType.MODEL;
+    }
+}
diff --git a/src/main/java/net/minecraft/world/level/block/Blocks.java b/src/main/java/net/minecraft/world/level/block/Blocks.java
index f3a922e8d5fe428a3b6e21ace343bb3d68f242a9..cf2ab0122e7f2c08236555ede504c60ce796b7dd 100644
--- a/src/main/java/net/minecraft/world/level/block/Blocks.java
+++ b/src/main/java/net/minecraft/world/level/block/Blocks.java
@@ -60,7 +60,7 @@ public class Blocks {
     public static final Block JUNGLE_SAPLING = a("jungle_sapling", (Block) (new BlockSapling(new WorldGenMegaTreeProviderJungle(), BlockBase.Info.a(Material.PLANT).a().d().c().a(SoundEffectType.c))));
     public static final Block ACACIA_SAPLING = a("acacia_sapling", (Block) (new BlockSapling(new WorldGenTreeProviderAcacia(), BlockBase.Info.a(Material.PLANT).a().d().c().a(SoundEffectType.c))));
     public static final Block DARK_OAK_SAPLING = a("dark_oak_sapling", (Block) (new BlockSapling(new WorldGenMegaTreeProviderDarkOak(), BlockBase.Info.a(Material.PLANT).a().d().c().a(SoundEffectType.c))));
-    public static final Block BEDROCK = a("bedrock", new Block(BlockBase.Info.a(Material.STONE).a(-1.0F, 3600000.0F).f().a(Blocks::a)));
+    public static final Block BEDROCK = a("bedrock", new Block(BlockBase.Info.a(Material.STONE).a(-1.0F, 3600000.0F).f().a(Blocks::neverAllowSpawn))); // Purpur - decompile fix
     public static final Block WATER = a("water", (Block) (new BlockFluids(FluidTypes.WATER, BlockBase.Info.a(Material.WATER).a().d(100.0F).f())));
     public static final Block LAVA = a("lava", (Block) (new BlockFluids(FluidTypes.LAVA, BlockBase.Info.a(Material.LAVA).a().d().d(100.0F).a((iblockdata) -> {
         return 15;
@@ -104,7 +104,7 @@ public class Blocks {
     public static final Block DARK_OAK_LEAVES = a("dark_oak_leaves", (Block) b());
     public static final Block SPONGE = a("sponge", (Block) (new BlockSponge(BlockBase.Info.a(Material.SPONGE).d(0.6F).a(SoundEffectType.c))));
     public static final Block WET_SPONGE = a("wet_sponge", (Block) (new BlockWetSponge(BlockBase.Info.a(Material.SPONGE).d(0.6F).a(SoundEffectType.c))));
-    public static final Block GLASS = a("glass", (Block) (new BlockGlass(BlockBase.Info.a(Material.SHATTERABLE).d(0.3F).a(SoundEffectType.g).b().a(Blocks::a).a(Blocks::b).b(Blocks::b).c(Blocks::b))));
+    public static final Block GLASS = a("glass", (Block) (new BlockGlass(BlockBase.Info.a(Material.SHATTERABLE).d(0.3F).a(SoundEffectType.g).b().a(Blocks::neverAllowSpawn).a(Blocks::isntSolid).b(Blocks::b).c(Blocks::b)))); // Purpur - decompile fix
     public static final Block LAPIS_ORE = a("lapis_ore", (Block) (new BlockOre(BlockBase.Info.a(Material.STONE).h().a(3.0F, 3.0F))));
     public static final Block LAPIS_BLOCK = a("lapis_block", new Block(BlockBase.Info.a(Material.ORE, MaterialMapColor.H).h().a(3.0F, 3.0F)));
     public static final Block DISPENSER = a("dispenser", (Block) (new BlockDispenser(BlockBase.Info.a(Material.STONE).h().d(3.5F))));
@@ -155,7 +155,7 @@ public class Blocks {
     public static final Block GREEN_WOOL = a("green_wool", new Block(BlockBase.Info.a(Material.CLOTH, MaterialMapColor.C).d(0.8F).a(SoundEffectType.h)));
     public static final Block RED_WOOL = a("red_wool", new Block(BlockBase.Info.a(Material.CLOTH, MaterialMapColor.D).d(0.8F).a(SoundEffectType.h)));
     public static final Block BLACK_WOOL = a("black_wool", new Block(BlockBase.Info.a(Material.CLOTH, MaterialMapColor.E).d(0.8F).a(SoundEffectType.h)));
-    public static final Block MOVING_PISTON = a("moving_piston", (Block) (new BlockPistonMoving(BlockBase.Info.a(Material.PISTON).d(-1.0F).e().f().b().a(Blocks::b).b(Blocks::b).c(Blocks::b))));
+    public static final Block MOVING_PISTON = a("moving_piston", (Block) (new BlockPistonMoving(BlockBase.Info.a(Material.PISTON).d(-1.0F).e().f().b().a(Blocks::isntSolid).b(Blocks::b).c(Blocks::b)))); // Purpur - decompile fix
     public static final Block DANDELION = a("dandelion", (Block) (new BlockFlowers(MobEffects.SATURATION, 7, BlockBase.Info.a(Material.PLANT).a().c().a(SoundEffectType.c))));
     public static final Block POPPY = a("poppy", (Block) (new BlockFlowers(MobEffects.NIGHT_VISION, 5, BlockBase.Info.a(Material.PLANT).a().c().a(SoundEffectType.c))));
     public static final Block BLUE_ORCHID = a("blue_orchid", (Block) (new BlockFlowers(MobEffects.SATURATION, 7, BlockBase.Info.a(Material.PLANT).a().c().a(SoundEffectType.c))));
@@ -177,7 +177,7 @@ public class Blocks {
     public static final Block IRON_BLOCK = a("iron_block", new Block(BlockBase.Info.a(Material.ORE, MaterialMapColor.h).h().a(5.0F, 6.0F).a(SoundEffectType.f)));
     public static final Block BRICKS = a("bricks", new Block(BlockBase.Info.a(Material.STONE, MaterialMapColor.D).h().a(2.0F, 6.0F)));
     public static final Block TNT = a("tnt", (Block) (new BlockTNT(BlockBase.Info.a(Material.TNT).c().a(SoundEffectType.c))));
-    public static final Block BOOKSHELF = a("bookshelf", new Block(BlockBase.Info.a(Material.WOOD).d(1.5F).a(SoundEffectType.a)));
+    public static final Block BOOKSHELF = a("bookshelf", shouldHaveBookshelfContainers() ? new BlockBookshelf(BlockBase.Info.a(Material.WOOD).d(1.5F).a(SoundEffectType.a)) : new Block(BlockBase.Info.a(Material.WOOD).d(1.5F).a(SoundEffectType.a))); // Purpur
     public static final Block MOSSY_COBBLESTONE = a("mossy_cobblestone", new Block(BlockBase.Info.a(Material.STONE).h().a(2.0F, 6.0F)));
     public static final Block OBSIDIAN = a("obsidian", new Block(BlockBase.Info.a(Material.STONE, MaterialMapColor.E).h().a(50.0F, 1200.0F)));
     public static final Block TORCH = a("torch", (Block) (new BlockTorch(BlockBase.Info.a(Material.ORIENTABLE).a().c().a((iblockdata) -> {
@@ -245,7 +245,7 @@ public class Blocks {
     public static final Block OAK_FENCE = a("oak_fence", (Block) (new BlockFence(BlockBase.Info.a(Material.WOOD, Blocks.OAK_PLANKS.s()).a(2.0F, 3.0F).a(SoundEffectType.a))));
     public static final Block PUMPKIN = a("pumpkin", (Block) (new BlockPumpkin(BlockBase.Info.a(Material.PUMPKIN, MaterialMapColor.q).d(1.0F).a(SoundEffectType.a))));
     public static final Block NETHERRACK = a("netherrack", (Block) (new BlockNetherrack(BlockBase.Info.a(Material.STONE, MaterialMapColor.K).h().d(0.4F).a(SoundEffectType.K))));
-    public static final Block SOUL_SAND = a("soul_sand", (Block) (new BlockSlowSand(BlockBase.Info.a(Material.SAND, MaterialMapColor.B).d(0.5F).b(0.4F).a(SoundEffectType.G).a(Blocks::b).a(Blocks::a).c(Blocks::a).b(Blocks::a))));
+    public static final Block SOUL_SAND = a("soul_sand", (Block) (new BlockSlowSand(BlockBase.Info.a(Material.SAND, MaterialMapColor.B).d(0.5F).b(0.4F).a(SoundEffectType.G).a(Blocks::alwaysAllowSpawn).a(Blocks::needsPostProcessing).c(Blocks::a).b(Blocks::a)))); // Purpur - decompile fix
     public static final Block SOUL_SOIL = a("soul_soil", new Block(BlockBase.Info.a(Material.EARTH, MaterialMapColor.B).d(0.5F).a(SoundEffectType.H)));
     public static final Block BASALT = a("basalt", (Block) (new BlockRotatable(BlockBase.Info.a(Material.STONE, MaterialMapColor.E).h().a(1.25F, 4.2F).a(SoundEffectType.I))));
     public static final Block cP = a("polished_basalt", (Block) (new BlockRotatable(BlockBase.Info.a(Material.STONE, MaterialMapColor.E).h().a(1.25F, 4.2F).a(SoundEffectType.I))));
@@ -261,10 +261,10 @@ public class Blocks {
     public static final Block NETHER_PORTAL = a("nether_portal", (Block) (new BlockPortal(BlockBase.Info.a(Material.PORTAL).a().d().d(-1.0F).a(SoundEffectType.g).a((iblockdata) -> {
         return 11;
     }))));
-    public static final Block CARVED_PUMPKIN = a("carved_pumpkin", (Block) (new BlockPumpkinCarved(BlockBase.Info.a(Material.PUMPKIN, MaterialMapColor.q).d(1.0F).a(SoundEffectType.a).a(Blocks::b))));
+    public static final Block CARVED_PUMPKIN = a("carved_pumpkin", (Block) (new BlockPumpkinCarved(BlockBase.Info.a(Material.PUMPKIN, MaterialMapColor.q).d(1.0F).a(SoundEffectType.a).a(Blocks::alwaysAllowSpawn)))); // Purpur - decompile fix
     public static final Block JACK_O_LANTERN = a("jack_o_lantern", (Block) (new BlockPumpkinCarved(BlockBase.Info.a(Material.PUMPKIN, MaterialMapColor.q).d(1.0F).a(SoundEffectType.a).a((iblockdata) -> {
         return 15;
-    }).a(Blocks::b))));
+    }).a(Blocks::alwaysAllowSpawn)))); // Purpur - decompile fix
     public static final Block CAKE = a("cake", (Block) (new BlockCake(BlockBase.Info.a(Material.CAKE).d(0.5F).a(SoundEffectType.h))));
     public static final Block REPEATER = a("repeater", (Block) (new BlockRepeater(BlockBase.Info.a(Material.ORIENTABLE).c().a(SoundEffectType.a))));
     public static final Block WHITE_STAINED_GLASS = a("white_stained_glass", (Block) b(EnumColor.WHITE));
@@ -283,12 +283,12 @@ public class Blocks {
     public static final Block GREEN_STAINED_GLASS = a("green_stained_glass", (Block) b(EnumColor.GREEN));
     public static final Block RED_STAINED_GLASS = a("red_stained_glass", (Block) b(EnumColor.RED));
     public static final Block BLACK_STAINED_GLASS = a("black_stained_glass", (Block) b(EnumColor.BLACK));
-    public static final Block OAK_TRAPDOOR = a("oak_trapdoor", (Block) (new BlockTrapdoor(BlockBase.Info.a(Material.WOOD, MaterialMapColor.o).d(3.0F).a(SoundEffectType.a).b().a(Blocks::a))));
-    public static final Block SPRUCE_TRAPDOOR = a("spruce_trapdoor", (Block) (new BlockTrapdoor(BlockBase.Info.a(Material.WOOD, MaterialMapColor.J).d(3.0F).a(SoundEffectType.a).b().a(Blocks::a))));
-    public static final Block BIRCH_TRAPDOOR = a("birch_trapdoor", (Block) (new BlockTrapdoor(BlockBase.Info.a(Material.WOOD, MaterialMapColor.d).d(3.0F).a(SoundEffectType.a).b().a(Blocks::a))));
-    public static final Block JUNGLE_TRAPDOOR = a("jungle_trapdoor", (Block) (new BlockTrapdoor(BlockBase.Info.a(Material.WOOD, MaterialMapColor.l).d(3.0F).a(SoundEffectType.a).b().a(Blocks::a))));
-    public static final Block ACACIA_TRAPDOOR = a("acacia_trapdoor", (Block) (new BlockTrapdoor(BlockBase.Info.a(Material.WOOD, MaterialMapColor.q).d(3.0F).a(SoundEffectType.a).b().a(Blocks::a))));
-    public static final Block DARK_OAK_TRAPDOOR = a("dark_oak_trapdoor", (Block) (new BlockTrapdoor(BlockBase.Info.a(Material.WOOD, MaterialMapColor.B).d(3.0F).a(SoundEffectType.a).b().a(Blocks::a))));
+    public static final Block OAK_TRAPDOOR = a("oak_trapdoor", (Block) (new BlockTrapdoor(BlockBase.Info.a(Material.WOOD, MaterialMapColor.o).d(3.0F).a(SoundEffectType.a).b().a(Blocks::neverAllowSpawn)))); // Purpur - decompile fix
+    public static final Block SPRUCE_TRAPDOOR = a("spruce_trapdoor", (Block) (new BlockTrapdoor(BlockBase.Info.a(Material.WOOD, MaterialMapColor.J).d(3.0F).a(SoundEffectType.a).b().a(Blocks::neverAllowSpawn)))); // Purpur - decompile fix
+    public static final Block BIRCH_TRAPDOOR = a("birch_trapdoor", (Block) (new BlockTrapdoor(BlockBase.Info.a(Material.WOOD, MaterialMapColor.d).d(3.0F).a(SoundEffectType.a).b().a(Blocks::neverAllowSpawn)))); // Purpur - decompile fix
+    public static final Block JUNGLE_TRAPDOOR = a("jungle_trapdoor", (Block) (new BlockTrapdoor(BlockBase.Info.a(Material.WOOD, MaterialMapColor.l).d(3.0F).a(SoundEffectType.a).b().a(Blocks::neverAllowSpawn)))); // Purpur - decompile fix
+    public static final Block ACACIA_TRAPDOOR = a("acacia_trapdoor", (Block) (new BlockTrapdoor(BlockBase.Info.a(Material.WOOD, MaterialMapColor.q).d(3.0F).a(SoundEffectType.a).b().a(Blocks::neverAllowSpawn)))); // Purpur - decompile fix
+    public static final Block DARK_OAK_TRAPDOOR = a("dark_oak_trapdoor", (Block) (new BlockTrapdoor(BlockBase.Info.a(Material.WOOD, MaterialMapColor.B).d(3.0F).a(SoundEffectType.a).b().a(Blocks::neverAllowSpawn)))); // Purpur - decompile fix
     public static final Block STONE_BRICKS = a("stone_bricks", new Block(BlockBase.Info.a(Material.STONE).h().a(1.5F, 6.0F)));
     public static final Block MOSSY_STONE_BRICKS = a("mossy_stone_bricks", new Block(BlockBase.Info.a(Material.STONE).h().a(1.5F, 6.0F)));
     public static final Block CRACKED_STONE_BRICKS = a("cracked_stone_bricks", new Block(BlockBase.Info.a(Material.STONE).h().a(1.5F, 6.0F)));
@@ -335,7 +335,7 @@ public class Blocks {
     public static final Block DRAGON_EGG = a("dragon_egg", (Block) (new BlockDragonEgg(BlockBase.Info.a(Material.DRAGON_EGG, MaterialMapColor.E).a(3.0F, 9.0F).a((iblockdata) -> {
         return 1;
     }).b())));
-    public static final Block REDSTONE_LAMP = a("redstone_lamp", (Block) (new BlockRedstoneLamp(BlockBase.Info.a(Material.BUILDABLE_GLASS).a(a(15)).d(0.3F).a(SoundEffectType.g).a(Blocks::b))));
+    public static final Block REDSTONE_LAMP = a("redstone_lamp", (Block) (new BlockRedstoneLamp(BlockBase.Info.a(Material.BUILDABLE_GLASS).a(a(15)).d(0.3F).a(SoundEffectType.g).a(Blocks::alwaysAllowSpawn)))); // Purpur - decompile fix
     public static final Block COCOA = a("cocoa", (Block) (new BlockCocoa(BlockBase.Info.a(Material.PLANT).d().a(0.2F, 3.0F).a(SoundEffectType.a).b())));
     public static final Block SANDSTONE_STAIRS = a("sandstone_stairs", (Block) (new BlockStairs(Blocks.SANDSTONE.getBlockData(), BlockBase.Info.a((BlockBase) Blocks.SANDSTONE))));
     public static final Block EMERALD_ORE = a("emerald_ore", (Block) (new BlockOre(BlockBase.Info.a(Material.STONE).h().a(3.0F, 3.0F))));
@@ -351,7 +351,7 @@ public class Blocks {
     public static final Block COMMAND_BLOCK = a("command_block", (Block) (new BlockCommand(BlockBase.Info.a(Material.ORE, MaterialMapColor.B).h().a(-1.0F, 3600000.0F).f())));
     public static final Block BEACON = a("beacon", (Block) (new BlockBeacon(BlockBase.Info.a(Material.SHATTERABLE, MaterialMapColor.G).d(3.0F).a((iblockdata) -> {
         return 15;
-    }).b().a(Blocks::b))));
+    }).b().a(Blocks::isntSolid)))); // Purpur - decompile fix
     public static final Block COBBLESTONE_WALL = a("cobblestone_wall", (Block) (new BlockCobbleWall(BlockBase.Info.a((BlockBase) Blocks.COBBLESTONE))));
     public static final Block MOSSY_COBBLESTONE_WALL = a("mossy_cobblestone_wall", (Block) (new BlockCobbleWall(BlockBase.Info.a((BlockBase) Blocks.COBBLESTONE))));
     public static final Block FLOWER_POT = a("flower_pot", (Block) (new BlockFlowerPot(Blocks.AIR, BlockBase.Info.a(Material.ORIENTABLE).c().b())));
@@ -407,7 +407,7 @@ public class Blocks {
     public static final Block HEAVY_WEIGHTED_PRESSURE_PLATE = a("heavy_weighted_pressure_plate", (Block) (new BlockPressurePlateWeighted(150, BlockBase.Info.a(Material.ORE).h().a().d(0.5F).a(SoundEffectType.a))));
     public static final Block COMPARATOR = a("comparator", (Block) (new BlockRedstoneComparator(BlockBase.Info.a(Material.ORIENTABLE).c().a(SoundEffectType.a))));
     public static final Block DAYLIGHT_DETECTOR = a("daylight_detector", (Block) (new BlockDaylightDetector(BlockBase.Info.a(Material.WOOD).d(0.2F).a(SoundEffectType.a))));
-    public static final Block REDSTONE_BLOCK = a("redstone_block", (Block) (new BlockPowered(BlockBase.Info.a(Material.ORE, MaterialMapColor.f).h().a(5.0F, 6.0F).a(SoundEffectType.f).a(Blocks::b))));
+    public static final Block REDSTONE_BLOCK = a("redstone_block", (Block) (new BlockPowered(BlockBase.Info.a(Material.ORE, MaterialMapColor.f).h().a(5.0F, 6.0F).a(SoundEffectType.f).a(Blocks::isntSolid)))); // Purpur - decompile fix
     public static final Block NETHER_QUARTZ_ORE = a("nether_quartz_ore", (Block) (new BlockOre(BlockBase.Info.a(Material.STONE, MaterialMapColor.K).h().a(3.0F, 3.0F).a(SoundEffectType.N))));
     public static final Block HOPPER = a("hopper", (Block) (new BlockHopper(BlockBase.Info.a(Material.ORE, MaterialMapColor.m).h().a(3.0F, 4.8F).a(SoundEffectType.f).b())));
     public static final Block QUARTZ_BLOCK = a("quartz_block", new Block(BlockBase.Info.a(Material.STONE, MaterialMapColor.p).h().d(0.8F)));
@@ -451,8 +451,8 @@ public class Blocks {
     public static final Block ACACIA_STAIRS = a("acacia_stairs", (Block) (new BlockStairs(Blocks.ACACIA_PLANKS.getBlockData(), BlockBase.Info.a((BlockBase) Blocks.ACACIA_PLANKS))));
     public static final Block DARK_OAK_STAIRS = a("dark_oak_stairs", (Block) (new BlockStairs(Blocks.DARK_OAK_PLANKS.getBlockData(), BlockBase.Info.a((BlockBase) Blocks.DARK_OAK_PLANKS))));
     public static final Block SLIME_BLOCK = a("slime_block", (Block) (new BlockSlime(BlockBase.Info.a(Material.CLAY, MaterialMapColor.c).a(0.8F).a(SoundEffectType.m).b())));
-    public static final Block BARRIER = a("barrier", (Block) (new BlockBarrier(BlockBase.Info.a(Material.BANNER).a(-1.0F, 3600000.8F).f().b().a(Blocks::a))));
-    public static final Block IRON_TRAPDOOR = a("iron_trapdoor", (Block) (new BlockTrapdoor(BlockBase.Info.a(Material.ORE).h().d(5.0F).a(SoundEffectType.f).b().a(Blocks::a))));
+    public static final Block BARRIER = a("barrier", (Block) (new BlockBarrier(BlockBase.Info.a(Material.BANNER).a(-1.0F, 3600000.8F).f().b().a(Blocks::neverAllowSpawn)))); // Purpur - decompile fix
+    public static final Block IRON_TRAPDOOR = a("iron_trapdoor", (Block) (new BlockTrapdoor(BlockBase.Info.a(Material.ORE).h().d(5.0F).a(SoundEffectType.f).b().a(Blocks::neverAllowSpawn)))); // Purpur - decompile fix
     public static final Block PRISMARINE = a("prismarine", new Block(BlockBase.Info.a(Material.STONE, MaterialMapColor.y).h().a(1.5F, 6.0F)));
     public static final Block PRISMARINE_BRICKS = a("prismarine_bricks", new Block(BlockBase.Info.a(Material.STONE, MaterialMapColor.G).h().a(1.5F, 6.0F)));
     public static final Block DARK_PRISMARINE = a("dark_prismarine", new Block(BlockBase.Info.a(Material.STONE, MaterialMapColor.G).h().a(1.5F, 6.0F)));
@@ -593,7 +593,7 @@ public class Blocks {
     public static final Block RED_NETHER_BRICKS = a("red_nether_bricks", new Block(BlockBase.Info.a(Material.STONE, MaterialMapColor.K).h().a(2.0F, 6.0F).a(SoundEffectType.L)));
     public static final Block BONE_BLOCK = a("bone_block", (Block) (new BlockRotatable(BlockBase.Info.a(Material.STONE, MaterialMapColor.d).h().d(2.0F).a(SoundEffectType.O))));
     public static final Block STRUCTURE_VOID = a("structure_void", (Block) (new BlockStructureVoid(BlockBase.Info.a(Material.STRUCTURE_VOID).a().f())));
-    public static final Block OBSERVER = a("observer", (Block) (new BlockObserver(BlockBase.Info.a(Material.STONE).d(3.0F).h().a(Blocks::b))));
+    public static final Block OBSERVER = a("observer", (Block) (new BlockObserver(BlockBase.Info.a(Material.STONE).d(3.0F).h().a(Blocks::isntSolid)))); // Purpur - decompile fix
     public static final Block SHULKER_BOX = a("shulker_box", (Block) a((EnumColor) null, BlockBase.Info.a(Material.SHULKER_SHELL)));
     public static final Block WHITE_SHULKER_BOX = a("white_shulker_box", (Block) a(EnumColor.WHITE, BlockBase.Info.a(Material.SHULKER_SHELL, MaterialMapColor.j)));
     public static final Block ORANGE_SHULKER_BOX = a("orange_shulker_box", (Block) a(EnumColor.ORANGE, BlockBase.Info.a(Material.SHULKER_SHELL, MaterialMapColor.q)));
@@ -811,8 +811,8 @@ public class Blocks {
     public static final Block WARPED_PRESSURE_PLATE = a("warped_pressure_plate", (Block) (new BlockPressurePlateBinary(BlockPressurePlateBinary.EnumMobType.EVERYTHING, BlockBase.Info.a(Material.NETHER_WOOD, Blocks.WARPED_PLANKS.s()).a().d(0.5F).a(SoundEffectType.a))));
     public static final Block CRIMSON_FENCE = a("crimson_fence", (Block) (new BlockFence(BlockBase.Info.a(Material.NETHER_WOOD, Blocks.CRIMSON_PLANKS.s()).a(2.0F, 3.0F).a(SoundEffectType.a))));
     public static final Block WARPED_FENCE = a("warped_fence", (Block) (new BlockFence(BlockBase.Info.a(Material.NETHER_WOOD, Blocks.WARPED_PLANKS.s()).a(2.0F, 3.0F).a(SoundEffectType.a))));
-    public static final Block CRIMSON_TRAPDOOR = a("crimson_trapdoor", (Block) (new BlockTrapdoor(BlockBase.Info.a(Material.NETHER_WOOD, Blocks.CRIMSON_PLANKS.s()).d(3.0F).a(SoundEffectType.a).b().a(Blocks::a))));
-    public static final Block WARPED_TRAPDOOR = a("warped_trapdoor", (Block) (new BlockTrapdoor(BlockBase.Info.a(Material.NETHER_WOOD, Blocks.WARPED_PLANKS.s()).d(3.0F).a(SoundEffectType.a).b().a(Blocks::a))));
+    public static final Block CRIMSON_TRAPDOOR = a("crimson_trapdoor", (Block) (new BlockTrapdoor(BlockBase.Info.a(Material.NETHER_WOOD, Blocks.CRIMSON_PLANKS.s()).d(3.0F).a(SoundEffectType.a).b().a(Blocks::neverAllowSpawn)))); // Purpur - decompile fix
+    public static final Block WARPED_TRAPDOOR = a("warped_trapdoor", (Block) (new BlockTrapdoor(BlockBase.Info.a(Material.NETHER_WOOD, Blocks.WARPED_PLANKS.s()).d(3.0F).a(SoundEffectType.a).b().a(Blocks::neverAllowSpawn)))); // Purpur - decompile fix
     public static final Block CRIMSON_FENCE_GATE = a("crimson_fence_gate", (Block) (new BlockFenceGate(BlockBase.Info.a(Material.NETHER_WOOD, Blocks.CRIMSON_PLANKS.s()).a(2.0F, 3.0F).a(SoundEffectType.a))));
     public static final Block WARPED_FENCE_GATE = a("warped_fence_gate", (Block) (new BlockFenceGate(BlockBase.Info.a(Material.NETHER_WOOD, Blocks.WARPED_PLANKS.s()).a(2.0F, 3.0F).a(SoundEffectType.a))));
     public static final Block CRIMSON_STAIRS = a("crimson_stairs", (Block) (new BlockStairs(Blocks.CRIMSON_PLANKS.getBlockData(), BlockBase.Info.a((BlockBase) Blocks.CRIMSON_PLANKS))));
@@ -867,16 +867,25 @@ public class Blocks {
     public static final Block CRACKED_NETHER_BRICKS = a("cracked_nether_bricks", new Block(BlockBase.Info.a(Material.STONE, MaterialMapColor.K).h().a(2.0F, 6.0F).a(SoundEffectType.L)));
     public static final Block QUARTZ_BRICKS = a("quartz_bricks", new Block(BlockBase.Info.a((BlockBase) Blocks.QUARTZ_BLOCK)));
 
+    // Purpur start
+    private static boolean shouldHaveBookshelfContainers() {
+        net.pl3x.purpur.PurpurConfig.init(org.bukkit.craftbukkit.Main.purpurConfig);
+        return net.pl3x.purpur.PurpurConfig.bookshelfContainers;
+    }
+    // Purpur end
+
     private static ToIntFunction<IBlockData> a(int i) {
         return (iblockdata) -> {
             return (Boolean) iblockdata.get(BlockProperties.r) ? i : 0;
         };
     }
 
+    private static Boolean neverAllowSpawn(IBlockData iblockdata, IBlockAccess iblockaccess, BlockPosition blockposition, EntityTypes<?> entitytypes) { return Blocks.a(iblockdata, iblockaccess, blockposition, entitytypes); } // Purpur - OBFHELPER
     private static Boolean a(IBlockData iblockdata, IBlockAccess iblockaccess, BlockPosition blockposition, EntityTypes<?> entitytypes) {
         return false;
     }
 
+    private static Boolean alwaysAllowSpawn(IBlockData iblockdata, IBlockAccess iblockaccess, BlockPosition blockposition, EntityTypes<?> entitytypes) { return Blocks.b(iblockdata, iblockaccess, blockposition, entitytypes); } // Purpur - OBFHELPER
     private static Boolean b(IBlockData iblockdata, IBlockAccess iblockaccess, BlockPosition blockposition, EntityTypes<?> entitytypes) {
         return true;
     }
@@ -903,16 +912,18 @@ public class Blocks {
         }).d(2.0F).a(SoundEffectType.z));
     }
 
+    private static boolean needsPostProcessing(IBlockData iblockdata, IBlockAccess iblockaccess, BlockPosition blockposition) { return Blocks.a(iblockdata, iblockaccess, blockposition); } // Purpur - OBFHELPER
     private static boolean a(IBlockData iblockdata, IBlockAccess iblockaccess, BlockPosition blockposition) {
         return true;
     }
 
+    private static boolean isntSolid(IBlockData iblockdata, IBlockAccess iblockaccess, BlockPosition blockposition) { return Blocks.b(iblockdata, iblockaccess, blockposition); } // Purpur - OBFHELPER
     private static boolean b(IBlockData iblockdata, IBlockAccess iblockaccess, BlockPosition blockposition) {
         return false;
     }
 
     private static BlockStainedGlass b(EnumColor enumcolor) {
-        return new BlockStainedGlass(enumcolor, BlockBase.Info.a(Material.SHATTERABLE, enumcolor).d(0.3F).a(SoundEffectType.g).b().a(Blocks::a).a(Blocks::b).b(Blocks::b).c(Blocks::b));
+        return new BlockStainedGlass(enumcolor, BlockBase.Info.a(Material.SHATTERABLE, enumcolor).d(0.3F).a(SoundEffectType.g).b().a(Blocks::neverAllowSpawn).a(Blocks::isntSolid).b(Blocks::b).c(Blocks::b)); // Purpur - decompile fix
     }
 
     private static BlockLeaves b() {
@@ -940,7 +951,7 @@ public class Blocks {
             return !(Boolean) iblockdata.get(BlockPiston.EXTENDED);
         };
 
-        return new BlockPiston(flag, BlockBase.Info.a(Material.PISTON).d(1.5F).a(Blocks::b).b(blockbase_e).c(blockbase_e));
+        return new BlockPiston(flag, BlockBase.Info.a(Material.PISTON).d(1.5F).a(Blocks::isntSolid).b(blockbase_e).c(blockbase_e)); // Purpur - decompile fix
     }
 
     private static Block a(String s, Block block) {
diff --git a/src/main/java/net/minecraft/world/level/block/entity/TileEntityBookshelf.java b/src/main/java/net/minecraft/world/level/block/entity/TileEntityBookshelf.java
new file mode 100644
index 0000000000000000000000000000000000000000..d2923cee0dc1f2e37268abe6c01575a578facc81
--- /dev/null
+++ b/src/main/java/net/minecraft/world/level/block/entity/TileEntityBookshelf.java
@@ -0,0 +1,120 @@
+package net.minecraft.world.level.block.entity;
+
+import net.minecraft.core.NonNullList;
+import net.minecraft.nbt.NBTTagCompound;
+import net.minecraft.network.chat.ChatMessage;
+import net.minecraft.network.chat.IChatBaseComponent;
+import net.minecraft.world.ContainerUtil;
+import net.minecraft.world.entity.player.PlayerInventory;
+import net.minecraft.world.inventory.Container;
+import net.minecraft.world.inventory.ContainerDispenser;
+import net.minecraft.world.item.ItemStack;
+import net.minecraft.world.level.block.state.IBlockData;
+import net.pl3x.purpur.PurpurConfig;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.entity.HumanEntity;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class TileEntityBookshelf extends TileEntityLootable {
+    public List<HumanEntity> viewers = new ArrayList<>();
+
+    private int maxStack = MAX_STACK;
+    private NonNullList<ItemStack> items;
+
+    public TileEntityBookshelf(TileEntityTypes<?> types) {
+        super(types);
+        this.items = NonNullList.withSize(9, ItemStack.NULL_ITEM);
+    }
+
+    public TileEntityBookshelf() {
+        this(TileEntityTypes.BOOKSHELF);
+    }
+
+    @Override
+    public int getSize() {
+        return 9;
+    }
+
+    @Override
+    public int getMaxStackSize() {
+        return maxStack;
+    }
+
+    @Override
+    public List<ItemStack> getContents() {
+        return this.items;
+    }
+
+    @Override
+    public void onOpen(CraftHumanEntity who) {
+        this.viewers.add(who);
+    }
+
+    @Override
+    public void onClose(CraftHumanEntity who) {
+        viewers.remove(who);
+    }
+
+    @Override
+    public List<HumanEntity> getViewers() {
+        return viewers;
+    }
+
+    @Override
+    public void setMaxStackSize(int size) {
+        this.maxStack = size;
+    }
+
+    public int addItem(ItemStack itemStack) {
+        for (int i = 0; i < this.items.size(); ++i) {
+            if ((this.items.get(i)).isEmpty()) {
+                this.setItem(i, itemStack);
+                return i;
+            }
+        }
+
+        return -1;
+    }
+
+
+    @Override
+    protected IChatBaseComponent getContainerName() {
+        return new ChatMessage(PurpurConfig.bookshelfContainerNames);
+    }
+
+    @Override
+    protected Container createContainer(int i, PlayerInventory playerinventory) {
+        return new ContainerDispenser(i, playerinventory, this);
+    }
+
+    @Override
+    public void load(IBlockData iblockdata, NBTTagCompound nbttagcompound) {
+        super.load(iblockdata, nbttagcompound);
+        this.items = NonNullList.a(this.getSize(), ItemStack.NULL_ITEM);
+        if (!this.tryLoadLootTable(nbttagcompound)) {
+            ContainerUtil.loadAllItems(nbttagcompound, this.items);
+        }
+    }
+
+    @Override
+    public NBTTagCompound save(NBTTagCompound nbttagcompound) {
+        super.save(nbttagcompound);
+        if (!this.trySaveLootTable(nbttagcompound)) {
+            ContainerUtil.saveAllItems(nbttagcompound, this.items);
+        }
+
+        return nbttagcompound;
+    }
+
+    @Override
+    protected NonNullList<ItemStack> f() {
+        return this.items;
+    }
+
+    @Override
+    protected void a(NonNullList<ItemStack> items) {
+        this.items = items;
+    }
+}
diff --git a/src/main/java/net/minecraft/world/level/block/entity/TileEntityLootable.java b/src/main/java/net/minecraft/world/level/block/entity/TileEntityLootable.java
index f0da819627035bed83561128a11059424d2b7e30..a328e2368588ed019639d7b55c7598e173d3dc2d 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/TileEntityLootable.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/TileEntityLootable.java
@@ -42,6 +42,7 @@ public abstract class TileEntityLootable extends TileEntityContainer {
 
     }
 
+    protected boolean tryLoadLootTable(NBTTagCompound nbttagcompound) { return this.b(nbttagcompound); } // Purpur - OBFHELPER
     protected boolean b(NBTTagCompound nbttagcompound) {
         this.lootableData.loadNbt(nbttagcompound); // Paper
         if (nbttagcompound.hasKeyOfType("LootTable", 8)) {
@@ -54,6 +55,7 @@ public abstract class TileEntityLootable extends TileEntityContainer {
         }
     }
 
+    protected boolean trySaveLootTable(NBTTagCompound nbttagcompound) { return this.c(nbttagcompound); } // Purpur - OBFHELPER
     protected boolean c(NBTTagCompound nbttagcompound) {
         this.lootableData.saveNbt(nbttagcompound); // Paper
         if (this.lootTable == null) {
diff --git a/src/main/java/net/minecraft/world/level/block/entity/TileEntityTypes.java b/src/main/java/net/minecraft/world/level/block/entity/TileEntityTypes.java
index 8d9e2842e438fa4ad4b47854c3301d6fe599cd02..da48dcb654847355abc31e920afa7c1dd6afc662 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/TileEntityTypes.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/TileEntityTypes.java
@@ -53,6 +53,7 @@ public class TileEntityTypes<T extends TileEntity> {
     public static final TileEntityTypes<TileEntityJigsaw> JIGSAW = a("jigsaw", TileEntityTypes.a.a(TileEntityJigsaw::new, Blocks.JIGSAW));
     public static final TileEntityTypes<TileEntityCampfire> CAMPFIRE = a("campfire", TileEntityTypes.a.a(TileEntityCampfire::new, Blocks.CAMPFIRE, Blocks.SOUL_CAMPFIRE));
     public static final TileEntityTypes<TileEntityBeehive> BEEHIVE = a("beehive", TileEntityTypes.a.a(TileEntityBeehive::new, Blocks.BEE_NEST, Blocks.BEEHIVE));
+    public static final TileEntityTypes<TileEntityBookshelf> BOOKSHELF = a("bookshelf", TileEntityTypes.a.a(TileEntityBookshelf::new, Blocks.BOOKSHELF)); // Purpur
     private final Supplier<? extends T> I;
     private final Set<Block> J;
     private final Type<?> K;
@@ -69,7 +70,7 @@ public class TileEntityTypes<T extends TileEntity> {
 
         Type<?> type = SystemUtils.a(DataConverterTypes.BLOCK_ENTITY, s);
 
-        return (TileEntityTypes) IRegistry.a(IRegistry.BLOCK_ENTITY_TYPE, s, (Object) tileentitytypes_a.a(type));
+        return (TileEntityTypes) IRegistry.a(IRegistry.BLOCK_ENTITY_TYPE, s, tileentitytypes_a.a(type)); // Purpur - decompile fix
     }
 
     public TileEntityTypes(Supplier<? extends T> supplier, Set<Block> set, Type<?> type) {
@@ -80,7 +81,7 @@ public class TileEntityTypes<T extends TileEntity> {
 
     @Nullable
     public T a() {
-        return (TileEntity) this.I.get();
+        return this.I.get(); // Purpur - decompile fix
     }
 
     public boolean isValidBlock(Block block) {
@@ -91,7 +92,7 @@ public class TileEntityTypes<T extends TileEntity> {
     public T a(IBlockAccess iblockaccess, BlockPosition blockposition) {
         TileEntity tileentity = iblockaccess.getTileEntity(blockposition);
 
-        return tileentity != null && tileentity.getTileType() == this ? tileentity : null;
+        return tileentity != null && tileentity.getTileType() == this ? (T) tileentity : null; // Purpur - decompile fix
     }
 
     public static final class a<T extends TileEntity> {
diff --git a/src/main/java/net/minecraft/world/level/chunk/Chunk.java b/src/main/java/net/minecraft/world/level/chunk/Chunk.java
index 4f5f9eb110cf71a966d1365c7813ba55b5127890..2649f4c85431a7f5741510cd447b433669e0acc8 100644
--- a/src/main/java/net/minecraft/world/level/chunk/Chunk.java
+++ b/src/main/java/net/minecraft/world/level/chunk/Chunk.java
@@ -927,6 +927,7 @@ public class Chunk implements IChunkAccess {
 
     @Override
     public void setTileEntity(BlockPosition blockposition, TileEntity tileentity) {
+        if (!net.pl3x.purpur.PurpurConfig.bookshelfContainers && this.getType(blockposition).getBukkitMaterial() == org.bukkit.Material.BOOKSHELF) return; // Purpur
         if (this.getType(blockposition).getBlock() instanceof ITileEntity) {
             tileentity.setLocation(this.world, blockposition);
             tileentity.r();
diff --git a/src/main/java/net/pl3x/purpur/PurpurConfig.java b/src/main/java/net/pl3x/purpur/PurpurConfig.java
index 322cecf1a7316fb8fe00ff538fe3a2dd21708819..d872641006f66159cb5fd67060c34f9706e97fc3 100644
--- a/src/main/java/net/pl3x/purpur/PurpurConfig.java
+++ b/src/main/java/net/pl3x/purpur/PurpurConfig.java
@@ -213,6 +213,8 @@ public class PurpurConfig {
     public static boolean enderChestSixRows = false;
     public static boolean enderChestPermissionRows = false;
     public static boolean cryingObsidianValidForPortalFrame = false;
+    public static boolean bookshelfContainers = false;
+    public static String bookshelfContainerNames = "Bookshelf";
     private static void blockSettings() {
         if (version < 3) {
             boolean oldValue = getBoolean("settings.barrel.packed-barrels", true);
@@ -228,6 +230,8 @@ public class PurpurConfig {
         InventoryType.ENDER_CHEST.setDefaultSize(enderChestSixRows ? 54 : 27);
         enderChestPermissionRows = getBoolean("settings.blocks.ender_chest.use-permissions-for-rows", enderChestPermissionRows);
         cryingObsidianValidForPortalFrame = getBoolean("settings.blocks.crying_obsidian.valid-for-portal-frame", cryingObsidianValidForPortalFrame);
+        bookshelfContainers = getBoolean("settings.blocks.bookshelf.containers", bookshelfContainers);
+        bookshelfContainerNames = getString("settings.blocks.bookshelf.container-name", bookshelfContainerNames);
     }
 
     public static boolean allowInfinityMending = false;
diff --git a/src/main/java/org/bukkit/craftbukkit/Main.java b/src/main/java/org/bukkit/craftbukkit/Main.java
index a471a3a4191872dae5da7e4f7b41de4491040d5d..717555d925e065f7de680a7392a7155b9f5159d9 100644
--- a/src/main/java/org/bukkit/craftbukkit/Main.java
+++ b/src/main/java/org/bukkit/craftbukkit/Main.java
@@ -19,6 +19,7 @@ import net.minecrell.terminalconsole.TerminalConsoleAppender; // Paper
 public class Main {
     public static boolean useJline = true;
     public static boolean useConsole = true;
+    public static File purpurConfig; // Purpur
 
     public static void main(String[] args) {
         // Todo: Installation script
@@ -249,6 +250,7 @@ public class Main {
                 }
                 */
 
+                purpurConfig = (File) options.valueOf("purpur-settings"); // Purpur
                 if (options.has("nojline")) {
                     System.setProperty(TerminalConsoleAppender.JLINE_OVERRIDE_PROPERTY, "false");
                     useJline = false;
