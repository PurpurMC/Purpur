From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jason Penilla <11360596+jpenilla@users.noreply.github.com>
Date: Mon, 14 Sep 2020 10:09:05 -0700
Subject: [PATCH] Despawn rate config options per projectile type

Default values of -1 respect vanilla behaviour.

diff --git a/src/main/java/net/minecraft/world/entity/projectile/AbstractArrow.java b/src/main/java/net/minecraft/world/entity/projectile/AbstractArrow.java
index bc01e5014e1355a225bdf5c47f2965290b45e2d2..63662eb3b3e4a79aea506df671721a83528340b9 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/AbstractArrow.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/AbstractArrow.java
@@ -63,7 +63,7 @@ public abstract class AbstractArrow extends Projectile {
     protected int inGroundTime;
     public AbstractArrow.Pickup pickup;
     public int shakeTime;
-    public int life;
+    // public int life; // Purpur - moved to Projectile
     private double baseDamage;
     public int knockback;
     private SoundEvent soundEvent;
@@ -334,12 +334,28 @@ public abstract class AbstractArrow extends Projectile {
 
     }
 
-    protected void tickDespawn() {
-        ++this.life;
-        if (this.life >= (pickup == Pickup.CREATIVE_ONLY ? level.paperConfig().entities.spawning.creativeArrowDespawnRate.value() : (pickup == Pickup.DISALLOWED ? level.paperConfig().entities.spawning.nonPlayerArrowDespawnRate.value() : ((this instanceof ThrownTrident) ? level.spigotConfig.tridentDespawnRate : level.spigotConfig.arrowDespawnRate)))) { // Spigot // Paper - TODO: Extract this to init?
-            this.discard();
+    // Purpur start
+    protected int getPurpurDespawnRate() {
+        if (pickup == Pickup.CREATIVE_ONLY) {
+            return level.paperConfig().entities.spawning.creativeArrowDespawnRate.value();
+        }
+        if (pickup == Pickup.DISALLOWED) {
+            return level.paperConfig().entities.spawning.nonPlayerArrowDespawnRate.value();
         }
+        if (this instanceof ThrownTrident) {
+            return level.spigotConfig.tridentDespawnRate;
+        }
+        return level.spigotConfig.arrowDespawnRate;
+    }
 
+    // Arrow despawn ticking is handled differently
+    protected boolean shouldAlwaysTickDespawn() {
+        return false;
+    };
+    // Purpur end
+
+    protected void tickDespawn() {
+        tickDespawnCounter(); // Purpur
     }
 
     private void resetPiercedEntities() {
diff --git a/src/main/java/net/minecraft/world/entity/projectile/DragonFireball.java b/src/main/java/net/minecraft/world/entity/projectile/DragonFireball.java
index 6afe37e42d88701af38df5793a9ea9d7d2cda5c5..ca73dfda7713f4bd3a88c5036e42eff77ae85d16 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/DragonFireball.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/DragonFireball.java
@@ -81,4 +81,11 @@ public class DragonFireball extends AbstractHurtingProjectile {
     protected boolean shouldBurn() {
         return false;
     }
+
+    // Purpur start
+    @Override
+    protected int getPurpurDespawnRate() {
+        return this.level.purpurConfig().gameplayMechanics.projectDespawnRates.dragonFireball;
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/world/entity/projectile/FireworkRocketEntity.java b/src/main/java/net/minecraft/world/entity/projectile/FireworkRocketEntity.java
index 5406925cd66f46ab8744123c670d72cea7bfc3a1..76e481906490ee7d7fa114566b77836af5a4f783 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/FireworkRocketEntity.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/FireworkRocketEntity.java
@@ -358,4 +358,11 @@ public class FireworkRocketEntity extends Projectile implements ItemSupplier {
     public boolean isAttackable() {
         return false;
     }
+
+    // Purpur start
+    @Override
+    protected int getPurpurDespawnRate() {
+        return this.level.purpurConfig().gameplayMechanics.projectDespawnRates.firework;
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/world/entity/projectile/FishingHook.java b/src/main/java/net/minecraft/world/entity/projectile/FishingHook.java
index f5886a88fd98ede5e85a91eccccb05ac33eb40e2..d63eaefe401eb71fb0c7e69aaca7ab453db213be 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/FishingHook.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/FishingHook.java
@@ -661,4 +661,11 @@ public class FishingHook extends Projectile {
 
         private OpenWaterType() {}
     }
+
+    // Purpur start
+    @Override
+    protected int getPurpurDespawnRate() {
+        return this.level.purpurConfig().gameplayMechanics.projectDespawnRates.fishingHook;
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/world/entity/projectile/LargeFireball.java b/src/main/java/net/minecraft/world/entity/projectile/LargeFireball.java
index 5237b699e000b4fed99be39b0a7e2daab9c8bf42..031616d246fd9642f6f484c0ff1e02ee5ed4810b 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/LargeFireball.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/LargeFireball.java
@@ -77,4 +77,11 @@ public class LargeFireball extends Fireball {
         }
 
     }
+
+    // Purpur start
+    @Override
+    protected int getPurpurDespawnRate() {
+        return this.level.purpurConfig().gameplayMechanics.projectDespawnRates.largeFireball;
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/world/entity/projectile/LlamaSpit.java b/src/main/java/net/minecraft/world/entity/projectile/LlamaSpit.java
index 1a945a32c3d3705a318ebca72a365931a8c001b7..1a75d3a4eb02f727a02da5197872a094238921c2 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/LlamaSpit.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/LlamaSpit.java
@@ -100,4 +100,11 @@ public class LlamaSpit extends Projectile {
 
         this.setDeltaMovement(d0, d1, d2);
     }
+
+    // Purpur start
+    @Override
+    protected int getPurpurDespawnRate() {
+        return this.level.purpurConfig().gameplayMechanics.projectDespawnRates.llamaSpit;
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/world/entity/projectile/Projectile.java b/src/main/java/net/minecraft/world/entity/projectile/Projectile.java
index 66c3f374a779cd3a4548393ba23e9219f1caf6d3..a9b958b5630944f0512e113b65c223419abd47f3 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/Projectile.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/Projectile.java
@@ -33,6 +33,7 @@ public abstract class Projectile extends Entity {
     public Entity cachedOwner;
     private boolean leftOwner;
     private boolean hasBeenShot;
+    public int life; // Purpur - moved from AbstractArrow
 
     // CraftBukkit start
     protected boolean hitCancelled = false;
@@ -42,6 +43,23 @@ public abstract class Projectile extends Entity {
         super(type, world);
     }
 
+    // Purpur start
+    protected final void tickDespawnCounter() {
+        if (this.getPurpurDespawnRate() != -1) {
+            ++this.life;
+            if (this.life >= this.getPurpurDespawnRate()) {
+                this.discard();
+            }
+        }
+    }
+
+    protected abstract int getPurpurDespawnRate();
+
+    protected boolean shouldAlwaysTickDespawn() {
+        return true;
+    };
+    // Purpur end
+
     public void setOwner(@Nullable Entity entity) {
         if (entity != null) {
             this.ownerUUID = entity.getUUID();
@@ -118,6 +136,8 @@ public abstract class Projectile extends Entity {
             this.leftOwner = this.checkLeftOwner();
         }
 
+        if (this.shouldAlwaysTickDespawn()) tickDespawnCounter(); // Purpur
+
         super.tick();
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/projectile/ShulkerBullet.java b/src/main/java/net/minecraft/world/entity/projectile/ShulkerBullet.java
index 0e66418720ca833e676295edc7e28473ce9d9f23..d5baa9c0abf90fbc39af13acf35a7e8cb1318986 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/ShulkerBullet.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/ShulkerBullet.java
@@ -62,6 +62,13 @@ public class ShulkerBullet extends Projectile {
         projectileSource = (org.bukkit.entity.LivingEntity) owner.getBukkitEntity(); // CraftBukkit
     }
 
+    // Purpur start
+    @Override
+    protected int getPurpurDespawnRate() {
+        return this.level.purpurConfig().gameplayMechanics.projectDespawnRates.shulkerBullet;
+    }
+    // Purpur end
+
     // CraftBukkit start
     public Entity getTarget() {
         return this.finalTarget;
diff --git a/src/main/java/net/minecraft/world/entity/projectile/SmallFireball.java b/src/main/java/net/minecraft/world/entity/projectile/SmallFireball.java
index 00ac1cdc4734cc57f15433c5c6e7a3a545739d33..a6fc0478a83ff74bf2ee4962b1e1760352a0fa66 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/SmallFireball.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/SmallFireball.java
@@ -93,4 +93,11 @@ public class SmallFireball extends Fireball {
     public boolean hurt(DamageSource source, float amount) {
         return false;
     }
+
+    // Purpur start
+    @Override
+    protected int getPurpurDespawnRate() {
+        return this.level.purpurConfig().gameplayMechanics.projectDespawnRates.smallFireball;
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/world/entity/projectile/Snowball.java b/src/main/java/net/minecraft/world/entity/projectile/Snowball.java
index a725851060f13e734dbd2fbf8c83c9e1af57a8b7..516f84a915027f63bc42f3ea0e6d8010a73091f5 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/Snowball.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/Snowball.java
@@ -67,4 +67,11 @@ public class Snowball extends ThrowableItemProjectile {
         }
 
     }
+
+    // Purpur start
+    @Override
+    protected int getPurpurDespawnRate() {
+        return this.level.purpurConfig().gameplayMechanics.projectDespawnRates.snowball;
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/world/entity/projectile/ThrownEgg.java b/src/main/java/net/minecraft/world/entity/projectile/ThrownEgg.java
index 77941e3981e49cf5662b3e3c86a9c419080b17c8..8c6243aab556c993b43ab52e216bcb0a70d1a686 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/ThrownEgg.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/ThrownEgg.java
@@ -107,4 +107,11 @@ public class ThrownEgg extends ThrowableItemProjectile {
     protected Item getDefaultItem() {
         return Items.EGG;
     }
+
+    // Purpur start
+    @Override
+    protected int getPurpurDespawnRate() {
+        return this.level.purpurConfig.eggDespawnRate;
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/world/entity/projectile/ThrownEnderpearl.java b/src/main/java/net/minecraft/world/entity/projectile/ThrownEnderpearl.java
index 23f77dfc6df93ef6a70e14a7e410263d39fae2cb..61a16e82aaea102a721e1775506a8982eb7a58e5 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/ThrownEnderpearl.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/ThrownEnderpearl.java
@@ -121,4 +121,11 @@ public class ThrownEnderpearl extends ThrowableItemProjectile {
 
         return super.changeDimension(destination);
     }
+
+    // Purpur start
+    @Override
+    protected int getPurpurDespawnRate() {
+        return this.level.purpurConfig().gameplayMechanics.projectDespawnRates.enderPearl;
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/world/entity/projectile/ThrownExperienceBottle.java b/src/main/java/net/minecraft/world/entity/projectile/ThrownExperienceBottle.java
index dcbbff3a8dfcac869f07025e0e8e3d9c47956093..10f59ade3cb23bb0c43ed1794d506ab036a450b7 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/ThrownExperienceBottle.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/ThrownExperienceBottle.java
@@ -56,4 +56,11 @@ public class ThrownExperienceBottle extends ThrowableItemProjectile {
         }
 
     }
+
+    // Purpur start
+    @Override
+    protected int getPurpurDespawnRate() {
+        return this.level.purpurConfig().gameplayMechanics.projectDespawnRates.expBottle;
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/world/entity/projectile/ThrownPotion.java b/src/main/java/net/minecraft/world/entity/projectile/ThrownPotion.java
index fee09e6ff72cf1da389d5811dd005642cd50a5b4..0d10a47b7c6715cfeaa54d3b591027b62be3bd25 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/ThrownPotion.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/ThrownPotion.java
@@ -305,4 +305,11 @@ public class ThrownPotion extends ThrowableItemProjectile implements ItemSupplie
         }
 
     }
+
+    // Purpur start
+    @Override
+    protected int getPurpurDespawnRate() {
+        return this.level.purpurConfig().gameplayMechanics.projectDespawnRates.potion;
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/world/entity/projectile/WitherSkull.java b/src/main/java/net/minecraft/world/entity/projectile/WitherSkull.java
index 2867e841e73a3edfdeb83af9d96e0d0cd4116a68..b14643286567381fdfbf2c442c84cf291228ea56 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/WitherSkull.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/WitherSkull.java
@@ -136,4 +136,11 @@ public class WitherSkull extends AbstractHurtingProjectile {
     protected boolean shouldBurn() {
         return false;
     }
+
+    // Purpur start
+    @Override
+    protected int getPurpurDespawnRate() {
+        return this.level.purpurConfig().gameplayMechanics.projectDespawnRates.witherSkull;
+    }
+    // Purpur end
 }
diff --git a/src/main/java/org/purpurmc/purpur/configuration/PurpurWorldConfiguration.java b/src/main/java/org/purpurmc/purpur/configuration/PurpurWorldConfiguration.java
index 4c4c8d59feb88e2df334fc7b32ab85a31b71bce7..0342990756a84b8d951f172f8dd3612ea6c2a6eb 100644
--- a/src/main/java/org/purpurmc/purpur/configuration/PurpurWorldConfiguration.java
+++ b/src/main/java/org/purpurmc/purpur/configuration/PurpurWorldConfiguration.java
@@ -1454,6 +1454,23 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 return BooleanUtils.toBoolean(configValue.toLowerCase(Locale.ROOT));
             }
         }
+
+        public ProjectDespawnRates projectDespawnRates;
+        public class ProjectDespawnRates extends ConfigurationPart {
+            public int dragonFireball = -1;
+            public int egg = -1;
+            public int enderPearl = -1;
+            public int expBottle = -1;
+            public int firework = -1;
+            public int fishingHook = -1;
+            public int largeFireball = -1;
+            public int llamaSpit = -1;
+            public int potion = -1;
+            public int shulkerBullet = -1;
+            public int smallFireball = -1;
+            public int snowball = -1;
+            public int witherSkull = -1;
+        }
     }
 
     public Blocks blocks;
