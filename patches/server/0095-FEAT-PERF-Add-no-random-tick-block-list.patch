From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: William Blake Galbreath <Blake.Galbreath@GMail.com>
Date: Fri, 7 Aug 2020 12:53:36 -0500
Subject: [PATCH] |FEAT| |PERF| Add no-random-tick block list


diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index 32c725eb4819b28279f7cc4db30b5f711967a799..d39c35710461dcd8918f63cf12a2c9b7403d9749 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -482,7 +482,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
         this.players = Lists.newArrayList();
         this.entityTickList = new EntityTickList();
         Predicate<Block> predicate = (block) -> { // CraftBukkit - decompile eror
-            return block == null || block.defaultBlockState().isAir();
+            return block == null || block.defaultBlockState().isAir() || purpurConfig.noRandomTickBlocks.contains(block); // Purpur
         };
         DefaultedRegistry registryblocks = Registry.BLOCK;
 
diff --git a/src/main/java/net/minecraft/world/level/block/state/BlockBehaviour.java b/src/main/java/net/minecraft/world/level/block/state/BlockBehaviour.java
index 3d677fe25ed015e30634bf2fccde29f332e3dd87..e1aba175a74e73db0a8a11e8d2df35c45adfd3fa 100644
--- a/src/main/java/net/minecraft/world/level/block/state/BlockBehaviour.java
+++ b/src/main/java/net/minecraft/world/level/block/state/BlockBehaviour.java
@@ -914,10 +914,12 @@ public abstract class BlockBehaviour {
         }
 
         public void tick(ServerLevel world, BlockPos pos, Random random) {
+            if (world.purpurConfig.noRandomTickBlocks.contains(getBlock())) return; // Purpur
             this.getBlock().tick(this.asState(), world, pos, random);
         }
 
         public void randomTick(ServerLevel world, BlockPos pos, Random random) {
+            if (world.purpurConfig.noRandomTickBlocks.contains(getBlock())) return; // Purpur
             this.getBlock().randomTick(this.asState(), world, pos, random);
         }
 
diff --git a/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java b/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
index a5d97a8f2f1c28cbd10ce0e8dbb54404566c8ea1..0ec33bc04f5c08142309c43e05872b4149c8ad95 100644
--- a/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
+++ b/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
@@ -301,6 +301,28 @@ public class PurpurWorldConfig {
         voidDamageDealt = getDouble("gameplay-mechanics.void-damage-dealt", voidDamageDealt);
     }
 
+    public Set<Block> noRandomTickBlocks = new HashSet<>();
+    private void noRandomTickBlocks() {
+        if (PurpurConfig.version < 11) {
+            List<String> oldList = PurpurConfig.config.getStringList("world-settings." + worldName + ".blocks.no-tick");
+            if (!oldList.isEmpty()) {
+                PurpurConfig.config.set("world-settings." + worldName + ".blocks.no-random-tick", oldList);
+                PurpurConfig.config.set("world-settings." + worldName + ".blocks.no-tick", null);
+            }
+            oldList = PurpurConfig.config.getStringList("world-settings.default.blocks.no-tick");
+            if (!oldList.isEmpty()) {
+                PurpurConfig.config.set("world-settings.default.blocks.no-random-tick", oldList);
+                PurpurConfig.config.set("world-settings.default.blocks.no-tick", null);
+            }
+        }
+        getList("blocks.no-random-tick", new ArrayList<>()).forEach(key -> {
+            Block block = Registry.BLOCK.get(new ResourceLocation(key.toString()));
+            if (!block.defaultBlockState().isAir()) {
+                noRandomTickBlocks.add(block);
+            }
+        });
+    }
+
     public boolean anvilAllowColors = false;
     private void anvilSettings() {
         anvilAllowColors = getBoolean("blocks.anvil.allow-colors", anvilAllowColors);
