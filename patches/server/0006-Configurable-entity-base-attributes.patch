From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: William Blake Galbreath <Blake.Galbreath@GMail.com>
Date: Thu, 10 Dec 2020 16:44:54 -0600
Subject: [PATCH] Configurable entity base attributes


diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index a964f9a09b9b9d16c72691ee4d7924e0a25b7876..f58ad1b263af2ab9d829cd93056352e2ef9254e4 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -155,7 +155,7 @@ import org.bukkit.plugin.PluginManager;
 // CraftBukkit end
 
 public abstract class Entity implements Nameable, EntityAccess, CommandSource {
-
+    protected static javax.script.ScriptEngine scriptEngine = new javax.script.ScriptEngineManager().getEngineByName("rhino"); // Purpur
     // CraftBukkit start
     private static final int CURRENT_LEVEL = 2;
     public boolean preserveMotion = true; // Paper - keep initial motion on first setPositionRotation
diff --git a/src/main/java/net/minecraft/world/entity/GlowSquid.java b/src/main/java/net/minecraft/world/entity/GlowSquid.java
index 8d4ffbae2a95513cb1dff32012443ab9bb441792..4d802c909a38ba764334890b1212b16dd60b7d93 100644
--- a/src/main/java/net/minecraft/world/entity/GlowSquid.java
+++ b/src/main/java/net/minecraft/world/entity/GlowSquid.java
@@ -38,6 +38,11 @@ public class GlowSquid extends Squid {
     public boolean isControllable() {
         return level.purpurConfig().mobs.glowSquid.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.glowSquid.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index 577e7737d234e89a8a0a16bd00b4f2757f8443f8..402bd611231d4547a469a70429f006a84546a0eb 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -289,6 +289,7 @@ public abstract class LivingEntity extends Entity {
         this.useItem = ItemStack.EMPTY;
         this.lastClimbablePos = Optional.empty();
         this.attributes = new AttributeMap(DefaultAttributes.getSupplier(type), this); // Purpur
+        this.initAttributes(); // Purpur
         this.craftAttributes = new CraftAttributeMap(this.attributes); // CraftBukkit
         // CraftBukkit - setHealth(getMaxHealth()) inlined and simplified to skip the instanceof check for EntityPlayer, as getBukkitEntity() is not initialized in constructor
         this.entityData.set(LivingEntity.DATA_HEALTH_ID, (float) this.getAttribute(Attributes.MAX_HEALTH).getValue());
@@ -304,6 +305,8 @@ public abstract class LivingEntity extends Entity {
         this.brain = this.makeBrain(new Dynamic(dynamicopsnbt, (Tag) dynamicopsnbt.createMap((Map) ImmutableMap.of(dynamicopsnbt.createString("memories"), (Tag) dynamicopsnbt.emptyMap()))));
     }
 
+    protected void initAttributes() {}// Purpur
+
     public Brain<?> getBrain() {
         return this.brain;
     }
diff --git a/src/main/java/net/minecraft/world/entity/ambient/Bat.java b/src/main/java/net/minecraft/world/entity/ambient/Bat.java
index dc0b4ae7fe2b7bfd54d2b88d383d82009d9ef9bb..2a80bf6c6b6d0c8161a56e0a551a8a628198a9d1 100644
--- a/src/main/java/net/minecraft/world/entity/ambient/Bat.java
+++ b/src/main/java/net/minecraft/world/entity/ambient/Bat.java
@@ -90,6 +90,18 @@ public class Bat extends AmbientCreature {
             setDeltaMovement(mot.scale(0.9D));
         }
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.bat.attributes.maxHealth);
+        this.getAttribute(Attributes.FOLLOW_RANGE).setBaseValue(this.level.purpurConfig().mobs.bat.attributes.followRange);
+        this.getAttribute(Attributes.KNOCKBACK_RESISTANCE).setBaseValue(this.level.purpurConfig().mobs.bat.attributes.knockbackResistance);
+        this.getAttribute(Attributes.MOVEMENT_SPEED).setBaseValue(this.level.purpurConfig().mobs.bat.attributes.movementSpeed);
+        this.getAttribute(Attributes.FLYING_SPEED).setBaseValue(this.level.purpurConfig().mobs.bat.attributes.flyingSpeed);
+        this.getAttribute(Attributes.ARMOR).setBaseValue(this.level.purpurConfig().mobs.bat.attributes.armor);
+        this.getAttribute(Attributes.ARMOR_TOUGHNESS).setBaseValue(this.level.purpurConfig().mobs.bat.attributes.armorToughness);
+        this.getAttribute(Attributes.ATTACK_KNOCKBACK).setBaseValue(this.level.purpurConfig().mobs.bat.attributes.attackKnockback);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/Bee.java b/src/main/java/net/minecraft/world/entity/animal/Bee.java
index d42242c0c518fd86d7b824af75489fca709158b3..6654f883e578561060e2841052d9bbaf4b62f394 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Bee.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Bee.java
@@ -214,6 +214,11 @@ public class Bee extends Animal implements NeutralMob, FlyingAnimal {
             setDeltaMovement(mot.scale(0.9D));
         }
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.bee.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/Cat.java b/src/main/java/net/minecraft/world/entity/animal/Cat.java
index 34f11156122f07b627db1ae413ab6455cae9dbc6..188a65bb749c236f97ff097f4348c07245453491 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Cat.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Cat.java
@@ -118,6 +118,11 @@ public class Cat extends TamableAnimal {
         setLying(false);
         setRelaxStateOne(false);
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.cat.attributes.maxHealth);
+    }
     // Purpur end
 
     public ResourceLocation getResourceLocation() {
diff --git a/src/main/java/net/minecraft/world/entity/animal/Chicken.java b/src/main/java/net/minecraft/world/entity/animal/Chicken.java
index 619636e52672298c84bded1bdd0a74c1dd6a25e1..19b8c6f152ec16936455987d8f8075713e287b29 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Chicken.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Chicken.java
@@ -68,6 +68,11 @@ public class Chicken extends Animal {
     public boolean isControllable() {
         return level.purpurConfig().mobs.chicken.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.chicken.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/Cod.java b/src/main/java/net/minecraft/world/entity/animal/Cod.java
index 5242fb15081b553da95b977cfab8d15d905374c8..0a9078163689d8563ef4211e4040aa3ea4a12c53 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Cod.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Cod.java
@@ -28,6 +28,11 @@ public class Cod extends AbstractSchoolingFish {
     public boolean isControllable() {
         return level.purpurConfig().mobs.cod.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.cod.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/Cow.java b/src/main/java/net/minecraft/world/entity/animal/Cow.java
index 020659378a9b3b70dc7418126667a64b7587d28f..aa903e1e7dfb335316b1782fa37cd5e0fc27dec8 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Cow.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Cow.java
@@ -55,6 +55,11 @@ public class Cow extends Animal {
     public boolean isControllable() {
         return level.purpurConfig().mobs.cow.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.cow.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/Dolphin.java b/src/main/java/net/minecraft/world/entity/animal/Dolphin.java
index 83f4cdb8ee804bf201d83c89a132d2f9e0e4b01f..b5316662dbd113e96502609b1d780907be28f326 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Dolphin.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Dolphin.java
@@ -157,6 +157,11 @@ public class Dolphin extends WaterAnimal {
         }
         return false;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.dolphin.attributes.maxHealth);
+    }
     // Purpur end
 
     @Nullable
diff --git a/src/main/java/net/minecraft/world/entity/animal/Fox.java b/src/main/java/net/minecraft/world/entity/animal/Fox.java
index b8ef9dc42c17e93b4a3527dda6ddcba884721d33..e1ef891ada15beb2b7b8adb6d415fbebbbc1f7f9 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Fox.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Fox.java
@@ -176,6 +176,11 @@ public class Fox extends Animal {
         super.onDismount(rider);
         setCanPickUpLoot(true);
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.fox.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/IronGolem.java b/src/main/java/net/minecraft/world/entity/animal/IronGolem.java
index dbcf559d61585d64bd9e85216d8895eafa35c198..e07f9ce0343e439b88c8e85069359ae8df8e9672 100644
--- a/src/main/java/net/minecraft/world/entity/animal/IronGolem.java
+++ b/src/main/java/net/minecraft/world/entity/animal/IronGolem.java
@@ -84,6 +84,11 @@ public class IronGolem extends AbstractGolem implements NeutralMob {
     public boolean isControllable() {
         return level.purpurConfig().mobs.ironGolem.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.ironGolem.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/MushroomCow.java b/src/main/java/net/minecraft/world/entity/animal/MushroomCow.java
index 812a3266b6e3beeedbe219a789f6cb5cc8f003f3..5f854125accaba485623b970c49bcaa295d3981a 100644
--- a/src/main/java/net/minecraft/world/entity/animal/MushroomCow.java
+++ b/src/main/java/net/minecraft/world/entity/animal/MushroomCow.java
@@ -79,6 +79,11 @@ public class MushroomCow extends Cow implements Shearable {
     public boolean isControllable() {
         return level.purpurConfig().mobs.mooshroom.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.mooshroom.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/Ocelot.java b/src/main/java/net/minecraft/world/entity/animal/Ocelot.java
index 3a02b7f434f5f11f6f2e0a83fabccb59200805bd..ec435c37a2a353b53102e7520c0a5ee92caccc62 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Ocelot.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Ocelot.java
@@ -83,6 +83,11 @@ public class Ocelot extends Animal {
     public boolean isControllable() {
         return level.purpurConfig().mobs.ocelot.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.ocelot.attributes.maxHealth);
+    }
     // Purpur end
 
     public boolean isTrusting() {
diff --git a/src/main/java/net/minecraft/world/entity/animal/Panda.java b/src/main/java/net/minecraft/world/entity/animal/Panda.java
index 2116dcea7544a9bb452f7769e4da7e14b475c858..c97b3da80ad51e1937e4615435db1559823ff542 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Panda.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Panda.java
@@ -131,6 +131,12 @@ public class Panda extends Animal {
         eat(false);
         setOnBack(false);
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.panda.attributes.maxHealth);
+        setAttributes();
+    }
     // Purpur end
 
     @Override
@@ -628,7 +634,10 @@ public class Panda extends Animal {
 
     public void setAttributes() {
         if (this.isWeak()) {
-            this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(10.0D);
+            // Purpur start
+            net.minecraft.world.entity.ai.attributes.AttributeInstance maxHealth = this.getAttribute(Attributes.MAX_HEALTH);
+            maxHealth.setBaseValue(maxHealth.getValue() / 2);
+            // Purpur end
         }
 
         if (this.isLazy()) {
diff --git a/src/main/java/net/minecraft/world/entity/animal/Parrot.java b/src/main/java/net/minecraft/world/entity/animal/Parrot.java
index 1e6f76edfe1c60cffb074c6ee2557115e8ec8f85..c24efae0060aabb1187d82968089a362a55358bf 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Parrot.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Parrot.java
@@ -185,6 +185,11 @@ public class Parrot extends ShoulderRidingEntity implements FlyingAnimal {
             setDeltaMovement(mot.scale(0.9D));
         }
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.parrot.attributes.maxHealth);
+    }
     // Purpur end
 
     @Nullable
diff --git a/src/main/java/net/minecraft/world/entity/animal/Pig.java b/src/main/java/net/minecraft/world/entity/animal/Pig.java
index 42a33643e6b1cf9fe9dabcfc605ceb16667b1263..41b49bad16e20bde682a9a774269726792f99b4e 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Pig.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Pig.java
@@ -79,6 +79,11 @@ public class Pig extends Animal implements ItemSteerable, Saddleable {
     public boolean isControllable() {
         return level.purpurConfig().mobs.pig.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.pig.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/PolarBear.java b/src/main/java/net/minecraft/world/entity/animal/PolarBear.java
index 74697c8c2b3f54434be2ecf5256c9311d872102e..58b00fdf921d57ec35cd48f1b5c8c9755e6bf028 100644
--- a/src/main/java/net/minecraft/world/entity/animal/PolarBear.java
+++ b/src/main/java/net/minecraft/world/entity/animal/PolarBear.java
@@ -92,6 +92,11 @@ public class PolarBear extends Animal implements NeutralMob {
         }
         return false;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.polarBear.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/Pufferfish.java b/src/main/java/net/minecraft/world/entity/animal/Pufferfish.java
index 1c90d50391a3dc59634c1b8538d385ac03337f5c..84249303d83d58ad0def608f1295d9e0cb89d778 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Pufferfish.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Pufferfish.java
@@ -60,6 +60,11 @@ public class Pufferfish extends AbstractFish {
     public boolean isControllable() {
         return level.purpurConfig().mobs.pufferfish.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.pufferfish.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/Rabbit.java b/src/main/java/net/minecraft/world/entity/animal/Rabbit.java
index e4eb7389978b434e513f0a3874e945fe66ee923e..877a599192361b2b7e60d0c0e755100466886d33 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Rabbit.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Rabbit.java
@@ -137,6 +137,11 @@ public class Rabbit extends Animal {
         }
         wasOnGround = onGround;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.rabbit.attributes.maxHealth);
+    }
     // Purpur end
 
     // CraftBukkit start - code from constructor
diff --git a/src/main/java/net/minecraft/world/entity/animal/Salmon.java b/src/main/java/net/minecraft/world/entity/animal/Salmon.java
index 50188ba00ed54f0327f6c68c1f2ca4d3fae1012d..63f2d7b0a88d7bb7e52f9f76e1095ab05114dd84 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Salmon.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Salmon.java
@@ -28,6 +28,11 @@ public class Salmon extends AbstractSchoolingFish {
     public boolean isControllable() {
         return level.purpurConfig().mobs.salmon.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.salmon.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/Sheep.java b/src/main/java/net/minecraft/world/entity/animal/Sheep.java
index 76a1bece14204bb09afae5e0f5699a7f65ee8559..d577bba65287bb0cd20a36f3bbb846fa561e2259 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Sheep.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Sheep.java
@@ -131,6 +131,11 @@ public class Sheep extends Animal implements Shearable {
     public boolean isControllable() {
         return level.purpurConfig().mobs.sheep.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.sheep.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java b/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java
index 243252251b027294d6b210dfc19c958adf82bbff..79dda33b74aac6e397c61395a39c3b544b65a3b6 100644
--- a/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java
+++ b/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java
@@ -69,6 +69,11 @@ public class SnowGolem extends AbstractGolem implements Shearable, RangedAttackM
     public boolean isControllable() {
         return level.purpurConfig().mobs.snowGolem.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig.snowGolemMaxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/Squid.java b/src/main/java/net/minecraft/world/entity/animal/Squid.java
index c4e9b3425d5ac4468493d3c014a792fe220f294b..5d056015ec7fa5914f46f86141b02ff581dda3f2 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Squid.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Squid.java
@@ -75,6 +75,11 @@ public class Squid extends WaterAnimal {
         vector.setX(cos * x - sine * z);
         vector.setZ(sine * x + cos * z);
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.squid.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/TropicalFish.java b/src/main/java/net/minecraft/world/entity/animal/TropicalFish.java
index eb3d33634548b68fbdc9e74a809157393c85957e..3dfe62d075ad91a1f0982ca2b769a0e8744bc54d 100644
--- a/src/main/java/net/minecraft/world/entity/animal/TropicalFish.java
+++ b/src/main/java/net/minecraft/world/entity/animal/TropicalFish.java
@@ -64,6 +64,11 @@ public class TropicalFish extends AbstractSchoolingFish {
     public boolean isControllable() {
         return level.purpurConfig().mobs.tropicalFish.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.tropicalFish.attributes.maxHealth);
+    }
     // Purpur end
 
     public static String getPredefinedName(int variant) {
diff --git a/src/main/java/net/minecraft/world/entity/animal/Turtle.java b/src/main/java/net/minecraft/world/entity/animal/Turtle.java
index 70770563e356eeaefcb99be61f6de207afec6d77..35772b9d8faa45ec01c0d4de3eec5ded6c7a46ff 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Turtle.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Turtle.java
@@ -97,6 +97,11 @@ public class Turtle extends Animal {
     public boolean isControllable() {
         return level.purpurConfig().mobs.turtle.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.turtle.attributes.maxHealth);
+    }
     // Purpur end
 
     public void setHomePos(BlockPos pos) {
diff --git a/src/main/java/net/minecraft/world/entity/animal/Wolf.java b/src/main/java/net/minecraft/world/entity/animal/Wolf.java
index 35c13317f6dc81fcd37ec873fee45e9c52bcfd79..ea5d0f850d2b26fc25e5593abc4240911aecfef9 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Wolf.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Wolf.java
@@ -122,6 +122,11 @@ public class Wolf extends TamableAnimal implements NeutralMob {
         super.onMount(rider);
         setInSittingPose(false);
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.wolf.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/axolotl/Axolotl.java b/src/main/java/net/minecraft/world/entity/animal/axolotl/Axolotl.java
index e2c66cd977eeef04f7bde3b1623af959d0ef7581..f465080d3df4bd1b1ab90c5930d5ec88b13471ad 100644
--- a/src/main/java/net/minecraft/world/entity/animal/axolotl/Axolotl.java
+++ b/src/main/java/net/minecraft/world/entity/animal/axolotl/Axolotl.java
@@ -117,6 +117,11 @@ public class Axolotl extends Animal implements LerpingModel, Bucketable {
     protected void registerGoals() {
         this.goalSelector.addGoal(0, new org.purpurmc.purpur.entity.ai.HasRider(this)); // Purpur
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.axolotl.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/goat/Goat.java b/src/main/java/net/minecraft/world/entity/animal/goat/Goat.java
index 9624689726be1e8d8927270cec1919155f474060..32f0c117bdac8aa319e3a8844cdd90e1d8324fe8 100644
--- a/src/main/java/net/minecraft/world/entity/animal/goat/Goat.java
+++ b/src/main/java/net/minecraft/world/entity/animal/goat/Goat.java
@@ -104,6 +104,11 @@ public class Goat extends Animal {
     public boolean isControllable() {
         return level.purpurConfig().mobs.goat.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.goat.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/AbstractHorse.java b/src/main/java/net/minecraft/world/entity/animal/horse/AbstractHorse.java
index f4190b1e1f9b4d2af04c15c472001f7f943a3cd3..075c668b6855dd44102bf521864133565fcf16db 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/AbstractHorse.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/AbstractHorse.java
@@ -127,6 +127,32 @@ public abstract class AbstractHorse extends Animal implements ContainerListener,
     public boolean isRidable() {
         return false; // vanilla handles
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.generateRandomMaxHealth(this.random));
+        this.getAttribute(Attributes.MOVEMENT_SPEED).setBaseValue(this.generateRandomSpeed(this.random));
+        this.getAttribute(Attributes.JUMP_STRENGTH).setBaseValue(this.generateRandomJumpStrength(this.random));
+    }
+
+    protected double generateRandomMaxHealth(double min, double max) {
+        if (min == max) return min;
+        int diff = Mth.floor(max - min);
+        double base = max - diff;
+        int first = Mth.floor((double) diff / 2);
+        int rest = diff - first;
+        return base + random.nextInt(first + 1) + random.nextInt(rest + 1);
+    }
+
+    protected double generateRandomJumpStrength(double min, double max) {
+        if (min == max) return min;
+        return min + (max - min) * this.random.nextDouble();
+    }
+
+    protected double generateRandomSpeed(double min, double max) {
+        if (min == max) return min;
+        return min + (max - min) * this.random.nextDouble();
+    }
     // Purpur end
 
     @Override
@@ -1157,7 +1183,7 @@ public abstract class AbstractHorse extends Animal implements ContainerListener,
             entityData = new AgeableMob.AgeableMobGroupData(0.2F);
         }
 
-        this.randomizeAttributes(world.getRandom());
+        // this.randomizeAttributes(world.getRandom()); // Purpur - replaced by initAttributes()
         return super.finalizeSpawn(world, difficulty, spawnReason, (SpawnGroupData) entityData, entityNbt);
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/Donkey.java b/src/main/java/net/minecraft/world/entity/animal/horse/Donkey.java
index 800a181d10c423f0ee2456bd33fc52e69fb738ee..e9e930be31694d0cad7610475e6522b94143b00e 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/Donkey.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/Donkey.java
@@ -20,6 +20,21 @@ public class Donkey extends AbstractChestedHorse {
     public boolean rideableUnderWater() {
         return level.purpurConfig().mobs.donkey.ridable.inWater;
     }
+
+    @Override
+    public float generateRandomMaxHealth(net.minecraft.util.RandomSource random) {
+        return (float) generateRandomMaxHealth(this.level.purpurConfig().mobs.donkey.attributes.maxHealthMin, this.level.purpurConfig().mobs.donkey.attributes.maxHealthMax);
+    }
+
+    @Override
+    public double generateRandomJumpStrength(net.minecraft.util.RandomSource random) {
+        return generateRandomJumpStrength(this.level.purpurConfig().mobs.donkey.attributes.jumpStrengthMin, this.level.purpurConfig().mobs.donkey.attributes.jumpStrengthMax);
+    }
+
+    @Override
+    public double generateRandomSpeed(net.minecraft.util.RandomSource random) {
+        return generateRandomSpeed(this.level.purpurConfig().mobs.donkey.attributes.movementSpeedMin, this.level.purpurConfig().mobs.donkey.attributes.movementSpeedMax);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/Horse.java b/src/main/java/net/minecraft/world/entity/animal/horse/Horse.java
index b28502d2dd132c865befebe1a02bc86fa4758f11..2ac10933dc74d382ee897ac1446c1e2f63e92d10 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/Horse.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/Horse.java
@@ -45,6 +45,21 @@ public class Horse extends AbstractHorse {
     public boolean rideableUnderWater() {
         return level.purpurConfig().mobs.horse.ridable.inWater;
     }
+
+    @Override
+    public float generateRandomMaxHealth(RandomSource random) {
+        return (float) generateRandomMaxHealth(this.level.purpurConfig().mobs.horse.attributes.maxHealthMin, this.level.purpurConfig().mobs.horse.attributes.maxHealthMax);
+    }
+
+    @Override
+    public double generateRandomJumpStrength(RandomSource random) {
+        return generateRandomJumpStrength(this.level.purpurConfig().mobs.horse.attributes.jumpStrengthMin, this.level.purpurConfig().mobs.horse.attributes.jumpStrengthMax);
+    }
+
+    @Override
+    public double generateRandomSpeed(RandomSource random) {
+        return generateRandomSpeed(this.level.purpurConfig().mobs.horse.attributes.movementSpeedMin, this.level.purpurConfig().mobs.horse.attributes.movementSpeedMax);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/Llama.java b/src/main/java/net/minecraft/world/entity/animal/horse/Llama.java
index 181dd6c9005db691f1dd802196db94c44372093b..1a4fe3e13abb691b41ea00fbe64adb776a9c65b3 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/Llama.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/Llama.java
@@ -115,6 +115,21 @@ public class Llama extends AbstractChestedHorse implements RangedAttackMob {
     public boolean isSaddled() {
         return super.isSaddled() || (isTamed() && getSwag() != null);
     }
+
+    @Override
+    public float generateRandomMaxHealth(RandomSource random) {
+        return (float) generateRandomMaxHealth(this.level.purpurConfig().mobs.llama.attributes.maxHealthMin, this.level.purpurConfig().mobs.llama.attributes.maxHealthMax);
+    }
+
+    @Override
+    public double generateRandomJumpStrength(RandomSource random) {
+        return generateRandomJumpStrength(this.level.purpurConfig().mobs.llama.attributes.jumpStrengthMin, this.level.purpurConfig().mobs.llama.attributes.jumpStrengthMax);
+    }
+
+    @Override
+    public double generateRandomSpeed(RandomSource random) {
+        return generateRandomSpeed(this.level.purpurConfig().mobs.llama.attributes.movementSpeedMin, this.level.purpurConfig().mobs.llama.attributes.movementSpeedMax);
+    }
     // Purpur end
 
     public boolean isTraderLlama() {
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/Mule.java b/src/main/java/net/minecraft/world/entity/animal/horse/Mule.java
index d4a44a445f69a72b5bfa1521aa69a2ee326ed574..662ea10d4b5b4e90877256e497c4934eedf53963 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/Mule.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/Mule.java
@@ -19,6 +19,21 @@ public class Mule extends AbstractChestedHorse {
     public boolean rideableUnderWater() {
         return level.purpurConfig().mobs.mule.ridable.inWater;
     }
+
+    @Override
+    public float generateRandomMaxHealth(net.minecraft.util.RandomSource random) {
+        return (float) generateRandomMaxHealth(this.level.purpurConfig().mobs.mule.attributes.maxHealthMin, this.level.purpurConfig().mobs.mule.attributes.maxHealthMax);
+    }
+
+    @Override
+    public double generateRandomJumpStrength(net.minecraft.util.RandomSource random) {
+        return generateRandomJumpStrength(this.level.purpurConfig().mobs.mule.attributes.jumpStrengthMin, this.level.purpurConfig().mobs.mule.attributes.jumpStrengthMax);
+    }
+
+    @Override
+    public double generateRandomSpeed(net.minecraft.util.RandomSource random) {
+        return generateRandomSpeed(this.level.purpurConfig().mobs.mule.attributes.movementSpeedMin, this.level.purpurConfig().mobs.mule.attributes.movementSpeedMax);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/SkeletonHorse.java b/src/main/java/net/minecraft/world/entity/animal/horse/SkeletonHorse.java
index e619af1ec8df38b1bdd9497db3aaa21a130ec5d1..e15a75c8fae6f5f3d7de33f7bd7a0df1862dea94 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/SkeletonHorse.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/SkeletonHorse.java
@@ -35,6 +35,21 @@ public class SkeletonHorse extends AbstractHorse {
     public boolean isTamed() {
         return true;
     }
+
+    @Override
+    public float generateRandomMaxHealth(RandomSource random) {
+        return (float) generateRandomMaxHealth(this.level.purpurConfig().mobs.skeletonHorse.attributes.maxHealthMin, this.level.purpurConfig().mobs.skeletonHorse.attributes.maxHealthMax);
+    }
+
+    @Override
+    public double generateRandomJumpStrength(RandomSource random) {
+        return generateRandomJumpStrength(this.level.purpurConfig().mobs.skeletonHorse.attributes.jumpStrengthMin, this.level.purpurConfig().mobs.skeletonHorse.attributes.jumpStrengthMax);
+    }
+
+    @Override
+    public double generateRandomSpeed(RandomSource random) {
+        return generateRandomSpeed(this.level.purpurConfig().mobs.skeletonHorse.attributes.movementSpeedMin, this.level.purpurConfig().mobs.skeletonHorse.attributes.movementSpeedMax);
+    }
     // Purpur end
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/TraderLlama.java b/src/main/java/net/minecraft/world/entity/animal/horse/TraderLlama.java
index 4038fa8350780d550169f9c0791043099898ac2d..ec69508421463fede63afc1185365d067c0fa3fa 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/TraderLlama.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/TraderLlama.java
@@ -47,6 +47,21 @@ public class TraderLlama extends Llama {
     public boolean isSaddled() {
         return super.isSaddled() || isTamed();
     }
+
+    @Override
+    public float generateRandomMaxHealth(net.minecraft.util.RandomSource random) {
+        return (float) generateRandomMaxHealth(this.level.purpurConfig().mobs.traderLlama.attributes.maxHealthMin, this.level.purpurConfig().mobs.traderLlama.attributes.maxHealthMax);
+    }
+
+    @Override
+    public double generateRandomJumpStrength(net.minecraft.util.RandomSource random) {
+        return generateRandomJumpStrength(this.level.purpurConfig().mobs.traderLlama.attributes.jumpStrengthMin, this.level.purpurConfig().mobs.traderLlama.attributes.jumpStrengthMax);
+    }
+
+    @Override
+    public double generateRandomSpeed(net.minecraft.util.RandomSource random) {
+        return generateRandomSpeed(this.level.purpurConfig().mobs.traderLlama.attributes.movementSpeedMin, this.level.purpurConfig().mobs.traderLlama.attributes.movementSpeedMax);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/ZombieHorse.java b/src/main/java/net/minecraft/world/entity/animal/horse/ZombieHorse.java
index d47c2c5754290138a092efe882f953dc34e4e28a..da36107aab9219ce9c8f40c3a80e6198e6b9f5a9 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/ZombieHorse.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/ZombieHorse.java
@@ -33,6 +33,21 @@ public class ZombieHorse extends AbstractHorse {
     public boolean isTamed() {
         return true;
     }
+
+    @Override
+    public float generateRandomMaxHealth(RandomSource random) {
+        return (float) generateRandomMaxHealth(this.level.purpurConfig().mobs.zombieHorse.attributes.maxHealthMin, this.level.purpurConfig().mobs.zombieHorse.attributes.maxHealthMax);
+    }
+
+    @Override
+    public double generateRandomJumpStrength(RandomSource random) {
+        return generateRandomJumpStrength(this.level.purpurConfig().mobs.zombieHorse.attributes.jumpStrengthMin, this.level.purpurConfig().mobs.zombieHorse.attributes.jumpStrengthMax);
+    }
+
+    @Override
+    public double generateRandomSpeed(RandomSource random) {
+        return generateRandomSpeed(this.level.purpurConfig().mobs.zombieHorse.attributes.movementSpeedMin, this.level.purpurConfig().mobs.zombieHorse.attributes.movementSpeedMax);
+    }
     // Purpur end
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/boss/enderdragon/EnderDragon.java b/src/main/java/net/minecraft/world/entity/boss/enderdragon/EnderDragon.java
index f98de8052455bbbcbbcd8072e9e39062fa2eb6c8..2959d0ffe44cd9a23726b995579cfd969075019d 100644
--- a/src/main/java/net/minecraft/world/entity/boss/enderdragon/EnderDragon.java
+++ b/src/main/java/net/minecraft/world/entity/boss/enderdragon/EnderDragon.java
@@ -160,6 +160,11 @@ public class EnderDragon extends Mob implements Enemy {
     public double getMaxY() {
         return level.purpurConfig().mobs.enderDragon.ridable.maxY;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.enderDragon.attributes.maxHealth);
+    }
     // Purpur end
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/boss/wither/WitherBoss.java b/src/main/java/net/minecraft/world/entity/boss/wither/WitherBoss.java
index f71030dd8c5b96b78f0b7f9bf1a92207368e3ea3..48aefcf128189e69337192909f00ad6ae7ea67bc 100644
--- a/src/main/java/net/minecraft/world/entity/boss/wither/WitherBoss.java
+++ b/src/main/java/net/minecraft/world/entity/boss/wither/WitherBoss.java
@@ -212,6 +212,11 @@ public class WitherBoss extends Monster implements PowerableMob, RangedAttackMob
         skull.setPosRaw(headX, headY, headZ);
         level.addFreshEntity(skull);
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.wither.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
@@ -416,7 +421,7 @@ public class WitherBoss extends Monster implements PowerableMob, RangedAttackMob
 
             this.setInvulnerableTicks(i);
             if (this.tickCount % 10 == 0) {
-                this.heal(10.0F, EntityRegainHealthEvent.RegainReason.WITHER_SPAWN); // CraftBukkit
+                this.heal(this.getMaxHealth() / 33, EntityRegainHealthEvent.RegainReason.WITHER_SPAWN); // CraftBukkit // Purpur
             }
 
         } else {
diff --git a/src/main/java/net/minecraft/world/entity/monster/Blaze.java b/src/main/java/net/minecraft/world/entity/monster/Blaze.java
index 373abb6d4f536720570c7d0f53f40f01ae65cc9e..0df3709ca489a998aa20061db2d3ed7cbd80f949 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Blaze.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Blaze.java
@@ -72,6 +72,11 @@ public class Blaze extends Monster {
             setDeltaMovement(mot.scale(0.9D));
         }
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.blaze.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/CaveSpider.java b/src/main/java/net/minecraft/world/entity/monster/CaveSpider.java
index fbd9c15eeacc5a47463abb03e37184d0ff40c18e..fd1304c2811885f51dbe44de6a8c073026243e71 100644
--- a/src/main/java/net/minecraft/world/entity/monster/CaveSpider.java
+++ b/src/main/java/net/minecraft/world/entity/monster/CaveSpider.java
@@ -43,6 +43,11 @@ public class CaveSpider extends Spider {
     public boolean isControllable() {
         return level.purpurConfig().mobs.caveSpider.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.caveSpider.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Creeper.java b/src/main/java/net/minecraft/world/entity/monster/Creeper.java
index f6fa31549bf90c029a7bec379304ff9d64584927..353cc7ec4c2dcfc7fd218528524de47330ea4caa 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Creeper.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Creeper.java
@@ -138,6 +138,11 @@ public class Creeper extends Monster implements PowerableMob {
         }
         return getForwardMot() == 0 && getStrafeMot() == 0; // do not jump if standing still
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.creeper.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Drowned.java b/src/main/java/net/minecraft/world/entity/monster/Drowned.java
index 7e0aecd5dcaf0cbed282cc20d46ee0095d4ac841..107857a335d0660347a6bfd61f697c45589f01ad 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Drowned.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Drowned.java
@@ -83,6 +83,16 @@ public class Drowned extends Zombie implements RangedAttackMob {
     public boolean isControllable() {
         return level.purpurConfig().mobs.drowned.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.drowned.attributes.maxHealth);
+    }
+
+    @Override
+    protected void randomizeReinforcementsChance() {
+        this.getAttribute(Attributes.SPAWN_REINFORCEMENTS_CHANCE).setBaseValue(this.random.nextDouble() * this.level.purpurConfig().mobs.drowned.attributes.spawnReinforcements);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/ElderGuardian.java b/src/main/java/net/minecraft/world/entity/monster/ElderGuardian.java
index 6f04dc6769ae060136bea4a9d93c823ae54ad03c..d176f2247d1a35fc98aec084f76491a0cc7f8b69 100644
--- a/src/main/java/net/minecraft/world/entity/monster/ElderGuardian.java
+++ b/src/main/java/net/minecraft/world/entity/monster/ElderGuardian.java
@@ -48,6 +48,11 @@ public class ElderGuardian extends Guardian {
     public boolean isControllable() {
         return level.purpurConfig().mobs.elderGuardian.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.elderGuardian.attributes.maxHealth);
+    }
     // Purpur end
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/monster/EnderMan.java b/src/main/java/net/minecraft/world/entity/monster/EnderMan.java
index 4c12362aaa728f401ea5d4a37c4491742bce77fb..9f7bea31d9ec050da2c4e3b7745be356f586fd9e 100644
--- a/src/main/java/net/minecraft/world/entity/monster/EnderMan.java
+++ b/src/main/java/net/minecraft/world/entity/monster/EnderMan.java
@@ -102,6 +102,11 @@ public class EnderMan extends Monster implements NeutralMob {
     public boolean isControllable() {
         return level.purpurConfig().mobs.enderman.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.enderman.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Endermite.java b/src/main/java/net/minecraft/world/entity/monster/Endermite.java
index 343714b9d169cac68baefa81970ba598916c4db8..58af901fba251cfe9b4ba5c9f5574e1246990912 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Endermite.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Endermite.java
@@ -52,6 +52,11 @@ public class Endermite extends Monster {
     public boolean isControllable() {
         return level.purpurConfig().mobs.endermite.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.endermite.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Evoker.java b/src/main/java/net/minecraft/world/entity/monster/Evoker.java
index c4b72100f8000762ab995884aed5332f75305545..1927be1ae518b28d6fcbfc613743976d03fe009d 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Evoker.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Evoker.java
@@ -63,6 +63,11 @@ public class Evoker extends SpellcasterIllager {
     public boolean isControllable() {
         return level.purpurConfig().mobs.evoker.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.evoker.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Ghast.java b/src/main/java/net/minecraft/world/entity/monster/Ghast.java
index 0bd30a487b51179c8a338fb730f73048016791d1..ca2a27766bb64abbccb9fbd0dad01626e24319c7 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Ghast.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Ghast.java
@@ -76,6 +76,11 @@ public class Ghast extends FlyingMob implements Enemy {
             setDeltaMovement(mot.scale(0.9D));
         }
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.ghast.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Giant.java b/src/main/java/net/minecraft/world/entity/monster/Giant.java
index 7da7057a2b96df03eef5cb9ea95c1f5db738cbc7..0a7d42a1036efd16d7662b8dfb4da06471fdbdde 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Giant.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Giant.java
@@ -35,6 +35,13 @@ public class Giant extends Monster {
         this.goalSelector.addGoal(0, new org.purpurmc.purpur.entity.ai.HasRider(this));
         this.targetSelector.addGoal(0, new org.purpurmc.purpur.entity.ai.HasRider(this));
     }
+
+    @Override
+    protected void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.giant.attributes.maxHealth);
+        this.getAttribute(Attributes.MOVEMENT_SPEED).setBaseValue(this.level.purpurConfig().mobs.giant.attributes.movementSpeed);
+        this.getAttribute(Attributes.ATTACK_DAMAGE).setBaseValue(this.level.purpurConfig().mobs.giant.attributes.attackDamage);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Guardian.java b/src/main/java/net/minecraft/world/entity/monster/Guardian.java
index 2cb65f2018bb2ca17fd738a22c44a257d221dcd2..68e6fbff84364af7d82b0224194efc735d2f4cf6 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Guardian.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Guardian.java
@@ -92,6 +92,11 @@ public class Guardian extends Monster {
     public boolean isControllable() {
         return level.purpurConfig().mobs.guardian.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.guardian.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Husk.java b/src/main/java/net/minecraft/world/entity/monster/Husk.java
index 3adf82b8bd746766ed4698ee0a657cbe0a108c57..7b511b31211b013ca1d5138c8e346acb4a73c850 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Husk.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Husk.java
@@ -37,6 +37,16 @@ public class Husk extends Zombie {
     public boolean isControllable() {
         return level.purpurConfig().mobs.husk.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.husk.attributes.maxHealth);
+    }
+
+    @Override
+    protected void randomizeReinforcementsChance() {
+        this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.SPAWN_REINFORCEMENTS_CHANCE).setBaseValue(this.random.nextDouble() * this.level.purpurConfig().mobs.husk.attributes.spawnReinforcements);
+    }
     // Purpur end
 
     public static boolean checkHuskSpawnRules(EntityType<Husk> type, ServerLevelAccessor world, MobSpawnType spawnReason, BlockPos pos, RandomSource random) {
diff --git a/src/main/java/net/minecraft/world/entity/monster/Illusioner.java b/src/main/java/net/minecraft/world/entity/monster/Illusioner.java
index 1925d19fe914b724ea7e6d33135bbeb4142aeb97..151f366b5908e4893ac560b75aad2b9947615a02 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Illusioner.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Illusioner.java
@@ -74,6 +74,13 @@ public class Illusioner extends SpellcasterIllager implements RangedAttackMob {
     public boolean isControllable() {
         return level.purpurConfig().mobs.illusioner.ridable.controllable;
     }
+
+    @Override
+    protected void initAttributes() {
+        this.getAttribute(Attributes.MOVEMENT_SPEED).setBaseValue(this.level.purpurConfig().mobs.illusioner.attributes.movementSpeed);
+        this.getAttribute(Attributes.FOLLOW_RANGE).setBaseValue(this.level.purpurConfig().mobs.illusioner.attributes.followRange);
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.illusioner.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/MagmaCube.java b/src/main/java/net/minecraft/world/entity/monster/MagmaCube.java
index c0b5c1b6c7c90fe8d313ce6c4296750209e67549..53d6d2a17f202c6a257d381a98ffa6fc2baddfe3 100644
--- a/src/main/java/net/minecraft/world/entity/monster/MagmaCube.java
+++ b/src/main/java/net/minecraft/world/entity/monster/MagmaCube.java
@@ -45,6 +45,26 @@ public class MagmaCube extends Slime {
     public float getJumpPower() {
         return 0.42F * this.getBlockJumpFactor(); // from EntityLiving
     }
+
+    @Override
+    protected String getMaxHealthEquation() {
+        return this.level.purpurConfig().mobs.magmaCube.attributes.maxHealth;
+    }
+
+    @Override
+    protected String getAttackDamageEquation() {
+        return this.level.purpurConfig().mobs.magmaCube.attributes.attackDamage;
+    }
+
+    @Override
+    protected java.util.Map<Integer, Double> getMaxHealthCache() {
+        return this.level.purpurConfig().mobs.magmaCube.attributes.maxHealthCache;
+    }
+
+    @Override
+    protected java.util.Map<Integer, Double> getAttackDamageCache() {
+        return this.level.purpurConfig().mobs.magmaCube.attributes.attackDamageCache;
+    }
     // Purpur end
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/monster/Phantom.java b/src/main/java/net/minecraft/world/entity/monster/Phantom.java
index 296eba453144c323349bd705b7a74ae536bec9f8..2300b5a8b9660a9f1652d759e27f6f119fa12c29 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Phantom.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Phantom.java
@@ -116,6 +116,21 @@ public class Phantom extends FlyingMob implements Enemy {
         level.addFreshEntity(flames);
         return true;
     }
+
+    private double getFromCache(java.util.function.Supplier<String> equation, java.util.function.Supplier<java.util.Map<Integer, Double>> cache, java.util.function.Supplier<Double> defaultValue) {
+        int size = getPhantomSize();
+        Double value = cache.get().get(size);
+        if (value == null) {
+            try {
+                scriptEngine.eval("size = " + size);
+                value = (double) scriptEngine.eval(equation.get());
+            } catch (Exception e) {
+                value = defaultValue.get();
+            }
+            cache.get().put(size, value);
+        }
+        return value;
+    }
     // Purpur end
 
     @Override
@@ -150,7 +165,10 @@ public class Phantom extends FlyingMob implements Enemy {
 
     private void updatePhantomSizeInfo() {
         this.refreshDimensions();
-        this.getAttribute(Attributes.ATTACK_DAMAGE).setBaseValue((double) (6 + this.getPhantomSize()));
+        // Purpur start
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(getFromCache(() -> this.level.purpurConfig().mobs.phantom.attributes.maxHealth, () -> this.level.purpurConfig().mobs.phantom.attributes.maxHealthCache, () -> 20.0D));
+        this.getAttribute(Attributes.ATTACK_DAMAGE).setBaseValue(getFromCache(() -> this.level.purpurConfig().mobs.phantom.attributes.attackDamage, () -> this.level.purpurConfig().mobs.phantom.attributes.attackDamageCache, () -> (double) 6 + this.getPhantomSize()));
+        // Purpur end
     }
 
     public int getPhantomSize() {
diff --git a/src/main/java/net/minecraft/world/entity/monster/Pillager.java b/src/main/java/net/minecraft/world/entity/monster/Pillager.java
index f4eb5ba4affa5742546b8aa75357ab7e9530110d..4e740904d271ec26f719337d4a300ccf01983edd 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Pillager.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Pillager.java
@@ -78,6 +78,11 @@ public class Pillager extends AbstractIllager implements CrossbowAttackMob, Inve
     public boolean isControllable() {
         return level.purpurConfig().mobs.pillager.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.pillager.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Ravager.java b/src/main/java/net/minecraft/world/entity/monster/Ravager.java
index 49b572d6b685d21eb43eaba85fcfbf1fc2325826..487ea00a7cac91f58542ad4943ae0c78263bd7dd 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Ravager.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Ravager.java
@@ -90,6 +90,11 @@ public class Ravager extends Raider {
         super.onMount(rider);
         getNavigation().stop();
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.ravager.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Shulker.java b/src/main/java/net/minecraft/world/entity/monster/Shulker.java
index 082c7191d08d037d32da84cd9361c7936472ca52..7c67522e34dabf2bd950fc553e370056a3f4c50f 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Shulker.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Shulker.java
@@ -107,6 +107,11 @@ public class Shulker extends AbstractGolem implements Enemy {
     public boolean isControllable() {
         return level.purpurConfig().mobs.shulker.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.shulker.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Silverfish.java b/src/main/java/net/minecraft/world/entity/monster/Silverfish.java
index cdcb977ac24617fa39e8b991b96ff2f76cd9cd05..60541125db54bc7d5b1d31f967ed3206ff402acc 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Silverfish.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Silverfish.java
@@ -57,6 +57,11 @@ public class Silverfish extends Monster {
     public boolean isControllable() {
         return level.purpurConfig().mobs.silverfish.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.silverfish.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Skeleton.java b/src/main/java/net/minecraft/world/entity/monster/Skeleton.java
index 721042838cbc31d0a71c6b32fc3b6ede646a945d..f4d13879373e45d19e9222eada339f235d2a4fc7 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Skeleton.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Skeleton.java
@@ -40,6 +40,11 @@ public class Skeleton extends AbstractSkeleton {
     public boolean isControllable() {
         return level.purpurConfig().mobs.skeleton.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.skeleton.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Slime.java b/src/main/java/net/minecraft/world/entity/monster/Slime.java
index ad6c0e138840ee0c109bf78910ecd36550a8bb33..dc6f9c3d7e953340d510d77e7554be6bf1936a36 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Slime.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Slime.java
@@ -103,6 +103,37 @@ public class Slime extends Mob implements Enemy {
         }
         return true; // do not jump() in wasd controller, let vanilla controller handle
     }
+
+    protected String getMaxHealthEquation() {
+        return this.level.purpurConfig().mobs.slime.attributes.maxHealth;
+    }
+
+    protected String getAttackDamageEquation() {
+        return this.level.purpurConfig().mobs.slime.attributes.attackDamage;
+    }
+
+    protected java.util.Map<Integer, Double> getMaxHealthCache() {
+        return this.level.purpurConfig().mobs.slime.attributes.maxHealthCache;
+    }
+
+    protected java.util.Map<Integer, Double> getAttackDamageCache() {
+        return this.level.purpurConfig().mobs.slime.attributes.attackDamageCache;
+    }
+
+    protected double getFromCache(java.util.function.Supplier<String> equation, java.util.function.Supplier<java.util.Map<Integer, Double>> cache, java.util.function.Supplier<Double> defaultValue) {
+        int size = getSize();
+        Double value = cache.get().get(size);
+        if (value == null) {
+            try {
+                scriptEngine.eval("size = " + size);
+                value = (double) scriptEngine.eval(equation.get());
+            } catch (Exception e) {
+                value = defaultValue.get();
+            }
+            cache.get().put(size, value);
+        }
+        return value;
+    }
     // Purpur end
 
     @Override
@@ -132,9 +163,9 @@ public class Slime extends Mob implements Enemy {
         this.entityData.set(Slime.ID_SIZE, j);
         this.reapplyPosition();
         this.refreshDimensions();
-        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue((double) (j * j));
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(getFromCache(this::getMaxHealthEquation, this::getMaxHealthCache, () -> (double) size * size)); // Purpur
         this.getAttribute(Attributes.MOVEMENT_SPEED).setBaseValue((double) (0.2F + 0.1F * (float) j));
-        this.getAttribute(Attributes.ATTACK_DAMAGE).setBaseValue((double) j);
+        this.getAttribute(Attributes.ATTACK_DAMAGE).setBaseValue(getFromCache(this::getAttackDamageEquation, this::getAttackDamageCache, () -> (double) j)); // Purpur
         if (heal) {
             this.setHealth(this.getMaxHealth());
         }
diff --git a/src/main/java/net/minecraft/world/entity/monster/Spider.java b/src/main/java/net/minecraft/world/entity/monster/Spider.java
index d183b20bf953e021f3540ecc717d9ac88419fe72..11e7acd6fbbd5dfb51f4be9a4b29ca499d2f6c19 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Spider.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Spider.java
@@ -66,6 +66,11 @@ public class Spider extends Monster {
     public boolean isControllable() {
         return level.purpurConfig().mobs.spider.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.spider.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Stray.java b/src/main/java/net/minecraft/world/entity/monster/Stray.java
index 9edf0140e0b54f95501e50a4e7607fdb3c4c83b4..32fed4867416434d9dd01bb1b07dfe499b1c4850 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Stray.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Stray.java
@@ -36,6 +36,11 @@ public class Stray extends AbstractSkeleton {
     public boolean isControllable() {
         return level.purpurConfig().mobs.stray.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.stray.attributes.maxHealth);
+    }
     // Purpur end
 
     public static boolean checkStraySpawnRules(EntityType<Stray> type, ServerLevelAccessor world, MobSpawnType spawnReason, BlockPos pos, RandomSource random) {
diff --git a/src/main/java/net/minecraft/world/entity/monster/Strider.java b/src/main/java/net/minecraft/world/entity/monster/Strider.java
index ce39538b0ad2402f46cda8d83eb2a89ff086a96f..c65d8d7dcf4e4fea3c82d7c373e264db17b4a983 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Strider.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Strider.java
@@ -111,6 +111,11 @@ public class Strider extends Animal implements ItemSteerable, Saddleable {
     public boolean isControllable() {
         return level.purpurConfig().mobs.strider.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.strider.attributes.maxHealth);
+    }
     // Purpur end
 
     public static boolean checkStriderSpawnRules(EntityType<Strider> type, LevelAccessor world, MobSpawnType spawnReason, BlockPos pos, RandomSource random) {
diff --git a/src/main/java/net/minecraft/world/entity/monster/Vex.java b/src/main/java/net/minecraft/world/entity/monster/Vex.java
index 6aca2ff6a73f87a56629983d9179cd9e66b24599..8d05ad14028dd5f92de539ad61b95ea9b90c1c3d 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Vex.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Vex.java
@@ -101,6 +101,11 @@ public class Vex extends Monster {
     public boolean causeFallDamage(float fallDistance, float damageMultiplier, DamageSource damageSource) {
         return false; //  no fall damage please
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.vex.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Vindicator.java b/src/main/java/net/minecraft/world/entity/monster/Vindicator.java
index f9c64c85e8f3f5fdfa9d25f7f83f5af8883c82a1..4e2b4d1720513e0ad4496f614d20acbd561c60e5 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Vindicator.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Vindicator.java
@@ -73,6 +73,11 @@ public class Vindicator extends AbstractIllager {
     public boolean isControllable() {
         return level.purpurConfig().mobs.vindicator.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.vindicator.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Witch.java b/src/main/java/net/minecraft/world/entity/monster/Witch.java
index 593fbd291a8f1965fd98c35b5551095ff4d3e100..ab26e76c64d7a4e7beea03e2c9186d0b94dde55f 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Witch.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Witch.java
@@ -74,6 +74,11 @@ public class Witch extends Raider implements RangedAttackMob {
     public boolean isControllable() {
         return level.purpurConfig().mobs.witch.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.witch.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/WitherSkeleton.java b/src/main/java/net/minecraft/world/entity/monster/WitherSkeleton.java
index 2e40aa201f95b6152089da0542a3c33f6c52a635..3d93a8dec4c833dcff97bbf635a9d9c82dd474bf 100644
--- a/src/main/java/net/minecraft/world/entity/monster/WitherSkeleton.java
+++ b/src/main/java/net/minecraft/world/entity/monster/WitherSkeleton.java
@@ -50,6 +50,11 @@ public class WitherSkeleton extends AbstractSkeleton {
     public boolean isControllable() {
         return level.purpurConfig().mobs.witherSkeleton.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.witherSkeleton.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Zoglin.java b/src/main/java/net/minecraft/world/entity/monster/Zoglin.java
index d9e711bce48a2ad7499e38b2b01b886769563f6d..2ab2b4eaf05f9e3ef49b266de56a93b77beb926a 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Zoglin.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Zoglin.java
@@ -83,6 +83,11 @@ public class Zoglin extends Monster implements Enemy, HoglinBase {
     public boolean isControllable() {
         return level.purpurConfig().mobs.zoglin.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.zoglin.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Zombie.java b/src/main/java/net/minecraft/world/entity/monster/Zombie.java
index 903b116409cfbe02c4d0b49bd802fc7b59832934..9c7404f95796ed197d117f6ab3f5acd845d7eb29 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Zombie.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Zombie.java
@@ -120,6 +120,11 @@ public class Zombie extends Monster {
     public boolean isControllable() {
         return level.purpurConfig().mobs.zombie.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.zombie.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
@@ -607,7 +612,7 @@ public class Zombie extends Monster {
     }
 
     protected void randomizeReinforcementsChance() {
-        this.getAttribute(Attributes.SPAWN_REINFORCEMENTS_CHANCE).setBaseValue(this.random.nextDouble() * 0.10000000149011612D);
+        this.getAttribute(Attributes.SPAWN_REINFORCEMENTS_CHANCE).setBaseValue(this.random.nextDouble() * this.level.purpurConfig().mobs.zombie.attributes.spawnReinforcements); // Purpur
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/ZombieVillager.java b/src/main/java/net/minecraft/world/entity/monster/ZombieVillager.java
index f591f938d7306f0e2c2fc6f5e7cd7d02db9cd719..5b0f3479bd78bc9a0c6d3ab15529b1e1905b8cf2 100644
--- a/src/main/java/net/minecraft/world/entity/monster/ZombieVillager.java
+++ b/src/main/java/net/minecraft/world/entity/monster/ZombieVillager.java
@@ -93,6 +93,16 @@ public class ZombieVillager extends Zombie implements VillagerDataHolder {
     public boolean isControllable() {
         return level.purpurConfig().mobs.zombieVillager.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.zombieVillager.attributes.maxHealth);
+    }
+
+    @Override
+    protected void randomizeReinforcementsChance() {
+        this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.SPAWN_REINFORCEMENTS_CHANCE).setBaseValue(this.random.nextDouble() * this.level.purpurConfig().mobs.zombieVillager.attributes.spawnReinforcements);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/ZombifiedPiglin.java b/src/main/java/net/minecraft/world/entity/monster/ZombifiedPiglin.java
index be309e4d5d4fffede407371bd3fa37223cbf71c0..592825523495692453aa31a2b77bb987b0b9a639 100644
--- a/src/main/java/net/minecraft/world/entity/monster/ZombifiedPiglin.java
+++ b/src/main/java/net/minecraft/world/entity/monster/ZombifiedPiglin.java
@@ -74,6 +74,11 @@ public class ZombifiedPiglin extends Zombie implements NeutralMob {
     public boolean isControllable() {
         return level.purpurConfig().mobs.zombifiedPiglin.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.zombifiedPiglin.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
@@ -258,7 +263,7 @@ public class ZombifiedPiglin extends Zombie implements NeutralMob {
 
     @Override
     protected void randomizeReinforcementsChance() {
-        this.getAttribute(Attributes.SPAWN_REINFORCEMENTS_CHANCE).setBaseValue(0.0D);
+        this.getAttribute(Attributes.SPAWN_REINFORCEMENTS_CHANCE).setBaseValue(this.random.nextDouble() * this.level.purpurConfig().mobs.zombifiedPiglin.attributes.spawnReinforcements); // Purpur
     }
 
     @Nullable
diff --git a/src/main/java/net/minecraft/world/entity/monster/hoglin/Hoglin.java b/src/main/java/net/minecraft/world/entity/monster/hoglin/Hoglin.java
index 776c5570ae9ffce896a11d15bb90228924bf5dad..e837aa96800c68aff867d585eecabe52a27aaca1 100644
--- a/src/main/java/net/minecraft/world/entity/monster/hoglin/Hoglin.java
+++ b/src/main/java/net/minecraft/world/entity/monster/hoglin/Hoglin.java
@@ -82,6 +82,11 @@ public class Hoglin extends Animal implements Enemy, HoglinBase {
     public boolean isControllable() {
         return level.purpurConfig().mobs.hoglin.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.hoglin.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/piglin/Piglin.java b/src/main/java/net/minecraft/world/entity/monster/piglin/Piglin.java
index ca2da07797b2e7a2152f58ba804b021916402df1..b493694ae52bebded339cb0c4d2e94f927c0991f 100644
--- a/src/main/java/net/minecraft/world/entity/monster/piglin/Piglin.java
+++ b/src/main/java/net/minecraft/world/entity/monster/piglin/Piglin.java
@@ -110,6 +110,11 @@ public class Piglin extends AbstractPiglin implements CrossbowAttackMob, Invento
     public boolean isControllable() {
         return level.purpurConfig().mobs.piglin.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.piglin.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/piglin/PiglinBrute.java b/src/main/java/net/minecraft/world/entity/monster/piglin/PiglinBrute.java
index 89a5c349a7f8f6fa9952d5f73563ab8419678476..1340dbfd53cb9565f71b308634ffb79a7b428bc7 100644
--- a/src/main/java/net/minecraft/world/entity/monster/piglin/PiglinBrute.java
+++ b/src/main/java/net/minecraft/world/entity/monster/piglin/PiglinBrute.java
@@ -56,6 +56,11 @@ public class PiglinBrute extends AbstractPiglin {
     public boolean isControllable() {
         return level.purpurConfig().mobs.piglinBrute.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.piglinBrute.attributes.maxHealth);
+    }
     // Purpur end
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/npc/Villager.java b/src/main/java/net/minecraft/world/entity/npc/Villager.java
index 3dd587ff141c8f32a14f602db8b9e073c9d914e3..aee46cbe65ed12a687badd6bdf6fbf75016a104b 100644
--- a/src/main/java/net/minecraft/world/entity/npc/Villager.java
+++ b/src/main/java/net/minecraft/world/entity/npc/Villager.java
@@ -173,6 +173,11 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
     protected void registerGoals() {
         this.goalSelector.addGoal(0, new org.purpurmc.purpur.entity.ai.HasRider(this));
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.villager.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/npc/WanderingTrader.java b/src/main/java/net/minecraft/world/entity/npc/WanderingTrader.java
index 6ec4baa6d841836d2adee0c318505cac7102cd1b..24b9539cb294c7658d50afec5125e4fd7aa33b91 100644
--- a/src/main/java/net/minecraft/world/entity/npc/WanderingTrader.java
+++ b/src/main/java/net/minecraft/world/entity/npc/WanderingTrader.java
@@ -81,6 +81,11 @@ public class WanderingTrader extends net.minecraft.world.entity.npc.AbstractVill
     public boolean isControllable() {
         return level.purpurConfig().mobs.wanderingTrader.ridable.controllable;
     }
+
+    @Override
+    public void initAttributes() {
+        this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig().mobs.wanderingTrader.attributes.maxHealth);
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/org/purpurmc/purpur/configuration/PurpurWorldConfiguration.java b/src/main/java/org/purpurmc/purpur/configuration/PurpurWorldConfiguration.java
index cff8de7bf0810b77045832e7eeee0486c0d77708..8972cb620b378cd877d09feffa77b79d6fdaed47 100644
--- a/src/main/java/org/purpurmc/purpur/configuration/PurpurWorldConfiguration.java
+++ b/src/main/java/org/purpurmc/purpur/configuration/PurpurWorldConfiguration.java
@@ -7,6 +7,9 @@ import net.minecraft.world.entity.animal.Fox;
 import net.minecraft.world.entity.npc.Villager;
 import org.spongepowered.configurate.objectmapping.meta.Setting;
 
+import java.util.HashMap;
+import java.util.Map;
+
 public class PurpurWorldConfiguration extends ConfigurationPart {
     static final int CURRENT_VERSION = 27;
 
@@ -29,6 +32,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean enabled = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 14.0D;
+            }
         }
 
         public Bat bat;
@@ -40,6 +48,18 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean controllable = true;
                 public double maxY = 320D;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 6.0D;
+                public double followRange = 16.0D;
+                public double knockbackResistance = 0.0D;
+                public double movementSpeed = 0.6D;
+                public double flyingSpeed = 0.6D;
+                public double armor = 0.0D;
+                public double armorToughness = 0.0D;
+                public double attackKnockback = 0.0D;
+            }
         }
 
         public Bee bee;
@@ -51,6 +71,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean controllable = true;
                 public double maxY = 320D;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 10.0D;
+            }
         }
 
         public Blaze blaze;
@@ -62,6 +87,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean controllable = true;
                 public double maxY = 320D;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 20.0D;
+            }
         }
 
         public Cat cat;
@@ -72,6 +102,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 10.0D;
+            }
         }
 
         public CaveSpider caveSpider;
@@ -82,6 +117,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 12.0D;
+            }
         }
 
         public Chicken chicken;
@@ -92,6 +132,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 4.0D;
+            }
         }
 
         public Cod cod;
@@ -101,6 +146,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean enabled = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 3.0D;
+            }
         }
 
         public Cow cow;
@@ -111,6 +161,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 10.0D;
+            }
         }
 
         public Creeper creeper;
@@ -121,6 +176,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 20.0D;
+            }
         }
 
         public Dolphin dolphin;
@@ -137,6 +197,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public float speed = 1.0F;
                 public float damage = 2.0F;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 10.0D;
+            }
         }
 
         public Donkey donkey;
@@ -145,6 +210,16 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
             public class Ridable extends ConfigurationPart {
                 public boolean inWater = false;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealthMin = 15.0D;
+                public double maxHealthMax = 30.0D;
+                public double jumpStrengthMin = 0.5D;
+                public double jumpStrengthMax = 0.5D;
+                public double movementSpeedMin = 0.175D;
+                public double movementSpeedMax = 0.175D;
+            }
         }
 
         public Drowned drowned;
@@ -155,6 +230,12 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 20.0D;
+                public double spawnReinforcements = 0.1D;
+            }
         }
 
         public ElderGuardian elderGuardian;
@@ -164,6 +245,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean enabled = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 80.0D;
+            }
         }
 
         public EnderDragon enderDragon;
@@ -175,6 +261,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean controllable = true;
                 public double maxY = 320D;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 200.0D;
+            }
         }
 
         public Enderman enderman;
@@ -185,6 +276,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 40.0D;
+            }
         }
 
         public Endermite endermite;
@@ -195,6 +291,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 8.0D;
+            }
         }
 
         public Evoker evoker;
@@ -205,6 +306,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 24.0D;
+            }
         }
 
         public Fox fox;
@@ -215,6 +321,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 10.0D;
+            }
         }
 
         public Ghast ghast;
@@ -226,6 +337,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean controllable = true;
                 public double maxY = 320D;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 10.0D;
+            }
         }
 
         public Giant giant;
@@ -236,6 +352,13 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 100.0D;
+                public double attackDamage = 50.0D;
+                public double movementSpeed = 0.5D;
+            }
         }
 
         public GlowSquid glowSquid;
@@ -245,6 +368,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean enabled = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 10.0D;
+            }
         }
 
         public Goat goat;
@@ -255,6 +383,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 10.0D;
+            }
         }
 
         public Guardian guardian;
@@ -264,6 +397,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean enabled = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 30.0D;
+            }
         }
 
         public Hoglin hoglin;
@@ -274,6 +412,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 40.0D;
+            }
         }
 
         public Horse horse;
@@ -282,6 +425,16 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
             public class Ridable extends ConfigurationPart {
                 public boolean inWater = false;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealthMin = 15.0D;
+                public double maxHealthMax = 30.0D;
+                public double jumpStrengthMin = 0.4D;
+                public double jumpStrengthMax = 1.0D;
+                public double movementSpeedMin = 0.1125D;
+                public double movementSpeedMax = 0.3375D;
+            }
         }
 
         public Husk husk;
@@ -292,6 +445,12 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 20.0D;
+                public double spawnReinforcements = 0.1D;
+            }
         }
 
         public Illusioner illusioner;
@@ -302,6 +461,13 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 32.0D;
+                public double followRange = 18.0D;
+                public double movementSpeed = 0.5D;
+            }
         }
 
         public IronGolem ironGolem;
@@ -314,6 +480,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 100.0D;
+            }
         }
 
         public Llama llama;
@@ -324,6 +495,16 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealthMin = 15.0D;
+                public double maxHealthMax = 30.0D;
+                public double jumpStrengthMin = 0.5D;
+                public double jumpStrengthMax = 0.5D;
+                public double movementSpeedMin = 0.175D;
+                public double movementSpeedMax = 0.175D;
+            }
         }
 
         public MagmaCube magmaCube;
@@ -334,6 +515,21 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart.Post {
+                public String maxHealth = "size * size";
+                public String attackDamage = "size";
+
+                public transient Map<Integer, Double> maxHealthCache = new HashMap<>();
+                public transient Map<Integer, Double> attackDamageCache = new HashMap<>();
+
+                @Override
+                public void postProcess() {
+                    maxHealthCache.clear();
+                    attackDamageCache.clear();
+                }
+            }
         }
 
         public Mooshroom mooshroom;
@@ -344,6 +540,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 10.0D;
+            }
         }
 
         public Mule mule;
@@ -352,6 +553,16 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
             public class Ridable extends ConfigurationPart {
                 public boolean inWater = false;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealthMin = 15.0D;
+                public double maxHealthMax = 30.0D;
+                public double jumpStrengthMin = 0.5D;
+                public double jumpStrengthMax = 0.5D;
+                public double movementSpeedMin = 0.175D;
+                public double movementSpeedMax = 0.175D;
+            }
         }
 
         public Ocelot ocelot;
@@ -362,6 +573,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 10.0D;
+            }
         }
 
         public Panda panda;
@@ -372,6 +588,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 20.0D;
+            }
         }
 
         public Parrot parrot;
@@ -383,6 +604,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean controllable = true;
                 public double maxY = 320D;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 6.0D;
+            }
         }
 
         public Phantom phantom;
@@ -401,6 +627,21 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public int fireTime = 8;
                 public boolean allowGriefing = false;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart.Post {
+                public String maxHealth = "20.0";
+                public String attackDamage = "6 + size";
+
+                public transient Map<Integer, Double> maxHealthCache = new HashMap<>();
+                public transient Map<Integer, Double> attackDamageCache = new HashMap<>();
+
+                @Override
+                public void postProcess() {
+                    maxHealthCache.clear();
+                    attackDamageCache.clear();
+                }
+            }
         }
 
         public Pig pig;
@@ -411,6 +652,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 10.0D;
+            }
         }
 
         public Piglin piglin;
@@ -421,6 +667,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 16.0D;
+            }
         }
 
         public PiglinBrute piglinBrute;
@@ -431,6 +682,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 50.0D;
+            }
         }
 
         public Pillager pillager;
@@ -441,6 +697,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 24.0D;
+            }
         }
 
         public PolarBear polarBear;
@@ -451,6 +712,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 30.0D;
+            }
         }
 
         public Pufferfish pufferfish;
@@ -460,6 +726,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean enabled = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 3.0D;
+            }
         }
 
         public Rabbit rabbit;
@@ -470,6 +741,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 3.0D;
+            }
         }
 
         public Ravager ravager;
@@ -480,6 +756,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 100.0D;
+            }
         }
 
         public Salmon salmon;
@@ -489,6 +770,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean enabled = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 3.0D;
+            }
         }
 
         public Sheep sheep;
@@ -499,6 +785,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 8.0D;
+            }
         }
 
         public Shulker shulker;
@@ -509,6 +800,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 30.0D;
+            }
         }
 
         public Silverfish silverfish;
@@ -519,6 +815,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 8.0D;
+            }
         }
 
         public Skeleton skeleton;
@@ -529,6 +830,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 20.0D;
+            }
         }
 
         public SkeletonHorse skeletonHorse;
@@ -539,6 +845,16 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
             public class Ridable extends ConfigurationPart {
                 public boolean inWater = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealthMin = 15.0D;
+                public double maxHealthMax = 15.0D;
+                public double jumpStrengthMin = 0.4D;
+                public double jumpStrengthMax = 1.0D;
+                public double movementSpeedMin = 0.2D;
+                public double movementSpeedMax = 0.2D;
+            }
         }
 
         public Slime slime;
@@ -549,6 +865,21 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart.Post {
+                public String maxHealth = "size * size";
+                public String attackDamage = "size";
+
+                public transient Map<Integer, Double> maxHealthCache = new HashMap<>();
+                public transient Map<Integer, Double> attackDamageCache = new HashMap<>();
+
+                @Override
+                public void postProcess() {
+                    maxHealthCache.clear();
+                    attackDamageCache.clear();
+                }
+            }
         }
 
         public SnowGolem snowGolem;
@@ -560,6 +891,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean controllable = true;
                 public boolean leavesTrail = false;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 4.0D;
+            }
         }
 
         public Squid squid;
@@ -569,6 +905,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean enabled = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 10.0D;
+            }
         }
 
         public Spider spider;
@@ -579,6 +920,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 16.0D;
+            }
         }
 
         public Stray stray;
@@ -589,6 +935,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 20.0D;
+            }
         }
 
         public Strider strider;
@@ -599,6 +950,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 20.0D;
+            }
         }
 
         public TraderLlama traderLlama;
@@ -609,6 +965,16 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealthMin = 15.0D;
+                public double maxHealthMax = 30.0D;
+                public double jumpStrengthMin = 0.5D;
+                public double jumpStrengthMax = 0.5D;
+                public double movementSpeedMin = 0.175D;
+                public double movementSpeedMax = 0.175D;
+            }
         }
 
         public TropicalFish tropicalFish;
@@ -618,6 +984,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean enabled = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 3.0D;
+            }
         }
 
         public Turtle turtle;
@@ -628,6 +999,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 30.0D;
+            }
         }
 
         public Vex vex;
@@ -639,6 +1015,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean controllable = true;
                 public double maxY = 320D;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 14.0D;
+            }
         }
 
         public Villager villager;
@@ -649,6 +1030,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 20.0D;
+            }
         }
 
         public Vindicator vindicator;
@@ -659,6 +1045,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 24.0D;
+            }
         }
 
         public WanderingTrader wanderingTrader;
@@ -669,6 +1060,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 20.0D;
+            }
         }
 
         public Witch witch;
@@ -679,6 +1075,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 26.0D;
+            }
         }
 
         public Wither wither;
@@ -690,6 +1091,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean controllable = true;
                 public double maxY = 320D;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 300.0D;
+            }
         }
 
         public WitherSkeleton witherSkeleton;
@@ -700,6 +1106,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 20.0D;
+            }
         }
 
         public Wolf wolf;
@@ -710,6 +1121,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 8.0D;
+            }
         }
 
         public Zoglin zoglin;
@@ -720,6 +1136,11 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 40.0D;
+            }
         }
 
         public Zombie zombie;
@@ -730,6 +1151,12 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 20.0D;
+                public double spawnReinforcements = 0.1D;
+            }
         }
 
         public ZombieHorse zombieHorse;
@@ -740,6 +1167,16 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
             public class Ridable extends ConfigurationPart {
                 public boolean inWater = false;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealthMin = 15.0D;
+                public double maxHealthMax = 15.0D;
+                public double jumpStrengthMin = 0.4D;
+                public double jumpStrengthMax = 1.0D;
+                public double movementSpeedMin = 0.2D;
+                public double movementSpeedMax = 0.2D;
+            }
         }
 
         public ZombieVillager zombieVillager;
@@ -750,6 +1187,12 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 20.0D;
+                public double spawnReinforcements = 0.1D;
+            }
         }
 
         public ZombifiedPiglin zombifiedPiglin;
@@ -760,6 +1203,12 @@ public class PurpurWorldConfiguration extends ConfigurationPart {
                 public boolean inWater = false;
                 public boolean controllable = true;
             }
+
+            public Attributes attributes;
+            public class Attributes extends ConfigurationPart {
+                public double maxHealth = 20.0D;
+                public double spawnReinforcements = 0.0D;
+            }
         }
     }
 }
